{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-game-types.ts","webpack:///src/app/app-routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/aroundclock/around-clock.component.ts","webpack:///src/app/aroundclock/around-clock.component.html","webpack:///src/app/aroundclock/around-clock.module.ts","webpack:///src/app/aroundclock/models/around-clock.settings.model.ts","webpack:///src/app/aroundclock/models/around-clock.state.model.ts","webpack:///src/app/capture-the-flag/capture-the-flag.component.ts","webpack:///src/app/capture-the-flag/capture-the-flag.component.html","webpack:///src/app/capture-the-flag/capture-the-flag.module.ts","webpack:///src/app/capture-the-flag/models/capture-the-flag.settings.model.ts","webpack:///src/app/capture-the-flag/models/capture-the-flag.state.model.ts","webpack:///src/app/cricket/cricket.component.ts","webpack:///src/app/cricket/cricket.component.html","webpack:///src/app/cricket/cricket.module.ts","webpack:///src/app/cricket/models/cricet.settings.model.ts","webpack:///src/app/cricket/models/cricet.state.model.ts","webpack:///src/app/duel/duel.component.ts","webpack:///src/app/duel/duel.component.html","webpack:///src/app/duel/duel.module.ts","webpack:///src/app/duel/models/duel.settings.model.ts","webpack:///src/app/duel/models/duel.state.model.ts","webpack:///src/app/fives/fives.component.ts","webpack:///src/app/fives/fives.component.html","webpack:///src/app/fives/fives.module.ts","webpack:///src/app/fives/models/fives.settings.model.ts","webpack:///src/app/hare-and-hound/hare-and-hound.component.ts","webpack:///src/app/hare-and-hound/hare-and-hound.component.html","webpack:///src/app/hare-and-hound/hare-and-hound.module.ts","webpack:///src/app/hare-and-hound/models/hare-and-hound.settings.model.ts","webpack:///src/app/hare-and-hound/models/hare-and-hound.state.model.ts","webpack:///src/app/imitator/imitator.component.ts","webpack:///src/app/imitator/imitator.component.html","webpack:///src/app/imitator/imitator.module.ts","webpack:///src/app/imitator/models/imitator.settings.model.ts","webpack:///src/app/imitator/models/imitator.state.model.ts","webpack:///src/app/killer/killer.component.ts","webpack:///src/app/killer/killer.component.html","webpack:///src/app/killer/killer.module.ts","webpack:///src/app/killer/models/killer.settings.model.ts","webpack:///src/app/killer/models/killer.state.model.ts","webpack:///src/app/knockout/knockout.component.ts","webpack:///src/app/knockout/knockout.component.html","webpack:///src/app/knockout/knockout.module.ts","webpack:///src/app/knockout/models/knockout.settings.model.ts","webpack:///src/app/knockout/models/knockout.state.model.ts","webpack:///src/app/material.module.ts","webpack:///src/app/route-animation.ts","webpack:///src/app/scam/models/scam.settings.model.ts","webpack:///src/app/scam/scam.component.ts","webpack:///src/app/scam/scam.component.html","webpack:///src/app/scam/scam.module.ts","webpack:///src/app/shanghai/models/shanghai.settings.model.ts","webpack:///src/app/shanghai/models/shanghai.state.model.ts","webpack:///src/app/shanghai/shanghai.component.ts","webpack:///src/app/shanghai/shanghai.component.html","webpack:///src/app/shanghai/shanghai.module.ts","webpack:///src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","webpack:///src/app/shared/components/confirm-dialog/confirm-dialog.component.html","webpack:///src/app/shared/components/darts-table/darts-table-dialog.component.ts","webpack:///src/app/shared/components/darts-table/darts-table-dialog.component.html","webpack:///src/app/shared/components/dialog/dialog.component.ts","webpack:///src/app/shared/components/dialog/dialog.component.html","webpack:///src/app/shared/components/game-history-dialog/game-history-dialog.component.ts","webpack:///src/app/shared/components/game-history-dialog/game-history-dialog.component.html","webpack:///src/app/shared/components/game-statistics-dialog/game-statistics-dialog.component.ts","webpack:///src/app/shared/components/game-statistics-dialog/game-statistics-dialog.component.html","webpack:///src/app/shared/components/game-toolbar/game-toolbar.component.ts","webpack:///src/app/shared/components/game-toolbar/game-toolbar.component.html","webpack:///src/app/shared/components/game-type-statistics-dialog/game-type-statistics-dialog.component.ts","webpack:///src/app/shared/components/game-type-statistics-dialog/game-type-statistics-dialog.component.html","webpack:///src/app/shared/components/menu/menu.component.ts","webpack:///src/app/shared/components/menu/menu.component.html","webpack:///src/app/shared/components/number-plate/number-plate.component.ts","webpack:///src/app/shared/components/number-plate/number-plate.component.html","webpack:///src/app/shared/components/player-score/player-score.component.ts","webpack:///src/app/shared/components/player-score/player-score.component.html","webpack:///src/app/shared/components/player-settings/player-settings.component.ts","webpack:///src/app/shared/components/player-settings/player-settings.component.html","webpack:///src/app/shared/components/settings/settings.component.ts","webpack:///src/app/shared/components/settings/settings.component.html","webpack:///src/app/shared/models/application-settings.model.ts","webpack:///src/app/shared/models/field-value.model.ts","webpack:///src/app/shared/models/game-statistics.model.ts","webpack:///src/app/shared/models/player.model.ts","webpack:///src/app/shared/models/playground-state.model.ts","webpack:///src/app/shared/models/playground.model.ts","webpack:///src/app/shared/models/throw.model.ts","webpack:///src/app/shared/services/application-state.service.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/services/game.service.ts","webpack:///src/app/shared/services/sound.service.ts","webpack:///src/app/shared/services/statistics.service.ts","webpack:///src/app/shared/services/storage.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/x01/models/x01.settings.model.ts","webpack:///src/app/x01/x01.component.ts","webpack:///src/app/x01/x01.component.html","webpack:///src/app/x01/x01.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","data","name","color","icon","component","loadChildren","redirectTo","AppComponent","applicationStateService","soundService","document","addEventListener","event","scale","preventDefault","passive","audioElement","audioElementRef","nativeElement","selector","templateUrl","styleUrls","animations","AppModule","forRoot","imports","declarations","bootstrap","settings","AroundClockComponent","application","game","route","dialogService","statisticsService","hiddenInfo","player","fieldIndex","score","scoreReal","state","getPlayerState","originalMulti","multiplier","getFieldIndex","actFieldIndex","fields","length","increaseActFieldIndex","jump","saboteur","promoter","realFieldIndex","players","filter","p","forEach","otherPlayer","otherPlayerState","decreaseActFieldIndex","setWin","isTheLastThrow","punishment","life","multi","i","t","throwsHistory","no","nextPlayer","firstDeath","activePlayers","isInactive","getTheBestPlayers","getActualPlayer","style","bullPos","findIndex","f","playerPos","diff","isFieldEnabled","some","owners","map","join","actualOwn","setStyle","max","index","AroundClockModule","forChild","AroundClockSettings","getBaseFields","getClockFields","getAnticlockFields","getRandom","reverse","slice","getRecurrence","getPirate","getTripleClockFields","getZoneClockFields","Array","size","randomFields","random","Math","floor","push","AroundClockState","value","CaptureTheFlagComponent","isActiveField","increaseFieldCount","getFieldCount","noScore","checkWinner","actualFieldIndex","isTheBestPlayer","fieldCount","str","min","randomCity","randomCountry","randomContinent","indexOf","find","winners","win","clone","losers","w","c","total","sum","reduce","a","b","CaptureTheFlagModule","CaptureTheFlagSettings","sort","Number","CaptureTheFlagState","field","getFieldValue","fv","CricketComponent","isFieldClosed","playerFieldCount","isBlackOutGame","getActFieldIndex","isFieldDoneForPlayer","isFieldClosedForOthers","setFieldCount","punishPlayers","getPlayerTotal","punishStyle","isPunishGame","isPlayerDone","isTheWorstPlayer","getPunishScore","isNoScoreGame","getFieldScore","getPlayerToDisplay","isPrimaryField","remaining","padStart","substr","toUpperCase","isSecondaryField","playerToDisplay","setTimeout","getPlayerTotalForPunishGame","isScoreGame","getPlayerTotalForScoreGame","getFieldValueFromIndex","getPunishCount","setPunishCount","closed","done","CricketModule","CricketSettings","numbs","defaultSet","initFields","maxField","n","setAllowedField","numbers","CricketState","punishCount","DuelComponent","actualScore","ownFields","handover","targetPoint","isFieldAllowed","startPoint","DuelModule","DuelSettings","star","DuelState","FivesComponent","divider","noCheat","actualThrow","mod","getThrowsTotal","all","limit","FivesModule","FivesSettings","HareAndHoundComponent","isHare","getHareStartIndex","houndStartIndex","getFields","HareAndHoundModule","HareAndHoundSettings","hareStartIndex","HareAndHoundState","ImitatorComponent","nextEnabled","punished","newScore","newFieldIndex","isTheLastPlayer","round","ImitatorModule","ImitatorSettings","r","ImitatorState","DANGER_ZONE_ICON","KillerComponent","zeroEnabled","multiEnabled","actField","isActualPlayerTheLast","killer","suicide","extraEndingMsg","numberOfLives","s","boarding","getAllEnabledFields","owner","boardingLimit","KillerModule","KillerSettings","KillerState","KnockoutComponent","getPreviousPlayer","getNextPlayer","getActivePlayers","KnockoutModule","KnockoutSettings","KnockoutState","materialImports","MaterialModule","slideInAnimation","position","top","left","width","optional","ScamSettings","stopper","ScamComponent","isTheFirstPlayer","ScamModule","ShanghaiSettings","halveIt","rand","ShanghaiState","fieldScore","ShanghaiComponent","increaseFieldScore","gameEnded","ShanghaiModule","ConfirmDialogComponent","dialogRef","close","confirm","cancel","DartsTableDialogComponent","primary","secondary","DialogComponent","GameHistoryDialogComponent","statistics","Date","getTime","stat","pna","split","result","appVersion","GameStatisticsDialogComponent","getRatio","l","GameToolbarComponent","showConfirmation","navigate","playground","resetScore","newGame","reset","settingsOpen","undo","enabledFields","primaryFields","secondaryFields","openDartsTable","info","getRound","content","callback","gameHistory","openConfirmDialog","afterClosed","subscribe","reversRound","showTable","quit","showSettings","GameTypeStatisticsDialogComponent","count","MenuComponent","router","dialog","openGameTypeStatistics","getGameTypeStatistics","openGameHistory","getGameStatistics","randomGame","openGameStatistics","NumberPlateComponent","getNumberColor","throwNumber","PlayerScoreComponent","hasContent","scoreDisplayed","lifeDisplayed","highlighted","encapsulation","None","PlayerSettingsComponent","storedPlayers","getStoredPlayers","o","playerNameInput","addPlayer","option","blur","playerSelected","SettingsComponent","openDialog","title","rules","openGameStatisticsDialog","getGameHistory","openStatistics","openHistory","openRules","ApplicationSettings","theme","details","FieldValue","GameStatistics","Player","winDateTime","first","thr","throws","PlaygroundState","list","filtered","FIELDS_COUNT","MAXIMUM_NUMBER_OF_PLAYERS","Playground","gameName","minimumNumberOfPlayers","maximumNumberOfPlayers","throwEnabled","args","saveGameInHistory","actualPlayer","addThrowHistory","calculatePoints","checkPlayerState","victoryFirst","getNumberOfPlayers","finishStatistics","getTheFinalResult","trim","storePlayer","rotate","playerSettingsValidation","customSettingsValidation","msg","openErrorDialog","rotatePlayers","pop","actThrow","skip","customReset","startStatistics","parseStatistics","p1","p2","gameStatistics","toISOString","g","decoratePlayerStat","getGameConfig","saveStatistics","pl","Throw","order","APPLICATION_KEY","PLAYER_KEY","THEMES","ApplicationStateService","localStorage","getItem","JSON","parse","setTheme","saveSettings","v","setItem","stringify","body","className","replace","classList","add","providedIn","DialogService","open","panelClass","maxWidth","maxHeight","height","fieldIndexes","primaryFieldIndexes","GameService","actualPlayerIndex","nextRound","getTheFirstPlayer","getTheLastPlayer","actPlayer","best","shift","SoundService","play","soundFileName","src","STAT_NAME_SEPARATOR","STATISTICS_STORAGE_KEY","StatisticsService","storageService","getObject","setObject","playerName","playerStat","games","type","console","log","StorageService","storage","key","removeItem","components","SharedModule","entryComponents","X01Settings","startValue","start","checkout","X01Component","validStart","isNormalStart","isDoubleStart","isTripleStart","next","isHighScoreGame","isNormalCheckout","isDoubleCheckout","isTripleCheckout","X01Module","environment","version","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACVA;AAAA;;;AAAA;AAAA;AAAA;;AAAO,QAAMC,MAAM,GAAW,CAC5B;AACEC,UAAI,EAAE,KADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,aAAP;AAAsBC,aAAK,EAAE,SAA7B;AAAwCC,YAAI,EAAE;AAA9C;AAFR,KAD4B,EAK5B;AACEJ,UAAI,EAAE,SADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,kBAAP;AAA2BC,aAAK,EAAE,SAAlC;AAA6CC,YAAI,EAAE;AAAnD;AAFR,KAL4B,EAS5B;AACEJ,UAAI,EAAE,cADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,kBAAP;AAA2BC,aAAK,EAAE,SAAlC;AAA6CC,YAAI,EAAE;AAAnD;AAFR,KAT4B,EAa5B;AACEJ,UAAI,EAAE,UADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,oBAAP;AAA6BC,aAAK,EAAE,SAApC;AAA+CC,YAAI,EAAE;AAArD;AAFR,KAb4B,EAiB5B;AACEJ,UAAI,EAAE,OADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,OAAP;AAAgBC,aAAK,EAAE,SAAvB;AAAkCC,YAAI,EAAE;AAAxC;AAFR,KAjB4B,EAqB5B;AACEJ,UAAI,EAAE,gBADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,gBAAP;AAAyBC,aAAK,EAAE,SAAhC;AAA2CC,YAAI,EAAE;AAAjD;AAFR,KArB4B,EAyB5B;AACEJ,UAAI,EAAE,UADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,UAAP;AAAmBC,aAAK,EAAE,SAA1B;AAAqCC,YAAI,EAAE;AAA3C;AAFR,KAzB4B,EA6B5B;AACEJ,UAAI,EAAE,QADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,QAAP;AAAiBC,aAAK,EAAE,SAAxB;AAAmCC,YAAI,EAAE;AAAzC;AAFR,KA7B4B,EAiC5B;AACEJ,UAAI,EAAE,kBADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,kBAAP;AAA2BC,aAAK,EAAE,SAAlC;AAA6CC,YAAI,EAAE;AAAnD;AAFR,KAjC4B,EAqC5B;AACEJ,UAAI,EAAE,MADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,MAAP;AAAeC,aAAK,EAAE,SAAtB;AAAiCC,YAAI,EAAE;AAAvC;AAFR,KArC4B,EAyC5B;AACEJ,UAAI,EAAE,UADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,UAAP;AAAmBC,aAAK,EAAE,SAA1B;AAAqCC,YAAI,EAAE;AAA3C;AAFR,KAzC4B,EA6C5B;AACEJ,UAAI,EAAE,MADR;AAEEC,UAAI,EAAE;AAACC,YAAI,EAAE,MAAP;AAAeC,aAAK,EAAE,SAAtB;AAAiCC,YAAI,EAAE;AAAvC;AAFR,KA7C4B,CAAvB;;;;;;;;;;;;;;;;ACDP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAcO,QAAML,MAAM,GAAW,CAC5B;AACEC,UAAI,EAAE,EADR;AAEEK,eAAS,EAAE;AAFb,KAD4B,EAK5B;AACEL,UAAI,EAAE,KADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,yDAAN;AAAA;AAFhB,KAL4B,EAS5B;AACEN,UAAI,EAAE,SADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,qEAAN;AAAA;AAFhB,KAT4B,EAa5B;AACEN,UAAI,EAAE,cADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,kFAAN;AAAA;AAFhB,KAb4B,EAiB5B;AACEN,UAAI,EAAE,UADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,wEAAN;AAAA;AAFhB,KAjB4B,EAqB5B;AACEN,UAAI,EAAE,OADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,+DAAN;AAAA;AAFhB,KArB4B,EAyB5B;AACEN,UAAI,EAAE,gBADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,wFAAN;AAAA;AAFhB,KAzB4B,EA6B5B;AACEN,UAAI,EAAE,UADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,wEAAN;AAAA;AAFhB,KA7B4B,EAiC5B;AACEN,UAAI,EAAE,QADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,kEAAN;AAAA;AAFhB,KAjC4B,EAqC5B;AACEN,UAAI,EAAE,kBADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,8FAAN;AAAA;AAFhB,KArC4B,EAyC5B;AACEN,UAAI,EAAE,MADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,6DAAN;AAAA;AAFhB,KAzC4B,EA6C5B;AACEN,UAAI,EAAE,UADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,yEAAN;AAAA;AAFhB,KA7C4B,EAiD5B;AACEN,UAAI,EAAE,MADR;AAEEM,kBAAY,EAAE;AAAA,eAAM,6DAAN;AAAA;AAFhB,KAjD4B,EAqD5B;AACEN,UAAI,EAAE,IADR;AACcO,gBAAU,EAAE;AAD1B,KArD4B,CAAvB;;;;;;;;;;;;;;;;ACfP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAWaC,Y;;;AAIX,4BAAmBC,uBAAnB,EACoBC,YADpB,EACgD;AAAA;;AAD7B,aAAAD,uBAAA,GAAAA,uBAAA;AACC,aAAAC,YAAA,GAAAA,YAAA;AAClBC,gBAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAwC,UAACC,KAAD,EAAgB;AACtD,cAAIA,KAAK,CAACC,KAAN,KAAgB,CAApB,EAAuB;AAAED,iBAAK,CAACE,cAAN;AAAyB;AACnD,SAFD,EAEG;AAAEC,iBAAO,EAAE;AAAX,SAFH;AAGD;;;;eAED,2BAAkB;AAChB,eAAKN,YAAL,CAAkBO,YAAlB,GAAiC,KAAKC,eAAL,CAAqBC,aAAtD;AACD;;;;;;;uBAbUX,Y,EAAY,4J,EAAA,qI;AAAA,K;;;YAAZA,Y;AAAY,+B;AAAA;AAAA;;;;;;;;;;;;;;;ACXzB;;AACA;;AACE;;AACF;;AACA;;AACE;;AAAwB;AAAA,mBAAS,IAAAC,uBAAA,mBAAT;AAAmD,WAAnD;;AAAqE;;AAAU;;AAAa;;AAAW;;AAC/H;;AAAwB;AAAA,mBAAS,IAAAA,uBAAA,gBAAT;AAAgD,WAAhD;;AACtB;;AAAU;;AAAM;;AAClB;;AACF;;;;;;AARK;;AAAA;;AAKuE;;AAAA;;;;;;mBDG9D,CAAC,iEAAD;;;;;;sEAEDD,Y,EAAY;cANxB,uDAMwB;eANd;AACTY,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,oBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD,CAHF;AAITC,oBAAU,EAAE,CAAC,iEAAD;AAJH,S;AAMc,Q;;;;;;;;gBAEtB,uD;iBAAU,c;;;;;;;;;;;;;;;;;;;;AEbb;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAgBaC,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,gBAPX,CACP,uEADO,EACQ,4FADR,EACiC,6DAAaC,OAAb,CAAqB,mDAArB,CADjC,EAC+D,kEAD/D,CAOW,EAHV,4DAGU;;;;0HAATD,S,EAAS;AAAA,uBAJL,2DAIK;AAJO,kBAFzB,uEAEyB,EAFV,4FAEU,EAFe,4DAEf,EAF6C,kEAE7C,CAIP;AANgE,kBAG1E,4DAH0E;AAMhE,O;AAHE,K;;;;;sEAGXA,S,EAAS;cARrB,sDAQqB;eARZ;AACRE,iBAAO,EAAE,CACP,uEADO,EACQ,4FADR,EACiC,6DAAaD,OAAb,CAAqB,mDAArB,CADjC,EAC+D,kEAD/D,CADD;AAIRE,sBAAY,EAAE,CAAC,2DAAD,CAJN;AAKR9B,iBAAO,EAAE,CAAC,4DAAD,CALD;AAMR+B,mBAAS,EAAE,CAAC,2DAAD;AANH,S;AAQY,Q;;;;;;;;;;;;;;;;;;AChBtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAKE;;AAAI;;AAAK;;AACT;;AAA0F;AAAA;;AAAA;;AAAA,iBAAS,SAAAC,QAAA,aAAT;AAA8B,SAA9B;;AACxF;;AACF;;AACA;;AAAgG;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,mBAAT;AAAoC,SAApC;;AAC9F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,iBAAT;AAAkC,SAAlC;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,iBAAT;AAAkC,SAAlC;;AAC5F;;AACF;;AACA;;AACA;;AAAgG;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,kBAAT;AAAmC,SAAnC;;AAC9F;;AACF;;AACA;;AAAgG;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,kBAAT;AAAmC,SAAnC;;AAC9F;;AACF;;AACA;;AAAgG;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,mBAAT;AAAoC,SAApC;;AAC9F;;AACF;;AACA;;AAAiG;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,iBAAT;AAAkC,SAAlC;;AAC/F;;AACF;;AACA;;AACA;;AAAgG;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,mBAAT;AAAoC,SAApC;;AAC9F;;AACF;;AACA;;AAEA;;AAAI;;AAAa;;AACjB;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACA;;AAA8F;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAC5F;;AACF;;AACF;;;;;;AApEmC,8FAA4B,YAA5B,EAA4B,mBAA5B,EAA4B,OAA5B,EAA4B,iXAA5B;;AAMoB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIA;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAMrD;;;;;;AAAkB;;;;;;AAGhB;;AAIE;;AAEF;;;;;;;;;AANK;;AAIe;;AAAA,wFAAiB,gBAAjB,EAAiB,KAAjB,EAAiB,eAAjB,EAAiB,4BAAjB,EAAiB,YAAjB,EAAiB,KAAjB;;;;;;;;AANtB;;AACE;;AAAqD;AAAA;;AAAA;;AAAA;AAAA;;AAA6B;;AAA2B;;AAC7G;;AAOF;;;;;;AAR2B;;AAAA;;AAAyD;;AAAA;;AAI7E;;AAAA;;;;;;AAMT;;;;;;AAAkB;;;;QDpEPC,oB;;;;;;;AAKX,oCAAYC,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,kCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,cAAhF,EAAgG,CAAhG;AAJF,cAAAC,UAAA,GAAa,IAAb;AAKE,cAAKP,QAAL,GAAgB,IAAI,uFAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmEC,SAAnE,EAAsF;AAAA;;AACpF,cAAMC,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;AACA,cAAMM,aAAa,GAAG,KAAKC,UAA3B;;AACA,cAAI,KAAKC,aAAL,CAAmBJ,KAAK,CAACK,aAAzB,MAA4CR,UAAhD,EAA4D;AAC1D;AACA,gBAAIG,KAAK,CAACK,aAAN,IAAuB,KAAKjB,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,KAAKJ,UAA9D,EAA0E;AACxE,mBAAKA,UAAL,GAAkB,KAAKA,UAAL,KAAoB,CAApB,GAAwB,CAAxB,GAA4B,KAAKf,QAAL,CAAckB,MAAd,CAAqBC,MAArB,IAA+BP,KAAK,CAACK,aAAN,GAAsB,CAArD,CAA9C;AACD;;AACDL,iBAAK,CAACQ,qBAAN,CAA4B,KAAKpB,QAAL,CAAcqB,IAAd,GAAqB,KAAKN,UAA1B,GAAuC,CAAnE;;AACA,gBAAIH,KAAK,CAACK,aAAN,IAAuB,KAAKjB,QAAL,CAAckB,MAAd,CAAqBC,MAAhD,EAAwD;AACtDP,mBAAK,CAACK,aAAN,GAAsB,KAAKjB,QAAL,CAAckB,MAAd,CAAqBC,MAA3C;AACD;AACF;;AACDX,gBAAM,CAACE,KAAP;;AAEA,cAAI,CAAC,KAAKV,QAAL,CAAcsB,QAAd,IAA0B,KAAKtB,QAAL,CAAcuB,QAAzC,KAAsDZ,SAAS,KAAK,CAAxE,EAA2E;AACzE,gBAAMa,cAAc,GAAGb,SAAS,KAAK,EAAd,GAAmB,EAAnB,GAAwBA,SAAS,GAAG,CAA3D;AACA,iBAAKR,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC1D,EAAF,KAASuC,MAAM,CAACvC,EAApB;AAAA,aAA1B,EAAkD2D,OAAlD,CAA0D,UAAAC,WAAW,EAAI;AACvE,kBAAMC,gBAAgB,GAAG,MAAI,CAACjB,cAAL,CAAoBgB,WAApB,CAAzB;;AACA,kBAAI,MAAI,CAACb,aAAL,CAAmBc,gBAAgB,CAACb,aAApC,MAAuDO,cAAvD,IAAyEd,KAAK,KAAK,CAAvF,EAA0F;AACxF,oBAAI,MAAI,CAACV,QAAL,CAAcsB,QAAlB,EAA4B;AAC1BQ,kCAAgB,CAACC,qBAAjB,CAAuC,MAAI,CAAC/B,QAAL,CAAcqB,IAAd,GAAqBP,aAArB,GAAqC,CAA5E;AACD,iBAFD,MAEO;AACLgB,kCAAgB,CAACV,qBAAjB,CAAuC,MAAI,CAACpB,QAAL,CAAcqB,IAAd,GAAqBP,aAArB,GAAqC,CAA5E;;AACA,sBAAIgB,gBAAgB,CAACb,aAAjB,IAAkC,MAAI,CAACjB,QAAL,CAAckB,MAAd,CAAqBC,MAA3D,EAAmE;AACjEW,oCAAgB,CAACb,aAAjB,GAAiC,MAAI,CAACjB,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAA/D;AACD;AACF;AACF;AACF,aAZD;AAaD;AACF;;;eAED,0BAAiBX,MAAjB,EAAiC;AAC/B,cAAMI,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;;AACA,cAAK,KAAKR,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAA/B,GAAoCP,KAAK,CAACK,aAA9C,EAA6D;AAC3DT,kBAAM,CAACwB,MAAP;AACD,WAFD,MAEO,IAAI,KAAK7B,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AACrC,gBAAI,KAAKjC,QAAL,CAAckC,UAAd,IAA4B,KAAKlC,QAAL,CAAcmC,IAAd,KAAuB,CAAvD,EAA0D;AACxD,kBAAIC,KAAK,GAAG,CAAZ;;AACA,mBAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,oBAAMC,CAAC,GAAG9B,MAAM,CAAC+B,aAAP,CAAqB/B,MAAM,CAAC+B,aAAP,CAAqBpB,MAArB,GAA8BkB,CAA9B,GAAkC,CAAvD,CAAV;AACAD,qBAAK,IAAIE,CAAC,CAAC5B,KAAX;AACD;;AACD,kBAAI0B,KAAK,KAAK,CAAd,EAAiB;AACf,oBAAI,KAAKpC,QAAL,CAAckC,UAAlB,EAA8B;AAC5BtB,uBAAK,CAACmB,qBAAN;AACD;;AACD,oBAAI,KAAK/B,QAAL,CAAcmC,IAAd,KAAuB,CAA3B,EAA8B;AAC5B,uBAAKtD,YAAL,CAAkB2D,EAAlB;AACAhC,wBAAM,CAAC2B,IAAP;AACD;AACF;AACF;;AACD,iBAAKhC,IAAL,CAAUsC,UAAV;AACD;;AAED,cAAI,KAAKzC,QAAL,CAAc0C,UAAlB,EAA8B;AAC5B,gBAAMC,aAAa,GAAG,KAAKxC,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACiB,UAAF,EAAL;AAAA,aAA1B,CAAtB;;AACA,gBAAID,aAAa,CAACxB,MAAd,GAAuB,KAAKhB,IAAL,CAAUsB,OAAV,CAAkBN,MAA7C,EAAqD;AACnD,mBAAK0B,iBAAL,GAAyBjB,OAAzB,CAAiC,UAAAD,CAAC;AAAA,uBAAIA,CAAC,CAACK,MAAF,CAAS,IAAT,CAAJ;AAAA,eAAlC;AACD;AACF;;AAED,cAAI,KAAKhC,QAAL,CAAcmC,IAAd,KAAuB,CAAvB,IAA4B,KAAKhC,IAAL,CAAUsB,OAAV,CAAkBN,MAAlB,GAA2B,CAA3D,EAA8D;AAC5D,gBAAMwB,cAAa,GAAG,KAAKxC,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACiB,UAAF,EAAL;AAAA,aAA1B,CAAtB;;AACA,gBAAID,cAAa,CAACxB,MAAd,KAAyB,CAA7B,EAAgC;AAC9BwB,4BAAa,CAAC,CAAD,CAAb,CAAiBX,MAAjB,CAAwB,IAAxB;AACD,aAFD,MAEO,IAAI,CAAC,CAACW,cAAa,CAACxB,MAApB,EAA4B;AACjC,qBAAO,KAAKhB,IAAL,CAAU2C,eAAV,GAA4BF,UAA5B,EAAP,EAAiD;AAC/C,qBAAKzC,IAAL,CAAUsC,UAAV;AACD;AACF;AACF;AACF;;;eAED,iCAAqB;AACnB,cAAI,KAAKzC,QAAL,CAAc+C,KAAd,KAAwB,CAA5B,EAA+B;AAC7B,gBAAMC,OAAO,GAAG,KAAKhD,QAAL,CAAckB,MAAd,CAAqB+B,SAArB,CAA+B,UAAAC,CAAC;AAAA,qBAAIA,CAAC,KAAK,EAAV;AAAA,aAAhC,CAAhB;AACA,gBAAMC,SAAS,GAAG,KAAKtC,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,EAAiD7B,aAAnE;AACA,gBAAMmC,IAAI,GAAGJ,OAAO,GAAGG,SAAvB;AACA,mBAAOC,IAAI,IAAI,CAAR,GAAYA,IAAI,GAAG,EAAnB,GAAwB,EAA/B;AACD;;AACD,iBAAO,EAAP;AACD;;;eAED,4BAAmB;AACjB,eAAK7C,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;eAED,wBAAeE,UAAf,EAAiC;AAC/B,iBAAOA,UAAU,KAAK,KAAKO,aAAL,CAAmB,KAAKH,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,EAAiD7B,aAApE,CAAtB;AACD;;;eAED,wBAAeR,UAAf,EAAiC;AAC/B,iBAAO,KAAK4C,cAAL,CAAoB5C,UAApB,CAAP;AACD;;;eAED,0BAAiBA,UAAjB,EAAmC;AAAA;;AACjC,cAAI,CAAC,KAAK4C,cAAL,CAAoB5C,UAApB,CAAL,EAAsC;AACpC,mBAAO,KAAKN,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,KAAK,MAAI,CAACxB,IAAL,CAAU2C,eAAV,EAAV;AAAA,aAA1B,EACJQ,IADI,CACC,UAAA3B,CAAC;AAAA,qBAAIlB,UAAU,KAAK,MAAI,CAACO,aAAL,CAAmB,MAAI,CAACH,cAAL,CAAoBc,CAApB,EAAuBV,aAA1C,CAAnB;AAAA,aADF,CAAP;AAED;;AACD,iBAAO,KAAP;AACD;;;eAED,sBAAaR,UAAb,EAA+B;AAAA;;AAC7B,cAAM8C,MAAM,GAAG,KAAKpD,IAAL,CAAUsB,OAAV,CACZC,MADY,CACL,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACX,aAAL,CAAmB,MAAI,CAACH,cAAL,CAAoBc,CAApB,EAAuBV,aAA1C,MAA6DR,UAAjE;AAAA,WADI,EACyE+C,GADzE,CAC6E,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAACtD,IAAN;AAAA,WAD9E,CAAf;AAEA,iBAAO,CAAC,CAACkF,MAAM,CAACpC,MAAT,GAAkBoC,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAlB,GAAqC,EAA5C;AACD;;;eAED,4BAAmBhD,UAAnB,EAAqC;AAAA;;AACnC,cAAM8C,MAAM,GAAG,KAAKpD,IAAL,CAAUsB,OAAV,CACZC,MADY,CACL,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACX,aAAL,CAAmB,MAAI,CAACH,cAAL,CAAoBc,CAApB,EAAuBV,aAA1C,MAA6DR,UAAjE;AAAA,WADI,CAAf;AAEA,cAAMiD,SAAS,GAAGH,MAAM,CAACD,IAAP,CAAY,UAAA3B,CAAC;AAAA,mBAAIA,CAAC,CAACtD,IAAF,KAAW,MAAI,CAAC8B,IAAL,CAAU2C,eAAV,GAA4BzE,IAA3C;AAAA,WAAb,CAAlB;;AACA,cAAIqF,SAAJ,EAAe;AACb,gBAAMvC,MAAM,GAAG,KAAKnB,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAA9B,GAAkC,KAAKN,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,EAAiD7B,aAAlG;AACA,mBAAOE,MAAM,GAAG,EAAhB;AACD;;AACD,iBAAO,CAACuC,SAAD,IAAc,CAAC,CAACH,MAAM,CAACpC,MAAvB,KAAkC,KAAKnB,QAAL,CAAcuB,QAAd,IAA0B,KAAKvB,QAAL,CAAcsB,QAA1E,IAAuF,KAAKtB,QAAL,CAAcuB,QAAd,GAAyB,GAAzB,GAA+B,GAAtH,GAA6H,EAApI;AACD;;;eAED,uBAAc;AAAA;;AACZ,eAAKpB,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClCA,kBAAM,CAAC2B,IAAP,GAAc,MAAI,CAACnC,QAAL,CAAcmC,IAA5B;AACA3B,kBAAM,CAACI,KAAP,GAAe,IAAI,iFAAJ,EAAf;AACD,WAHD;AAIA,eAAKZ,QAAL,CAAc2D,QAAd;AACD;;;eAED,4BAAmBnD,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAd;AACD;;;eAEO,6BAAiB;AAAA;;AACvB,cAAMsE,aAAa,GAAG,KAAKxC,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAACA,CAAC,CAACiB,UAAF,EAAL;AAAA,WAA1B,CAAtB;AACA,cAAIgB,GAAG,GAAG,CAAV;AACAjB,uBAAa,CAACf,OAAd,CAAsB,UAAAD,CAAC,EAAI;AACzB,gBAAMkC,KAAK,GAAG,MAAI,CAAChD,cAAL,CAAoBc,CAApB,EAAuBV,aAArC;;AACA2C,eAAG,GAAGC,KAAK,GAAGD,GAAR,GAAcC,KAAd,GAAsBD,GAA5B;AACD,WAHD;AAIA,iBAAOjB,aAAa,CAACjB,MAAd,CAAqB,UAAAC,CAAC;AAAA,mBAAI,MAAI,CAACd,cAAL,CAAoBc,CAApB,EAAuBV,aAAvB,KAAyC2C,GAA7C;AAAA,WAAtB,CAAP;AACD;;;eAEO,uBAAcC,KAAd,EAA6B;AACnC,iBAAO,KAAK7D,QAAL,CAAckB,MAAd,CAAqB2C,KAArB,CAAP;AACD;;;;MA9JuC,mE;;;uBAA7B5D,oB,EAAoB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAApBA,oB;AAAoB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,ia;AAAA;AAAA;ACjBjC;;AAEE;;AAsEA;;AACE;;AACA;;AAUF;;AACA;;AAEF;;;;AArFgB;;AAAA;;AAsES;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAW4B;;AAAA;;;;;;mBDtEhC,CAAC,iEAAD;;;;;;sEAEDA,oB,EAAoB;cAJhC,uDAIgC;eAJtB;AACTT,qBAAW,EAAE,+BADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIsB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaoE,iB;;;;;YAAAA;;;;yBAAAA,iB;AAAiB,O;AAAA,gBARnB,CACP,kEADO,EAEP,6DAAaC,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQmB;;;;0HAAjBsF,iB,EAAiB;AAAA,uBAFb,4EAEa;AAFO,kBALjC,kEAKiC,EALrB,4DAKqB;AAEP,O;AAPd,K;;;;;sEAOHA,iB,EAAiB;cAT7B,sDAS6B;eATpB;AACRjE,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,4EAAD;AAPN,S;AASoB,Q;;;;;;;;;;;;;;;;;;ACd9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEakE,mB;;;AAUX,qCAAc;AAAA;;AACZ,aAAKjB,KAAL,GAAa,CAAb;AACA,aAAK1B,IAAL,GAAY,IAAZ;AACA,aAAKqB,UAAL,GAAkB,IAAlB;AACA,aAAKR,UAAL,GAAkB,IAAlB;AACA,aAAKC,IAAL,GAAY,CAAZ;AACA,aAAKZ,QAAL,GAAgB,KAAhB;AACA,aAAKD,QAAL,GAAgB,IAAhB;AACA,aAAKJ,MAAL,GAAc8C,mBAAmB,CAACC,aAApB,EAAd;AACD;;;;eAED,kBAASlB,KAAT,EAAyB;AACvB,cAAI,CAAC,CAACA,KAAF,IAAWA,KAAK,KAAK,CAAzB,EAA4B;AAC1B,iBAAKA,KAAL,GAAaA,KAAb;AACD;;AACD,kBAAQ,KAAKA,KAAb;AACE,iBAAK,CAAL;AACE,mBAAK7B,MAAL,GAAc8C,mBAAmB,CAACE,cAApB,EAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKhD,MAAL,GAAc8C,mBAAmB,CAACG,kBAApB,EAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKjD,MAAL,GAAc8C,mBAAmB,CAACI,SAApB,EAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKlD,MAAL,gCAAkB8C,mBAAmB,CAACC,aAApB,GAAoCI,OAApC,GAA8CC,KAA9C,CAAoD,CAApD,CAAlB,IAA0E,EAA1E;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKpD,MAAL,GAAc8C,mBAAmB,CAACO,aAApB,EAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKrD,MAAL,GAAc8C,mBAAmB,CAACI,SAApB,CAA8B,EAA9B,CAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKlD,MAAL,GAAc8C,mBAAmB,CAACQ,SAApB,EAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKtD,MAAL,GAAc8C,mBAAmB,CAACS,oBAApB,EAAd;AACA;;AACF,iBAAK,CAAL;AACE,mBAAKvD,MAAL,GAAc8C,mBAAmB,CAACU,kBAApB,EAAd;AACA;;AACF;AACE,mBAAKxD,MAAL,GAAc8C,mBAAmB,CAACC,aAApB,EAAd;AA7BJ;AA+BD;;;eAED,4BAAmB;AACjB,eAAKvB,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;eAED,sBAAa;AACX,eAAKrB,IAAL,GAAY,CAAC,KAAKA,IAAlB;AACD;;;eAED,4BAAmB;AACjB,eAAKa,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;eAED,2BAAkB;AAChB,eAAKC,IAAL,GAAY,KAAKA,IAAL,KAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAlC;AACD;;;eAED,2BAAkB;AAChB,eAAKA,IAAL,GAAY,KAAKA,IAAL,KAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAlC;AACD;;;eAED,4BAAmB;AACjB,eAAKA,IAAL,GAAY,KAAKA,IAAL,KAAc,CAAd,GAAkB,CAAlB,GAAsB,CAAlC;AACD;;;eAED,0BAAiB;AACf,eAAKA,IAAL,GAAY,KAAKA,IAAL,KAAc,EAAd,GAAmB,CAAnB,GAAuB,EAAnC;AACD;;;eAED,0BAAiB;AACf,eAAKb,QAAL,GAAgB,CAAC,KAAKA,QAAtB;;AACA,cAAI,KAAKA,QAAT,EAAmB;AACjB,iBAAKC,QAAL,GAAgB,KAAhB;AACD;AACF;;;eAED,0BAAiB;AACf,eAAKA,QAAL,GAAgB,CAAC,KAAKA,QAAtB;;AACA,cAAI,KAAKA,QAAT,EAAmB;AACjB,iBAAKD,QAAL,GAAgB,KAAhB;AACD;AACF;;;eAEO,yBAAoB;AAC1B,oCAAWqD,KAAK,CAAC,qEAAD,CAAL,CAAoB7G,IAApB,EAAX;AACD;;;eAEO,0BAAqB;AAC3B,iBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,CAAlB,EAAqB,EAArB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,CAAhC,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,EAA1C,EAA8C,CAA9C,EAAiD,EAAjD,EAAqD,EAArD,EAAyD,CAAzD,EAA4D,EAA5D,EAAgE,CAAhE,EAAmE,EAAnE,EAAuE,EAAvE,CAAP;AACD;;;eAEO,8BAAyB;AAC/B,iBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,EAA3C,EAA+C,CAA/C,EAAkD,CAAlD,EAAqD,EAArD,EAAyD,CAAzD,EAA4D,EAA5D,EAAgE,CAAhE,EAAmE,EAAnE,EAAuE,EAAvE,CAAP;AACD;;;eAEO,gCAA2B;AACjC,iBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiC,CAAjC,EAAoC,EAApC,EAAwC,CAAxC,EAA2C,CAA3C,EAA8C,EAA9C,EAAkD,CAAlD,EAAqD,CAArD,EAAwD,EAAxD,EAA4D,CAA5D,EAA+D,EAA/D,EAAmE,EAAnE,EAAuE,EAAvE,CAAP;AACD;;;eAEO,8BAAyB;AAC/B,iBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,CAAf,EAAkB,CAAlB,EAAqB,CAArB,EAAwB,CAAxB,EAA2B,EAA3B,EAA+B,EAA/B,EAAmC,EAAnC,EAAuC,CAAvC,EAA0C,EAA1C,EAA8C,EAA9C,EAAkD,CAAlD,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,EAA7D,EAAiE,CAAjE,EAAoE,CAApE,EAAuE,EAAvE,CAAP;AACD;;;eAEO,mBAAiB8G,IAAjB,EAA8B;AACpC,cAAI1D,MAAM,GAAG8C,mBAAmB,CAACC,aAApB,EAAb;;AACA,cAAI,CAACW,IAAL,EAAW;AACTA,gBAAI,GAAG1D,MAAM,CAACC,MAAd;AACD;;AACD,cAAM0D,YAAY,GAAG,EAArB;;AACA,eAAK,IAAIxC,CAAC,GAAIuC,IAAI,GAAG,CAArB,EAAyBvC,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC,gBAAMyC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB5D,MAAM,CAACC,MAAlC,CAAf;AACA0D,wBAAY,CAACI,IAAb,CAAkB/D,MAAM,CAAC4D,MAAD,CAAxB;AACA5D,kBAAM,gCAAOA,MAAM,CAACoD,KAAP,CAAa,CAAb,EAAgBQ,MAAhB,CAAP,sBAAmC5D,MAAM,CAACoD,KAAP,CAAaQ,MAAM,GAAG,CAAtB,CAAnC,EAAN;AACD;;AACD,iBAAOD,YAAP;AACD;;;eAEO,qBAAgB;AACtB,cAAI3D,MAAM,GAAG8C,mBAAmB,CAACI,SAApB,EAAb;;AACA,eAAK,IAAI/B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,gBAAMyC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB5D,MAAM,CAACC,MAAlC,CAAf;;AACA,gBAAID,MAAM,CAAC4D,MAAD,CAAN,KAAmB,EAAvB,EAA2B;AACzBzC,eAAC;AACF,aAFD,MAEO;AACLnB,oBAAM,CAAC4D,MAAD,CAAN,GAAiB,EAAjB;AACD;AACF;;AACD,iBAAO5D,MAAP;AACD;;;eAEO,yBAAoB;AAC1B,cAAIA,MAAM,GAAG8C,mBAAmB,CAACC,aAApB,EAAb;AACA,cAAMY,YAAY,GAAG,EAArB;;AACA,eAAK,IAAIxC,CAAC,GAAInB,MAAM,CAACC,MAAP,GAAgB,CAA9B,EAAkCkB,CAAC,IAAI,CAAvC,EAA0CA,CAAC,EAA3C,EAA+C;AAC7C,gBAAMyC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB5D,MAAM,CAACC,MAAlC,CAAf;AACA0D,wBAAY,CAACI,IAAb,CAAkB/D,MAAM,CAAC4D,MAAD,CAAxB;AACD;;AACD,iBAAOD,YAAP;AACD;;;;;;;;;;;;;;;;;;;;;AC7JH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaK,gB;;;;;;;AAIX,kCAAc;AAAA;;AAAA;;AACZ;AACA,eAAKjE,aAAL,GAAqB,CAArB;AAFY;AAGb;;;;eAED,+BAAsBkE,KAAtB,EAAsC;AACpC,eAAKlE,aAAL,IAAsBkE,KAAK,GAAGA,KAAH,GAAW,CAAtC;AACD;;;eAED,iCAAiC;AAAA,cAAXA,KAAW,uEAAH,CAAG;AAC/B,eAAKlE,aAAL,IAAsBkE,KAAtB;;AACA,cAAI,KAAKlE,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,iBAAKA,aAAL,GAAqB,CAArB;AACD;AACF;;;eAED,iBAAK;AACH,cAAML,KAAK,GAAG,IAAIsE,gBAAJ,EAAd;AACAtE,eAAK,CAACK,aAAN,GAAsB,KAAKA,aAA3B;AACA,iBAAOL,KAAP;AACD;;;;MAxBmC,8E;;;;;;;;;;;;;;;;;ACFtC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAQE;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAZ,QAAA,aAAT;AAA8B,SAA9B;;AAAgC;;AACxC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,gBAAT;AAAiC,SAAjC;;AAAmC;;AAC3C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,kBAAT;AAAmC,SAAnC;;AAAqC;;AAC7C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,gBAAT;AAAiC,SAAjC;;AAAmC;;AAC3C;;AACF;;;;;;AApBmC,8FAA4B,YAA5B,EAA4B,mBAA5B,EAA4B,OAA5B,EAA4B,wiBAA5B;;AAQoB;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAMrD;;;;;;AAAkB;;;;;;AAMV;;AAEE;;AAAsC;;AAAoB;;AAAkC;;AAC9F;;;;;;;;;;AAHK;;AAEH;;AAAA;;AAA0D;;AAAA;;;;;;AANlE;;AAEE;;AACE;;AACE;;AAIF;;AACF;;AACF;;;;;;;;;AAVK;;AAEe;;AAAA;;AAGT;;AAAA;;;;;;AANb;;AACE;;AAWF;;;;;;AAVO;;AAAA;;;;;;AAYT;;;;;;AAAkB;;;;QDvBPoF,uB;;;;;;;AAIX,uCAAYlF,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,oCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,KAAhF;AACA,eAAKN,QAAL,GAAgB,IAAI,8FAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAME,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;;AACA,cAAI,KAAK6E,aAAL,CAAmB5E,UAAnB,CAAJ,EAAoC;AAClCG,iBAAK,CAAC0E,kBAAN,CAAyB7E,UAAzB,EAAqC,KAAKM,UAA1C;;AACA,gBAAIH,KAAK,CAAC2E,aAAN,CAAoB9E,UAApB,KAAmC,CAAvC,EAA0C;AACxCD,oBAAM,CAACE,KAAP,IAAgB,KAAKV,QAAL,CAAcwF,OAAd,GAAwB,CAAxB,GAA4B9E,KAA5C;AACA,mBAAK+E,WAAL,CAAiBjF,MAAjB;AACA,mBAAKL,IAAL,CAAUuF,gBAAV;AACD;AACF,WAPD,MAOO,IAAIjF,UAAU,KAAK,EAAnB,EAAuB;AAC5BG,iBAAK,CAAC0E,kBAAN,CAAyB,KAAKtF,QAAL,CAAckB,MAAd,CAAqB,KAAKf,IAAL,CAAUuF,gBAA/B,CAAzB,EAA2E,CAA3E;AACAlF,kBAAM,CAACE,KAAP,IAAgB,KAAKV,QAAL,CAAcwF,OAAd,GAAwB,CAAxB,GAA4B,KAAKxF,QAAL,CAAckB,MAAd,CAAqB,KAAKf,IAAL,CAAUuF,gBAA/B,IAAmD,CAA/F;AACA,iBAAKD,WAAL,CAAiBjF,MAAjB;AACA,iBAAKL,IAAL,CAAUuF,gBAAV;AACD;AACF;;;eAED,0BAAiBlF,MAAjB,EAAiC;AAAA;;AAC/B,cAAI,KAAKL,IAAL,CAAUuF,gBAAV,KAA+B,KAAK1F,QAAL,CAAckB,MAAd,CAAqBC,MAAxD,EAAgE;AAC9D,iBAAKhB,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAACK,MAAF,CAAS,OAAI,CAAC7B,IAAL,CAAUwF,eAAV,CAA0BhE,CAA1B,CAAT,CAAJ;AAAA,aAA3B;AACD,WAFD,MAEO,IAAI,KAAKxB,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AACrC,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,uBAAcjC,MAAd,EAA8BC,UAA9B,EAAgD;AAC9C,cAAMmF,UAAU,GAAG,KAAK/E,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,CAAnB;;AACA,cAAImF,UAAU,KAAK,CAAnB,EAAsB;AACpB,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,gBAAIC,GAAG,GAAG,EAAV;;AACA,iBAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG0C,IAAI,CAACe,GAAL,CAASF,UAAT,EAAqB,CAArB,CAApB,EAA6CvD,CAAC,EAA9C,EAAkD;AAChDwD,iBAAG,IAAI,GAAP;AACD;;AACD,iBAAK,IAAIxD,EAAC,GAAGuD,UAAb,EAAyBvD,EAAC,GAAG,CAA7B,EAAgCA,EAAC,EAAjC,EAAqC;AACnCwD,iBAAG,IAAI,GAAP;AACD;;AACD,mBAAOA,GAAP;AACD;AACF;;;eAED,uBAAc;AACZ,eAAK1F,IAAL,CAAUuF,gBAAV,GAA6B,CAA7B;AACA,eAAKvF,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAACI,KAAP,GAAe,IAAI,wFAAJ,EAAnB;AAAA,WAAhC;;AACA,cAAI,KAAKZ,QAAL,CAAc+C,KAAd,KAAwB,CAA5B,EAA+B;AAC7B,iBAAK/C,QAAL,CAAc+F,UAAd;AACD,WAFD,MAEO,IAAI,KAAK/F,QAAL,CAAc+C,KAAd,KAAwB,CAA5B,EAA+B;AACpC,iBAAK/C,QAAL,CAAcgG,aAAd;AACD,WAFM,MAEA;AACL,iBAAKhG,QAAL,CAAciG,eAAd;AACD;AACF;;;eAED,oCAAwB;AACtB,iBAAO,KAAKjG,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAArC;AACD;;;eAED,uBAAcV,UAAd,EAAgC;AAC9B,iBAAO,KAAKT,QAAL,CAAckB,MAAd,CAAqB,KAAKf,IAAL,CAAUuF,gBAA/B,MAAqDjF,UAA5D;AACD;;;eAED,wBAAeA,UAAf,EAAiC;AAC/B,iBAAOA,UAAU,KAAK,EAAf,IAAqB,KAAKT,QAAL,CAAckB,MAAd,CAAqBgF,OAArB,CAA6BzF,UAA7B,MAA6C,KAAKN,IAAL,CAAUuF,gBAAnF;AACD;;;eAED,wBAAejF,UAAf,EAAiC;AAC/B,iBAAO,KAAK4C,cAAL,CAAoB5C,UAApB,CAAP;AACD;;;eAED,sBAAaA,UAAb,EAA+B;AAAA;;AAC7B,cAAMD,MAAM,GAAG,KAAKL,IAAL,CAAUsB,OAAV,CAAkB0E,IAAlB,CAAuB,UAAA3F,MAAM;AAAA,mBAAI,OAAI,CAACK,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,KAAyD,CAA7D;AAAA,WAA7B,CAAf;AACA,iBAAOD,MAAM,GAAGA,MAAM,CAACnC,IAAV,GAAiB,EAA9B;AACD;;;eAED,6BAAiB;AACf,cAAI+H,OAAO,GAAG,KAAKjG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC0E,GAAN;AAAA,WAA1B,CAAd;;AACA,cAAI,CAACD,OAAO,CAACjF,MAAb,EAAqB;AACnB,mBAAO,EAAP;AACD;;AACD,cAAIyC,GAAG,GAAGwC,OAAO,CAAC,CAAD,CAAP,CAAW1F,KAArB;AACA0F,iBAAO,CAACxE,OAAR,CAAgB,UAAAD,CAAC,EAAI;AACnBiC,eAAG,GAAGjC,CAAC,CAACjB,KAAF,GAAUkD,GAAV,GAAgBjC,CAAC,CAACjB,KAAlB,GAA0BkD,GAAhC;AACD,WAFD;AAGAwC,iBAAO,GAAGA,OAAO,CAAC1E,MAAR,CAAe,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACjB,KAAF,KAAYkD,GAAhB;AAAA,WAAhB,EAAqCJ,GAArC,CAAyC,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC2E,KAAF,EAAJ;AAAA,WAA1C,CAAV;AACA,cAAMC,MAAM,GAAG,KAAKpG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAACyE,OAAO,CAAC9C,IAAR,CAAa,UAAAkD,CAAC;AAAA,qBAAIA,CAAC,CAACvI,EAAF,KAAS0D,CAAC,CAAC1D,EAAf;AAAA,aAAd,CAAL;AAAA,WAA1B,EAAiEuF,GAAjE,CAAqE,UAAA7B,CAAC,EAAI;AACvF,gBAAM8E,CAAC,GAAG9E,CAAC,CAAC2E,KAAF,EAAV;AACAG,aAAC,CAACJ,GAAF,GAAQ,KAAR;AACA,mBAAOI,CAAP;AACD,WAJc,CAAf;AAKA,8CAAWL,OAAX,sBAAuBG,MAAvB;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKvG,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA4B,EAAnC;AACD;;;eAEO,qBAAYX,MAAZ,EAA4B;AAClC,cAAIkG,KAAK,GAAG,KAAK1G,QAAL,CAAckB,MAAd,CAAqBC,MAAjC;AACA,cAAMwF,GAAG,GAAGnG,MAAM,CAACE,KAAnB;;AACA,cAAI,CAAC,KAAKV,QAAL,CAAcwF,OAAnB,EAA4B;AAC1BkB,iBAAK,GAAG,KAAK1G,QAAL,CAAckB,MAAd,CAAqB0F,MAArB,CAA4B,UAACC,CAAD,EAAIC,CAAJ;AAAA,qBAAUD,CAAC,GAAGC,CAAd;AAAA,aAA5B,EAA6C,CAA7C,CAAR;AACD;;AACD,cAAIH,GAAG,GAAG5B,IAAI,CAACC,KAAL,CAAW0B,KAAK,GAAG,CAAnB,CAAV,EAAiC;AAC/BlG,kBAAM,CAACwB,MAAP,CAAc,IAAd;AACD;AACF;;;;MAnH0C,mE;;;uBAAhCoD,uB,EAAuB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAAvBA,uB;AAAuB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,gX;AAAA;AAAA;ACjBpC;;AAEE;;AAsBA;;AACE;;AACA;;AAaF;;AACA;;AACF;;;;AAvCgB;;AAAA;;AAsBS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAc4B;;AAAA;;;;;;mBDzBhC,CAAC,iEAAD;;;;;;sEAEDA,uB,EAAuB;cAJnC,uDAImC;eAJzB;AACT5F,qBAAW,EAAE,mCADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIyB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaqH,oB;;;;;YAAAA;;;;yBAAAA,oB;AAAoB,O;AAAA,gBARtB,CACP,kEADO,EAEP,6DAAahD,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQsB;;;;0HAApBuI,oB,EAAoB;AAAA,uBAFhB,mFAEgB;AAFO,kBALpC,kEAKoC,EALxB,4DAKwB;AAEP,O;AAPjB,K;;;;;sEAOHA,oB,EAAoB;cAThC,sDASgC;eATvB;AACRlH,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,mFAAD;AAPN,S;AASuB,Q;;;;;;;;;;;;;;;;;;ACdjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEakH,sB;;;AAMX,wCAAc;AAAA;;AAFd,aAAAxB,OAAA,GAAU,KAAV;AAGE,aAAKtE,MAAL,GAAc,EAAd;AACA,aAAKsE,OAAL,GAAe,KAAf;AACA,aAAKQ,aAAL;AACD;;;;eAED,sBAAa;AACX,eAAKjD,KAAL,GAAa,CAAb;AACA,eAAK7B,MAAL,GAAc8F,sBAAsB,CAAC5C,SAAvB,CAAiC,CAAjC,CAAd;AACA,eAAKlD,MAAL,CAAY,KAAKA,MAAL,CAAYC,MAAxB,IAAkC,EAAlC;AACD;;;eAED,yBAAgB;AACd,eAAK4B,KAAL,GAAa,CAAb;AACA,eAAK7B,MAAL,GAAc8F,sBAAsB,CAAC5C,SAAvB,CAAiC,EAAjC,CAAd;AACA,eAAKlD,MAAL,CAAY,KAAKA,MAAL,CAAYC,MAAxB,IAAkC,EAAlC;AACD;;;eAED,2BAAkB;AAChB,eAAK4B,KAAL,GAAa,CAAb;AACA,eAAK7B,MAAL,GAAc8F,sBAAsB,CAAC5C,SAAvB,CAAiC,EAAjC,CAAd;AACA,eAAKlD,MAAL,CAAY,KAAKA,MAAL,CAAYC,MAAxB,IAAkC,EAAlC;AACD;;;eAED,yBAAgB;AACd,eAAKqE,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;eAEO,yBAAoB;AAC1B,oCAAWb,KAAK,CAAC,qEAAD,CAAL,CAAoB7G,IAApB,EAAX;AACD;;;eAEO,mBAAiB8G,IAAjB,EAA8B;AACpC,cAAI1D,MAAM,GAAG8F,sBAAsB,CAAC/C,aAAvB,EAAb;;AACA,cAAI,CAACW,IAAL,EAAW;AACTA,gBAAI,GAAG1D,MAAM,CAACC,MAAd;AACD;;AACD,cAAM0D,YAAY,GAAG,EAArB;;AACA,eAAK,IAAIxC,CAAC,GAAIuC,IAAI,GAAG,CAArB,EAAyBvC,CAAC,IAAI,CAA9B,EAAiCA,CAAC,EAAlC,EAAsC;AACpC,gBAAMyC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB5D,MAAM,CAACC,MAAlC,CAAf;;AACA,gBAAID,MAAM,CAAC4D,MAAD,CAAN,KAAmB,EAAvB,EAA2B;AACzBzC,eAAC;AACF,aAFD,MAEO;AACLwC,0BAAY,CAACI,IAAb,CAAkB/D,MAAM,CAAC4D,MAAD,CAAxB;AACA5D,oBAAM,gCAAOA,MAAM,CAACoD,KAAP,CAAa,CAAb,EAAgBQ,MAAhB,CAAP,sBAAmC5D,MAAM,CAACoD,KAAP,CAAaQ,MAAM,GAAG,CAAtB,CAAnC,EAAN;AACD;AACF;;AACD,iBAAOD,YAAY,CAACoC,IAAb,CAAkB,UAACJ,CAAD,EAAIC,CAAJ;AAAA,mBAAUI,MAAM,CAACL,CAAD,CAAN,GAAYK,MAAM,CAACJ,CAAD,CAA5B;AAAA,WAAlB,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACxDH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaK,mB;;;;;;;AAKX,qCAAc;AAAA;;AAAA;;AACZ;AACA,gBAAKvB,UAAL,GAAkB,EAAlB;AACA,gBAAK3E,aAAL,GAAqB,CAArB;AAHY;AAIb;;;;eAED,uBAAcmG,KAAd,EAA2B;AACzB,iBAAO,KAAKC,aAAL,CAAmB,KAAKzB,UAAxB,EAAoCwB,KAApC,EAA2CjC,KAAlD;AACD;;;eAED,4BAAmBiC,KAAnB,EAAkCjC,KAAlC,EAAiD;AAC/C,eAAKkC,aAAL,CAAmB,KAAKzB,UAAxB,EAAoCwB,KAApC,EAA2CjC,KAA3C,IAAoDA,KAApD;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAKlE,aAAZ;AACD;;;eAED,iCAAwB;AACtB,eAAKA,aAAL;AACD;;;eAED,iBAAK;AACH,cAAML,KAAK,GAAG,IAAIuG,mBAAJ,EAAd;AACAvG,eAAK,CAACK,aAAN,GAAsB,KAAKA,aAA3B;AACA,eAAK2E,UAAL,CAAgBhE,OAAhB,CAAwB,UAAA0F,EAAE;AAAA,mBAAI1G,KAAK,CAACgF,UAAN,CAAiBX,IAAjB,CAAsBqC,EAAE,CAAChB,KAAH,EAAtB,CAAJ;AAAA,WAA1B;AACA,iBAAO1F,KAAP;AACD;;;;MAhCsC,8E;;;;;;;;;;;;;;;;;ACHzC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACOI;;AACkE;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAAZ,QAAA,iBAAT;AAA8B,SAA9B;;AAChE;;AACF;;;;;;;;;AAHyC;;AAEvC;;AAAA;;;;;;;;AAPJ;;AAIE;;AAAI;;AAAM;;AACV;;AAIA;;AACA;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,MAAT;AAAuB,SAAvB;;AAAyB;;AAAG;;AACjF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,WAAT;AAA4B,SAA5B;;AAA8B;;AAAS;;AAC5F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,WAAmB,CAAnB,CAAT;AAA8B,SAA9B;;AAAgC;;AAAS;;AAC9F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,WAAmB,EAAnB,CAAT;AAA+B,SAA/B;;AAAiC;;AAAS;;AAC/F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,WAAmB,EAAnB,CAAT;AAA+B,SAA/B;;AAAiC;;AAAS;;AAC/F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,MAAT;AAAuB,SAAvB;;AAAyB;;AAAG;;AACjF;;AAEA;;AAAI;;AAAK;;AACT;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACF;;;;;;AAzCmC,8FAA4B,YAA5B,EAA4B,kBAA5B,EAA4B,OAA5B,EAA4B,+KAA5B;;AAMzB;;AAAA;;AAuB6C;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAOrD;;;;;;AAAkB;;;;;;AAQV;;AAGE;;AAAsC;;AAAoB;;AAAkC;;AAC9F;;;;;;;;;;AAHI;;AAEF;;AAAA;;AAA0D;;AAAA;;;;;;;;AARlE;;AACK;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAEH;;AACE;;AACE;;AAKF;;AACF;;AACF;;;;;;;;;AAZK;;AAGe;;AAAA;;AAIV;;AAAA;;;;;;AARZ;;AACE;;AAaF;;;;;;AAXO;;AAAA;;;;;;AAaT;;;;;;AAAkB;;;;QDhDPuH,gB;;;;;;;AAKX,gCAAYrH,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,qCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,SAAhF;AACA,gBAAKN,QAAL,GAAgB,IAAI,6EAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAI,KAAKV,QAAL,CAAckB,MAAd,CAAqBgF,OAArB,CAA6BzF,UAA7B,MAA6C,CAAC,CAA9C,IAAmD,CAAC,KAAK+G,aAAL,CAAmB/G,UAAnB,CAAxD,EAAwF;AACtF,gBAAMgH,gBAAgB,GAAG,KAAK5G,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,CAAzB;;AACA,gBAAI,CAAC,KAAKT,QAAL,CAAc0H,cAAd,EAAD,IACF,KAAK1H,QAAL,CAAckB,MAAd,CAAqB,KAAKL,cAAL,CAAoBL,MAApB,EAA4BmH,gBAA5B,EAArB,MAAyElH,UADvE,IAEF,KAAKmH,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAFF,EAEiD;AAE/C,kBAAI,KAAKoH,sBAAL,CAA4BrH,MAA5B,EAAoCC,UAApC,KAAoDgH,gBAAgB,GAAG,KAAK1G,UAAzB,GAAuC,CAA9F,EAAiG;AAC/F,qBAAKF,cAAL,CAAoBL,MAApB,EAA4BsH,aAA5B,CAA0CrH,UAA1C,EAAsD,CAAtD;AACD,eAFD,MAEO;AACL,oBAAIM,UAAU,GAAG,KAAKA,UAAtB;;AACA,oBAAI0G,gBAAgB,GAAG,CAAnB,IAAyBA,gBAAgB,GAAG,KAAK1G,UAAzB,IAAwC,CAApE,EAAuE;AACrEA,4BAAU,GAAG,CAAC0G,gBAAgB,GAAG,KAAK1G,UAAzB,IAAuC,CAApD;AACD;;AACD,qBAAKF,cAAL,CAAoBL,MAApB,EAA4BsH,aAA5B,CAA0CrH,UAA1C,EAAsDgH,gBAAgB,GAAG,KAAK1G,UAA9E;AACA,qBAAKA,UAAL,GAAkBA,UAAlB;AACD;AACF;;AAED,gBAAI,KAAK6G,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAAJ,EAAmD;AACjD,kBAAI,KAAKT,QAAL,CAAc0H,cAAd,EAAJ,EAAoC;AAClC,oBAAI,KAAK1H,QAAL,CAAckB,MAAd,CAAqB,KAAKL,cAAL,CAAoBL,MAApB,EAA4BmH,gBAA5B,EAArB,MAAyElH,UAA7E,EAAyF;AACvF,uBAAKI,cAAL,CAAoBL,MAApB,EAA4BY,qBAA5B;AACD;AACF;;AACD,mBAAK2G,aAAL,CAAmBtH,UAAnB;AACD;AACF;AACF;;;eAED,0BAAiBD,MAAjB,EAAiC;AAAA;;AAC/B,eAAKL,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,mBAAIA,CAAC,CAACjB,KAAF,GAAU,OAAI,CAACsH,cAAL,CAAoBrG,CAApB,CAAd;AAAA,WAA3B;AACA,cAAMsG,WAAW,GAAG,KAAKjI,QAAL,CAAckI,YAAd,MAAgC,KAAKlI,QAAL,CAAc0H,cAAd,EAApD;AACA,eAAKvH,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,mBAAIA,CAAC,CAACK,MAAF,CAC7B,OAAI,CAACmG,YAAL,CAAkBxG,CAAlB,MACE,CAACsG,WAAD,IAAgB,OAAI,CAAC9H,IAAL,CAAUwF,eAAV,CAA0BhE,CAA1B,CAAjB,IAAmDsG,WAAW,IAAI,OAAI,CAAC9H,IAAL,CAAUiI,gBAAV,CAA2BzG,CAA3B,CADnE,CAD6B,CAAJ;AAAA,WAA3B;;AAGA,cAAI,KAAKxB,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,uBAAcjC,MAAd,EAA8BC,UAA9B,EAAgD;AAC9C,cAAMC,KAAK,GAAG,KAAK2H,cAAL,CAAoB7H,MAApB,EAA4BC,UAA5B,CAAd;AACA,cAAMwH,WAAW,GAAG,KAAKjI,QAAL,CAAckI,YAAd,MAAgC,KAAKlI,QAAL,CAAc0H,cAAd,EAApD;AACA,cAAMD,gBAAgB,GAAG,KAAK5G,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,CAAzB;AAEA,cAAIoF,GAAG,GAAG,EAAV;;AACA,cAAIoC,WAAW,IAAIvH,KAAK,KAAK,CAA7B,EAAgC;AAC9BmF,eAAG,IAAInF,KAAP;AACD;;AAED,cAAI+G,gBAAgB,KAAK,CAArB,IAA0B5B,GAAG,CAAC1E,MAAJ,KAAe,CAA7C,EAAgD;AAC9C,mBAAO,GAAP;AACD,WAFD,MAEO,IAAIsG,gBAAgB,GAAG,CAAnB,IAAwB,CAACQ,WAAzB,IAAwC,CAAC,KAAKjI,QAAL,CAAcsI,aAAd,EAA7C,EAA4E;AACjF,mBAAO,KAAKC,aAAL,CAAmB/H,MAAnB,EAA2BC,UAA3B,IAAyC,EAAhD;AACD,WAFM,MAEA,IAAIgH,gBAAgB,KAAK,CAArB,IAA2B,CAACQ,WAAW,IAAI,KAAKjI,QAAL,CAAcsI,aAAd,EAAhB,KAAkDb,gBAAgB,GAAG,CAApG,EAAwG;AAC7G5B,eAAG,IAAI,KAAP;AACD,WAFM,MAEA;AACL,iBAAK,IAAIxD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGoF,gBAApB,EAAsCpF,CAAC,EAAvC,EAA2C;AACzCwD,iBAAG,IAAI,GAAP;AACD;AACF;;AACD,iBAAOA,GAAP;AACD;;;eAED,uBAAcrF,MAAd,EAA8BC,UAA9B,EAAgD;AAC9C,iBAAO,KAAKT,QAAL,CAAckB,MAAd,CAAqB,KAAKL,cAAL,CAAoBL,MAApB,EAA4BmH,gBAA5B,EAArB,MAAyElH,UAAhF;AACD;;;eAED,8BAAqBD,MAArB,EAAqCC,UAArC,EAAuD;AACrD,iBAAO,KAAKI,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,KAAyD,CAAhE;AACD;;;eAED,wBAAeA,UAAf,EAAiC;AAC/B,cAAI,KAAKT,QAAL,CAAcsI,aAAd,EAAJ,EAAmC;AACjC,mBAAO,KAAKtI,QAAL,CAAckB,MAAd,CAAqBgF,OAArB,CAA6BzF,UAA7B,MAA6C,CAAC,CAA9C,IAAmD,CAAC,KAAKmH,oBAAL,CAA0B,KAAKY,kBAAL,EAA1B,EAAqD/H,UAArD,CAA3D;AACD;;AACD,iBAAO,KAAKT,QAAL,CAAckB,MAAd,CAAqBgF,OAArB,CAA6BzF,UAA7B,MAA6C,CAAC,CAA9C,IAAmD,CAAC,KAAK+G,aAAL,CAAmB/G,UAAnB,CAA3D;AACD;;;eAED,wBAAeA,UAAf,EAAiC;AAC/B,iBAAO,KAAK4C,cAAL,CAAoB5C,UAApB,KACL,CAAC,KAAKmH,oBAAL,CAA0B,KAAKY,kBAAL,EAA1B,EAAqD/H,UAArD,CADH;AAED;;;eAED,0BAAiBA,UAAjB,EAAmC;AACjC,iBAAO,KAAK4C,cAAL,CAAoB5C,UAApB,KACL,KAAKmH,oBAAL,CAA0B,KAAKY,kBAAL,EAA1B,EAAqD/H,UAArD,CADF;AAED;;;eAED,sBAAaA,UAAb,EAA+B;AAAA;;AAC7B,cAAI,KAAKgI,cAAL,CAAoBhI,UAApB,CAAJ,EAAqC;AACnC,gBAAMgH,gBAAgB,GAAG,KAAK5G,cAAL,CAAoB,KAAK2H,kBAAL,EAApB,EAA+CjD,aAA/C,CAA6D9E,UAA7D,CAAzB;AACA,gBAAMiI,SAAS,GAAG,GAAGC,QAAH,CAAY,IAAIlB,gBAAhB,EAAkC,GAAlC,CAAlB;AACA,mBAAOiB,SAAS,GAAG,IAAZ,GAAmB,KAAKvI,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAI,OAAI,CAACiG,oBAAL,CAA0BjG,CAA1B,EAA6BlB,UAA7B,CAAJ;AAAA,aAA1B,EACvB+C,GADuB,CACnB,UAAA7B,CAAC;AAAA,qBAAIA,CAAC,CAACtD,IAAF,CAAOuK,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAJ;AAAA,aADkB,EACOnF,IADP,CACY,GADZ,EACiBoF,WADjB,EAA1B;AAED,WALD,MAKO,IAAI,KAAKC,gBAAL,CAAsBrI,UAAtB,CAAJ,EAAuC;AAC5C,mBAAO,KAAKN,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAI,CAAC,OAAI,CAACiG,oBAAL,CAA0BjG,CAA1B,EAA6BlB,UAA7B,CAAL;AAAA,aAA1B,EACJ+C,GADI,CACA,UAAA7B,CAAC;AAAA,qBAAIA,CAAC,CAACtD,IAAF,CAAOuK,MAAP,CAAc,CAAd,EAAiB,CAAjB,CAAJ;AAAA,aADD,EAC0BnF,IAD1B,CAC+B,GAD/B,EACoCoF,WADpC,EAAP;AAED;;AACD,iBAAO,EAAP;AACD;;;eAED,uBAAc;AACZ,eAAK1I,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAACI,KAAP,GAAe,IAAI,uEAAJ,EAAnB;AAAA,WAAhC;AACD;;;eAED,oCAAwB;AACtB,iBAAO,KAAKZ,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAArC;AACD;;;eAED,+BAAsBX,MAAtB,EAAuC;AAAA;;AACrC,eAAKuI,eAAL,GAAuBvI,MAAvB;AACAwI,oBAAU,CAAC;AAAA,mBAAM,OAAI,CAACD,eAAL,GAAuB,IAA7B;AAAA,WAAD,EAAoC,IAApC,CAAV;AACD;;;eAED,4BAAmBvI,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAd;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAK2B,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA4B,GAA5B,GAAgC,KAAKnB,QAAL,CAAc+C,KAArD;AACD;;;eAEO,8BAAkB;AACxB,iBAAO,CAAC,CAAC,KAAKgG,eAAP,GAAyB,KAAKA,eAA9B,GAAgD,KAAK5I,IAAL,CAAU2C,eAAV,EAAvD;AACD;;;eAEO,wBAAetC,MAAf,EAA+B;AACrC,cAAIkG,KAAK,GAAG,CAAZ;;AACA,cAAI,KAAK1G,QAAL,CAAckI,YAAd,MAAgC,KAAKlI,QAAL,CAAc0H,cAAd,EAApC,EAAoE;AAClEhB,iBAAK,GAAG,KAAKuC,2BAAL,CAAiCzI,MAAjC,CAAR;AACD,WAFD,MAEO,IAAI,KAAKR,QAAL,CAAckJ,WAAd,EAAJ,EAAiC;AACtCxC,iBAAK,GAAG,KAAKyC,0BAAL,CAAgC3I,MAAhC,CAAR;AACD;;AACD,iBAAOkG,KAAP;AACD;;;eAEO,oCAA2BlG,MAA3B,EAA2C;AAAA;;AACjD,cAAIkG,KAAK,GAAG,CAAZ;AACA,eAAK1G,QAAL,CAAckB,MAAd,CAAqBU,OAArB,CAA6B,UAAAnB,UAAU,EAAI;AACzC,gBAAI,OAAI,CAACmH,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAAJ,EAAmD;AACjDiG,mBAAK,IAAI,CAAC,OAAI,CAAC7F,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,IAAwD,CAAzD,IAA8D,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAAvE;AACD;AACF,WAJD,EAIG,IAJH;AAKA,iBAAOiG,KAAP;AACD;;;eAEO,qCAA4BlG,MAA5B,EAA4C;AAAA;;AAClD,cAAIkG,KAAK,GAAG,CAAZ;AACA,eAAK1G,QAAL,CAAckB,MAAd,CAAqBU,OAArB,CAA6B,UAAAnB,UAAU,EAAI;AACzCiG,iBAAK,IAAI,OAAI,CAAC7F,cAAL,CAAoBL,MAApB,EAA4B6I,cAA5B,CAA2C5I,UAA3C,IAAyD,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAAlE;AACD,WAFD,EAEG,IAFH;AAGA,iBAAOiG,KAAP;AACD;;;eAEO,uBAAcjG,UAAd,EAAkC;AAAA;;AACxC,eAAKN,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClC,gBAAI,CAAC,OAAI,CAACoH,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAAL,EAAoD;AAClD,qBAAI,CAACI,cAAL,CAAoBL,MAApB,EAA4B8I,cAA5B,CAA2C7I,UAA3C,EAAuD,OAAI,CAACI,cAAL,CAAoBL,MAApB,EAA4B6I,cAA5B,CAA2C5I,UAA3C,IAAyD,OAAI,CAACM,UAArH;AACD;AACF,WAJD,EAIG,IAJH;AAKD;;;eAEO,uBAAcP,MAAd,EAA8BC,UAA9B,EAAgD;AACtD,cAAI,KAAKmH,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAAJ,EAAmD;AACjD,mBAAO,CAAC,KAAKI,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,IAAwD,CAAzD,IAA8D,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAArE;AACD;;AACD,iBAAO,CAAP;AACD;;;eAEO,wBAAeD,MAAf,EAA+BC,UAA/B,EAAiD;AACvD,iBAAO,KAAKI,cAAL,CAAoBL,MAApB,EAA4B6I,cAA5B,CAA2C5I,UAA3C,IAAyD,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAAhE;AACD;;;eAEO,uBAAcA,UAAd,EAAgC;AAAA;;AACtC,cAAI8I,MAAM,GAAG,IAAb;AACA,eAAKpJ,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClC+I,kBAAM,GAAGA,MAAM,IAAI,OAAI,CAAC3B,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAAnB;AACD,WAFD,EAEG,IAFH;AAGA,iBAAO8I,MAAP;AACD;;;eAEO,gCAAuB/I,MAAvB,EAAuCC,UAAvC,EAAyD;AAAA;;AAC/D,cAAI8I,MAAM,GAAG,IAAb;AACA,eAAKpJ,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC,EAAI;AAC7B,gBAAIA,CAAC,CAAC1D,EAAF,KAASuC,MAAM,CAACvC,EAApB,EAAwB;AACtBsL,oBAAM,GAAGA,MAAM,IAAI,OAAI,CAAC3B,oBAAL,CAA0BjG,CAA1B,EAA6BlB,UAA7B,CAAnB;AACD;AACF,WAJD,EAIG,IAJH;AAKA,iBAAO8I,MAAP;AACD;;;eAEO,sBAAa/I,MAAb,EAA2B;AAAA;;AACjC,cAAIgJ,IAAI,GAAG,IAAX;AACA,eAAKxJ,QAAL,CAAckB,MAAd,CAAqBU,OAArB,CAA6B,UAAAnB,UAAU,EAAI;AACzC+I,gBAAI,GAAGA,IAAI,IAAI,OAAI,CAAC5B,oBAAL,CAA0BpH,MAA1B,EAAkCC,UAAlC,CAAf;AACD,WAFD;AAGA,iBAAO+I,IAAP;AACD;;;;MAlNmC,mE;;;uBAAzBjC,gB,EAAgB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAAhBA,gB;AAAgB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,soB;AAAA;AAAA;ACjB7B;;AAEE;;AA2CA;;AAEE;;AAEA;;AAeF;;AACA;;AACF;;;;AAhEgB;;AAAA;;AA2CS;;AAAA;;AAEuB;;AAAA;;AAE9B;;AAAA;;AAgB4B;;AAAA;;;;;;mBDlDhC,CAAC,iEAAD;;;;;;sEAEDA,gB,EAAgB;cAJ5B,uDAI4B;eAJlB;AACT/H,qBAAW,EAAE,0BADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIkB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca+J,a;;;;;YAAAA;;;;yBAAAA,a;AAAa,O;AAAA,gBARf,CACP,kEADO,EAEP,6DAAa1F,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQe;;;;0HAAbiL,a,EAAa;AAAA,uBAFT,mEAES;AAFO,kBAL7B,kEAK6B,EALjB,4DAKiB;AAEP,O;AAPV,K;;;;;sEAOHA,a,EAAa;cATzB,sDASyB;eAThB;AACR5J,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,mEAAD;AAPN,S;AASgB,Q;;;;;;;;;;;;;;;;;;ACd1B;AAAA;;;AAAA;AAAA;AAAA;;QAAa4J,e;;;AAMX,iCAAc;AAAA;;AAJd,aAAAxI,MAAA,GAAmB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,CAAnB;AACA,aAAAyI,KAAA,GAAmB,EAAnB;AAIE,aAAK5G,KAAL,GAAa,CAAb;AACA,YAAI6G,UAAU,GAAG,KAAjB;;AACA,aAAK,IAAIvH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,eAAKsH,KAAL,CAAWtH,CAAX,IAAgBuH,UAAhB;;AACA,cAAIvH,CAAC,KAAK,EAAV,EAAc;AACZuH,sBAAU,GAAG,IAAb;AACD;AACF;;AACD,aAAKC,UAAL;AACD;;;;eAED,mBAAUC,QAAV,EAA4B;AAC1B,eAAK,IAAIzH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsH,KAAL,CAAWxI,MAA/B,EAAuCkB,CAAC,EAAxC,EAA4C;AAC1C,iBAAKsH,KAAL,CAAWtH,CAAX,IAAgB,KAAhB;AACD;;AACD,iBAAM,KAAKsH,KAAL,CAAWjI,MAAX,CAAkB,UAAAqI,CAAC;AAAA,mBAAI,CAAC,CAACA,CAAN;AAAA,WAAnB,EAA4B5I,MAA5B,KAAuC2I,QAA7C,EAAuD;AACrD,iBAAKH,KAAL,CAAW5E,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAX,IAA6C,IAA7C;AACD;;AACD,eAAK6E,KAAL,CAAW,KAAKA,KAAL,CAAWxI,MAAX,GAAoB,CAA/B,IAAoC,IAApC;AACA,eAAK0I,UAAL;AACD;;;eAED,eAAM;AACJ,eAAKG,eAAL,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,EAAgD,EAAhD,EAAoD,EAApD,EAAwD,EAAxD,EAA4D,EAA5D,EAAgE,EAAhE,EAAoE,EAApE,EAAwE,EAAxE,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,CAArB;AACD;;;eAED,gBAAO;AACL,eAAKA,eAAL,CAAqB,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,EAAyC,EAAzC,CAArB;AACD;;;eAED,gBAAO;AACL,eAAKA,eAAL,CAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAAjC,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAAjC,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,EAAD,EAAK,EAAL,EAAS,CAAT,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,EAA1B,EAA8B,CAA9B,EAAiC,EAAjC,CAArB;AACD;;;eAED,gBAAO;AACL,eAAKA,eAAL,CAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,EAAZ,EAAgB,CAAhB,EAAmB,EAAnB,EAAuB,CAAvB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAAjC,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,CAA1B,EAA6B,EAA7B,EAAiC,EAAjC,CAArB;AACD;;;eAED,eAAM;AACJ,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,CAArB;AACD;;;eAED,gBAAO;AACL,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,EAAiC,EAAjC,EAAqC,EAArC,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,EAAb,EAAiB,EAAjB,EAAqB,EAArB,EAAyB,EAAzB,EAA6B,EAA7B,CAArB;AACD;;;eAED,oBAAW;AACT,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,EAA4C,EAA5C,CAArB;AACD;;;eAED,sBAAU;AACR,cAAMC,OAAO,GAAa,EAA1B;;AACA,eAAK,IAAI5H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B4H,mBAAO,CAAC5H,CAAD,CAAP,GAAcA,CAAC,GAAG,CAAlB;AACD;;AACD,iBAAO4H,OAAP;AACD;;;eAED,wBAAe7C,KAAf,EAA4B;AAC1B,iBAAO,CAAC,CAAC,KAAKuC,KAAL,CAAWvC,KAAX,CAAT;AACD;;;eAED,mBAAU/E,CAAV,EAAqB;AACnB,eAAKsH,KAAL,CAAWtH,CAAX,IAAgB,CAAC,KAAKsH,KAAL,CAAWtH,CAAX,CAAjB;AACA,eAAKwH,UAAL;AACD;;;eAED,kBAAS9G,KAAT,EAAwB;AACtB,eAAKA,KAAL,GAAaA,KAAb;AACD;;;eAED,sBAAa;AACX,eAAK7B,MAAL,GAAc,EAAd;;AACA,eAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,gBAAI,KAAKsH,KAAL,CAAWtH,CAAX,CAAJ,EAAmB;AACjB,mBAAKnB,MAAL,CAAY+D,IAAZ,CAAiB5C,CAAjB;AACD;AACF;AACF;;;eAED,uBAAW;AACT,iBAAO,KAAKU,KAAL,KAAe,CAAtB;AACD;;;eAED,wBAAY;AACV,iBAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;eAED,0BAAc;AACZ,iBAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;eAED,yBAAgB7B,MAAhB,EAAkC;AAAA;;AAChC,eAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsH,KAAL,CAAWxI,MAA/B,EAAuCkB,CAAC,EAAxC,EAA4C;AAC1C,iBAAKsH,KAAL,CAAWtH,CAAX,IAAgB,KAAhB;AACD;;AACDnB,gBAAM,CAACU,OAAP,CAAe,UAAAsB,CAAC;AAAA,mBAAI,OAAI,CAACyG,KAAL,CAAWzG,CAAC,GAAG,CAAf,IAAoB,IAAxB;AAAA,WAAhB;AACA,eAAK2G,UAAL;AACD;;;;;;;;;;;;;;;;;;;;;ACrIH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaK,Y;;;;;;;AAMX,8BAAc;AAAA;;AAAA;;AACZ;AACA,gBAAKtE,UAAL,GAAkB,EAAlB;AACA,gBAAKuE,WAAL,GAAmB,EAAnB;AACA,gBAAKlJ,aAAL,GAAqB,CAArB;AAJY;AAKb;;;;eAED,uBAAcR,UAAd,EAAgC;AAC9B,iBAAO,KAAK4G,aAAL,CAAmB,KAAKzB,UAAxB,EAAoCnF,UAApC,EAAgD0E,KAAvD;AACD;;;eAED,uBAAc1E,UAAd,EAAkC0E,KAAlC,EAAiD;AAC/C,eAAKkC,aAAL,CAAmB,KAAKzB,UAAxB,EAAoCnF,UAApC,EAAgD0E,KAAhD,GAAwDA,KAAxD;AACD;;;eAED,wBAAe1E,UAAf,EAAiC;AAC/B,iBAAO,KAAK4G,aAAL,CAAmB,KAAK8C,WAAxB,EAAqC1J,UAArC,EAAiD0E,KAAxD;AACD;;;eAED,wBAAe1E,UAAf,EAAmC0E,KAAnC,EAAkD;AAChD,eAAKkC,aAAL,CAAmB,KAAK8C,WAAxB,EAAqC1J,UAArC,EAAiD0E,KAAjD,GAAyDA,KAAzD;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAKlE,aAAZ;AACD;;;eAED,iCAAwB;AACtB,eAAKA,aAAL;AACD;;;eAED,iBAAK;AACH,cAAML,KAAK,GAAG,IAAIsJ,YAAJ,EAAd;AACAtJ,eAAK,CAACK,aAAN,GAAsB,KAAKA,aAA3B;AACA,eAAK2E,UAAL,CAAgBhE,OAAhB,CAAwB,UAAA0F,EAAE;AAAA,mBAAI1G,KAAK,CAACgF,UAAN,CAAiBX,IAAjB,CAAsBqC,EAAE,CAAChB,KAAH,EAAtB,CAAJ;AAAA,WAA1B;AACA,eAAK6D,WAAL,CAAiBvI,OAAjB,CAAyB,UAAA0F,EAAE;AAAA,mBAAI1G,KAAK,CAACuJ,WAAN,CAAkBlF,IAAlB,CAAuBqC,EAAE,CAAChB,KAAH,EAAvB,CAAJ;AAAA,WAA3B;AACA,iBAAO1F,KAAP;AACD;;;;MA3C+B,8E;;;;;;;;;;;;;;;;;ACHlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACiCI;;AACkE;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAZ,QAAA,kBAAT;AAA8B,SAA9B;;AAChE;;AACF;;;;;;;;;AAHyC;;AAEvC;;AAAA;;;;;;;;AAjCJ;;AAGE;;AAAI;;AAAK;;AACT;;AAEE;;AACE;;AAAW;;AAAU;;AACrB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AAEA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AAEA;;AACE;;AAAW;;AAAU;;AACrB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AACF;;AAEA;;AAEA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,iBAAT;AAAkC,SAAlC;;AAAoC;;AAAS;;AAErD;;AACA;;AAEA;;AAAI;;AAAM;;AACV;;AAIA;;AACA;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,MAAT;AAAuB,SAAvB;;AAAyB;;AAAG;;AACjF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAT;AAA4B,SAA5B;;AAA8B;;AAAS;;AAC5F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAmB,CAAnB,CAAT;AAA8B,SAA9B;;AAAgC;;AAAS;;AAC9F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAmB,EAAnB,CAAT;AAA+B,SAA/B;;AAAiC;;AAAS;;AAC/F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAmB,EAAnB,CAAT;AAA+B,SAA/B;;AAAiC;;AAAS;;AAC/F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,MAAT;AAAuB,SAAvB;;AAAyB;;AAAG;;AAEnF;;;;;;AArDmC,kFAAgB,YAAhB,EAAgB,mBAAhB,EAAgB,OAAhB,EAAgB,MAAhB;;AAQtB;;AAAA;;AAKA;;AAAA;;AAKA;;AAAA;;AAM0C;;AAAA;;AAQ7C;;AAAA;;;;;;AAwBR;;;;;;AAAkB;;;;;;AAEhB;;AAEE;;AACF;;;;;;;;;AAHK;;AAEe;;AAAA,wFAAiB,YAAjB,EAAiB,KAAjB;;;;;;AAHtB;;AACE;;AAIF;;;;;;AAHM;;AAAA;;;;;;AAKR;;;;;;AAAkB;;;;QDjDPoK,a;;;;;;;AAIX,6BAAYlK,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,qCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,MAAhF,EAAwF,CAAxF;AACA,gBAAKN,QAAL,GAAgB,IAAI,wEAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AAAA;;AACjE,cAAME,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;AACA,cAAM6J,WAAW,GAAG3J,KAAK,GAAG,KAAKK,UAAjC;;AACA,cAAIL,KAAK,KAAK,CAAd,EAAiB;AACfF,kBAAM,CAACE,KAAP,IAAgB,KAAKV,QAAL,CAAckC,UAA9B;AACD,WAFD,MAEO,IAAItB,KAAK,CAAC0J,SAAN,CAAgBhH,IAAhB,CAAqB,UAAAjB,CAAC;AAAA,mBAAIA,CAAC,KAAK5B,UAAV;AAAA,WAAtB,CAAJ,EAAiD;AACtDD,kBAAM,CAACE,KAAP,IAAgB2J,WAAhB;AACD,WAFM,MAEA,IAAI,KAAKvB,gBAAL,CAAsBrI,UAAtB,CAAJ,EAAuC;AAC5CD,kBAAM,CAACE,KAAP,IAAgB2J,WAAhB;;AACA,gBAAI,KAAKrK,QAAL,CAAcuK,QAAlB,EAA4B;AAC1B,kBAAM/J,OAAM,GAAG,KAAKL,IAAL,CAAUsB,OAAV,CAAkB0E,IAAlB,CAAuB,UAAAxE,CAAC;AAAA,uBAAIA,CAAC,IAAI,OAAI,CAACxB,IAAL,CAAU2C,eAAV,EAAL,IAAoC,OAAI,CAACjC,cAAL,CAAoBc,CAApB,EAAuB2I,SAAvB,CAAiChH,IAAjC,CAAsC,UAAAjB,CAAC;AAAA,yBAAIA,CAAC,KAAK5B,UAAV;AAAA,iBAAvC,CAAxC;AAAA,eAAxB,CAAf;;AACA,kBAAID,OAAJ,EAAY;AACVA,uBAAM,CAACE,KAAP,IAAgB2J,WAAhB;AACD;AACF;AACF,WARM,MAQA;AACLzJ,iBAAK,CAAC0J,SAAN,CAAgBrF,IAAhB,CAAqBxE,UAArB;AACD;AACF;;;eAED,0BAAiBD,MAAjB,EAAiC;AAAA;;AAC/B,eAAKL,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,mBAAIA,CAAC,CAACK,MAAF,CAASL,CAAC,CAACjB,KAAF,IAAW,OAAI,CAACV,QAAL,CAAcwK,WAAlC,CAAJ;AAAA,WAA3B;AACA,cAAM7H,aAAa,GAAG,KAAKxC,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAAC,OAAI,CAACiB,UAAL,CAAgBjB,CAAhB,CAAL;AAAA,WAA1B,CAAtB;;AACA,cAAIgB,aAAa,CAACxB,MAAd,KAAyB,CAA7B,EAAgC;AAC9BwB,yBAAa,CAAC,CAAD,CAAb,CAAiBX,MAAjB,CAAwB,IAAxB;AACD;;AACD,cAAI,CAACW,aAAL,EAAoB;AAClBnC,kBAAM,CAACwB,MAAP,CAAc,IAAd;AACD,WAFD,MAEO;AACL,gBAAI,KAAK7B,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,mBAAK9B,IAAL,CAAUsC,UAAV;AACD;;AACD,mBAAO,KAAKG,UAAL,CAAgB,KAAKzC,IAAL,CAAU2C,eAAV,EAAhB,CAAP,EAAqD;AACnD,mBAAK3C,IAAL,CAAUsC,UAAV;AACD;AACF;AACF;;;eAED,oBAAWjC,MAAX,EAAyB;AACvB,iBAAOA,MAAM,CAACE,KAAP,IAAgB,CAAvB;AACD;;;eAED,wBAAeD,UAAf,EAAiC;AAC/B,cAAMG,KAAK,GAAG,KAAKC,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,CAAd;AACA,iBAAOlC,KAAK,CAAC0J,SAAN,CAAgBhH,IAAhB,CAAqB,UAAAjB,CAAC;AAAA,mBAAIA,CAAC,KAAK5B,UAAV;AAAA,WAAtB,CAAP;AACD;;;eAED,0BAAiBA,UAAjB,EAAmC;AAAA;;AACjC,iBAAO,CAAC,KAAKT,QAAL,CAAcyK,cAAd,CAA6BhK,UAA7B,CAAD,IACL,KAAKN,IAAL,CAAUsB,OAAV,CAAkB6B,IAAlB,CAAuB,UAAA3B,CAAC;AAAA,mBAAIA,CAAC,IAAI,OAAI,CAACxB,IAAL,CAAU2C,eAAV,EAAL,IAAoC,OAAI,CAACjC,cAAL,CAAoBc,CAApB,EAAuB2I,SAAvB,CAAiChH,IAAjC,CAAsC,UAAAjB,CAAC;AAAA,qBAAIA,CAAC,KAAK5B,UAAV;AAAA,aAAvC,CAAxC;AAAA,WAAxB,CADF;AAED;;;eAED,sBAAaA,UAAb,EAA+B;AAAA;;AAC7B,cAAMD,MAAM,GAAG,KAAKL,IAAL,CAAUsB,OAAV,CAAkB0E,IAAlB,CAAuB,UAAAxE,CAAC;AAAA,mBAAI,OAAI,CAACd,cAAL,CAAoBc,CAApB,EAAuB2I,SAAvB,CAAiChH,IAAjC,CAAsC,UAAAjB,CAAC;AAAA,qBAAIA,CAAC,KAAK5B,UAAV;AAAA,aAAvC,CAAJ;AAAA,WAAxB,CAAf;;AACA,cAAID,MAAJ,EAAY;AACV,mBAAOA,MAAM,CAACnC,IAAP,CAAYuK,MAAZ,CAAmB,CAAnB,EAAsB,CAAtB,EAAyBC,WAAzB,EAAP;AACD;;AACD,iBAAO,EAAP;AACD;;;eAED,uBAAc;AAAA;;AACZ,eAAK1I,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClCA,kBAAM,CAACI,KAAP,GAAe,IAAI,kEAAJ,EAAf;AACAJ,kBAAM,CAACE,KAAP,GAAe,OAAI,CAACV,QAAL,CAAc0K,UAA7B;AACD,WAHD;AAID;;;eAED,yBAAa;AACX,iBAAO,KAAK1K,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA4B,GAA5B,GAAgC,KAAKnB,QAAL,CAAcwK,WAA9C,GAA0D,GAA1D,GAA8D,KAAKxK,QAAL,CAAc0K,UAAnF;AACD;;;;MA/EgC,mE;;;uBAAtBN,a,EAAa,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAAbA,a;AAAa,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,krB;AAAA;AAAA;ACjB1B;;AAEE;;AAuDA;;AACE;;AACA;;AAMF;;AACA;;AACF;;;;AAjEgB;;AAAA;;AAuDS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAO4B;;AAAA;;;;;;mBDnDhC,CAAC,iEAAD;;;;;;sEAEDA,a,EAAa;cAJzB,uDAIyB;eAJf;AACT5K,qBAAW,EAAE,uBADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaiL,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBARZ,CACP,kEADO,EAEP,6DAAa5G,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQY;;;;0HAAVmM,U,EAAU;AAAA,uBAFN,6DAEM;AAFO,kBAL1B,kEAK0B,EALd,4DAKc;AAEP,O;AAPP,K;;;;;sEAOHA,U,EAAU;cATtB,sDASsB;eATb;AACR9K,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,6DAAD;AAPN,S;AASa,Q;;;;;;;;;;;;;;;;;;ACdvB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEa8K,Y;;;;;;;AAMX,8BAAc;AAAA;;AAAA;;AACZ;;AACA,gBAAKC,IAAL;;AACA,gBAAKH,UAAL,GAAkB,EAAlB;AACA,gBAAKF,WAAL,GAAmB,GAAnB;AACA,gBAAKtI,UAAL,GAAkB,EAAlB;AACA,gBAAKqI,QAAL,GAAgB,IAAhB;AANY;AAOb;;;;eAED,gBAAO;AACL,eAAKP,eAAL,CAAqB,CAAC,EAAD,EAAK,CAAL,EAAQ,CAAR,EAAW,EAAX,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,EAAvC,EAA2C,CAA3C,CAArB;AACD;;;eAED,iBAAQ;AACN,eAAKA,eAAL,CAAqB,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,CAAZ,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,EAApC,EAAwC,EAAxC,CAArB;AACD;;;eAED,0BAAiB;AACf,eAAKO,QAAL,GAAgB,CAAC,KAAKA,QAAtB;AACD;;;;MAzB+B,qF;;;;;;;;;;;;;;;;;ACFlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaO,S;;;;;;;AAIX,2BAAc;AAAA;;AAAA;;AACZ;AAHF,gBAAAR,SAAA,GAAY,EAAZ;AAEc;AAEb;;;;eAED,iBAAK;AACH,cAAM1J,KAAK,GAAG,IAAIkK,SAAJ,EAAd;AACAlK,eAAK,CAAC0J,SAAN,sBAAsB,KAAKA,SAA3B;AACA,iBAAO1J,KAAP;AACD;;;;MAZ4B,8E;;;;;;;;;;;;;;;;;ACF/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACcI;;AAEQ;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAZ,QAAA,yBAAT;AAAqC,SAArC;;AAAuC;;AAAW;;;;;;;;AAFjB;;AAEM;;AAAA;;;;;;;;AAI/C;;AAEQ;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,qBAAT;AAAiC,SAAjC;;AAAmC;;AAAS;;;;;;;;AAFX;;AAEE;;AAAA;;;;;;;;AApB7C;;AAKE;;AAAI;;AAAK;;AACT;;AAAiF;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,gBAAT;AAAiC,SAAjC;;AAC/E;;AACF;;AACA;;AAEA;;AAAI;;AAAO;;AACX;;AAGA;;AAEA;;AAAI;;AAAK;;AACT;;AAGF;;;;;;AArBmC,mFAAiB,YAAjB,EAAiB,mBAAjB,EAAiB,OAAjB,EAAiB,2SAAjB;;AAMQ;;AAAA;;AAOjC;;AAAA;;AAMA;;AAAA;;;;;;AAKR;;;;;;AAAkB;;;;;;AAEhB;;AAEE;;AACF;;;;;;;;;AAHK;;AAEe;;AAAA,wFAAiB,YAAjB,EAAiB,KAAjB;;;;;;AAHtB;;AACE;;AAIF;;;;;;AAHO;;AAAA;;;;;;AAKT;;;;;;AAAkB;;;;QDjBP+K,c;;;;;;;AAIX,8BAAY7K,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,OAAhF;AACA,gBAAKN,QAAL,GAAgB,IAAI,0EAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAI,KAAKP,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,gBAAI0E,GAAG,GAAG,CAAV;;AACA,iBAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,kBAAMC,CAAC,GAAG9B,MAAM,CAAC+B,aAAP,CAAqB/B,MAAM,CAAC+B,aAAP,CAAqBpB,MAArB,GAA8BkB,CAA9B,GAAkC,CAAvD,CAAV;AACAsE,iBAAG,IAAIrE,CAAC,CAAC5B,KAAF,GAAU4B,CAAC,CAACF,KAAnB;AACD;;AACD,gBAAIuE,GAAG,GAAG,KAAK3G,QAAL,CAAcgL,OAApB,KAAgC,CAApC,EAAuC;AACrC,kBAAI,KAAKhL,QAAL,CAAciL,OAAd,IAAyBzK,MAAM,CAAC+B,aAAP,CAAqB/B,MAAM,CAAC+B,aAAP,CAAqBpB,MAArB,GAA8B,CAAnD,EAAsDT,KAAtD,KAAgE,CAAzF,IAA8FiG,GAAG,KAAK,CAA1G,EAA6G;AAC3GA,mBAAG,GAAG,CAAN;AACD;;AACDnG,oBAAM,CAACE,KAAP,IAAiBiG,GAAG,GAAG,KAAK3G,QAAL,CAAcgL,OAArC;AACD;AACF;AACF;;;eAED,0BAAiBxK,MAAjB,EAAiC;AAC/B,eAAKL,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,mBAAIA,CAAC,CAACK,MAAF,CAASL,CAAC,CAACjB,KAAF,IAAW,CAApB,CAAJ;AAAA,WAA3B;;AACA,cAAI,KAAKP,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,wBAAehC,UAAf,EAAiC;AAC/B,cAAI,KAAKN,IAAL,CAAU+K,WAAV,KAA0B,CAA9B,EAAiC;AAC/B,gBAAMC,GAAG,GAAG,KAAKnL,QAAL,CAAcgL,OAAd,GAAyB,KAAK7K,IAAL,CAAU2C,eAAV,GAA4BsI,cAA5B,KAA+C,KAAKpL,QAAL,CAAcgL,OAAlG;AACA,gBAAIpH,GAAG,GAAGuH,GAAG,GAAG,KAAKnL,QAAL,CAAcgL,OAA9B;AACA,gBAAMK,GAAG,GAAG,CAACF,GAAD,CAAZ;;AACA,mBAAOvH,GAAG,IAAI,EAAd,EAAkB;AAChByH,iBAAG,CAACpG,IAAJ,CAASrB,GAAT;AACAA,iBAAG,IAAI,KAAK5D,QAAL,CAAcgL,OAArB;AACD;;AACD,mBAAOK,GAAG,CAAC/H,IAAJ,CAAS,UAAAJ,CAAC;AAAA,qBAAIA,CAAC,KAAKzC,UAAU,GAAG,CAAvB;AAAA,aAAV,CAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;eAED,uBAAc;AAAA;;AACZ,eAAKN,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAACE,KAAP,GAAe,OAAI,CAACV,QAAL,CAAcsL,KAAjC;AAAA,WAAhC;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKtL,QAAL,CAAcgL,OAAd,GAAwB,GAAxB,GAA8B,KAAKhL,QAAL,CAAcsL,KAAnD;AACD;;;;MArDiC,mE;;;uBAAvBP,c,EAAc,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,+I;AAAA,K;;;YAAdA,c;AAAc,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,ya;AAAA;AAAA;ACjB3B;;AAEE;;AAuBA;;AACE;;AACA;;AAMF;;AACA;;AACF;;;;AAjCgB;;AAAA;;AAuBS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAO4B;;AAAA;;;;;;mBDnBhC,CAAC,iEAAD;;;;;;sEAEDA,c,EAAc;cAJ1B,uDAI0B;eAJhB;AACTvL,qBAAW,EAAE,wBADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca6L,W;;;;;YAAAA;;;;yBAAAA,W;AAAW,O;AAAA,gBARb,CACP,kEADO,EAEP,6DAAaxH,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQa;;;;0HAAX+M,W,EAAW;AAAA,uBAFP,+DAEO;AAFO,kBAL3B,kEAK2B,EALf,4DAKe;AAEP,O;AAPR,K;;;;;sEAOHA,W,EAAW;cATvB,sDASuB;eATd;AACR1L,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,+DAAD;AAPN,S;AASc,Q;;;;;;;;;;;;;;;;;;ACdxB;AAAA;;;AAAA;AAAA;AAAA;;QAAa0L,a;;;AAKX,+BAAc;AAAA;;AACZ,aAAKR,OAAL,GAAe,CAAf;AACA,aAAKM,KAAL,GAAa,EAAb;AACA,aAAKL,OAAL,GAAe,IAAf;AACD;;;;eAED,iCAAqB;AACnB,iBAAO,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,EAAgB,CAAhB,EAAmB,EAAnB,CAAP;AACD;;;eAED,+BAAmB;AACjB,iBAAO,CAAC,EAAD,EAAK,EAAL,EAAS,EAAT,EAAa,EAAb,EAAiB,GAAjB,CAAP;AACD;;;eAED,oBAAW9F,KAAX,EAA0B;AACxB,eAAK6F,OAAL,GAAe7F,KAAf;AACD;;;eAED,kBAASA,KAAT,EAAwB;AACtB,eAAKmG,KAAL,GAAanG,KAAb;AACD;;;eAED,yBAAgB;AACd,eAAK8F,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;;;;;;;;;;;;;;;;;;;AC7BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACSI;;AAEQ;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAjL,QAAA,4BAA+B,CAA/B,CAAT;AAA0C,SAA1C;;AAA4C;;AAAS;;;;;;;;AAFpB;;AAEW;;AAAA;;;;;;AATtD;;AAME;;AAAI;;AAAoB;;AACxB;;AAIF;;;;;;AAXmC,4FAA0B,YAA1B,EAA0B,mBAA1B,EAA0B,OAA1B,EAA0B,gWAA1B;;AAQzB;;AAAA;;;;;;AAMR;;;;;;AAAkB;;;;;;AAEhB;;AAEE;;AACF;;;;;;;;;AAHK;;AAEe;;AAAA,wFAAiB,YAAjB,EAAiB,KAAjB;;;;;;AAHtB;;AACE;;AAIF;;;;;;AAHO;;AAAA;;;;;;AAKT;;;;;;AAAkB;;;;QDPPyL,qB;;;;;;;AAIX,qCAAYvL,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,YAAhF,EAA8F,CAA9F,EAAiG,CAAjG;AACA,gBAAKN,QAAL,GAAgB,IAAI,0FAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAME,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;;AACA,cAAI,KAAK6C,cAAL,CAAoB5C,UAApB,EAAgCG,KAAK,CAACK,aAAtC,CAAJ,EAA0D;AACxDL,iBAAK,CAACQ,qBAAN,CAA4B,KAAKL,UAAjC;;AACA,gBAAIH,KAAK,CAACK,aAAN,IAAwB,wEAAe,CAA3C,EAA+C;AAC7CL,mBAAK,CAACK,aAAN,GAAsBL,KAAK,CAACK,aAAN,IAAuB,wEAAe,CAAtC,CAAtB;AACD;;AACDT,kBAAM,CAACE,KAAP,IAAgB,KAAKK,UAArB;AACD;AACF;;;eAED,0BAAiBP,MAAjB,EAAiC;AAAA;;AAC/BA,gBAAM,CAACwB,MAAP,CAAe,KAAK0J,MAAL,MAAiBlL,MAAM,CAACE,KAAP,IAAgB,CAAlC,IACX,CAAC,KAAKgL,MAAL,EAAD,IACElL,MAAM,CAACE,KAAP,GAAe,KAAKV,QAAL,CAAc2L,iBAAd,EAAhB,IAAsD,KAAKxL,IAAL,CAAUsB,OAAV,CAAkB0E,IAAlB,CAAuB,UAAAxE,CAAC;AAAA,mBAAI,OAAI,CAAC+J,MAAL,CAAY/J,CAAZ,CAAJ;AAAA,WAAxB,EAA4CjB,KAFtG;;AAIA,cAAI,CAACF,MAAM,CAAC6F,GAAR,IAAe,KAAKlG,IAAL,CAAU8B,cAAV,EAAnB,EAA+C;AAC7C,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,wBAAehC,UAAf,EAAmCQ,aAAnC,EAAyD;AACvD,cAAI,CAACA,aAAL,EAAoB;AAClBA,yBAAa,GAAG,KAAKJ,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,EAAiD7B,aAAjE;AACD;;AACD,iBAAOR,UAAU,KAAK,KAAKO,aAAL,CAAmBC,aAAnB,CAAtB;AACD;;;eAED,wBAAeR,UAAf,EAAiC;AAC/B,iBAAO,KAAK4C,cAAL,CAAoB5C,UAApB,CAAP;AACD;;;eAED,0BAAiBA,UAAjB,EAAmC;AAAA;;AACjC,cAAI,CAAC,KAAK4C,cAAL,CAAoB5C,UAApB,CAAL,EAAsC;AACpC,mBAAO,KAAKN,IAAL,CAAUsB,OAAV,CAAkB6B,IAAlB,CAAuB,UAAA3B,CAAC;AAAA,qBAAIlB,UAAU,KAAK,OAAI,CAACO,aAAL,CAAmB,OAAI,CAACH,cAAL,CAAoBc,CAApB,EAAuBV,aAA1C,CAAnB;AAAA,aAAxB,CAAP;AACD;;AACD,iBAAO,KAAP;AACD;;;eAED,sBAAaR,UAAb,EAA+B;AAAA;;AAC7B,cAAM8C,MAAM,GAAG,KAAKpD,IAAL,CAAUsB,OAAV,CACZC,MADY,CACL,UAAAC,CAAC;AAAA,mBAAI,OAAI,CAACX,aAAL,CAAmB,OAAI,CAACH,cAAL,CAAoBc,CAApB,EAAuBV,aAA1C,MAA6DR,UAAjE;AAAA,WADI,EAEZ+C,GAFY,CAER,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAACtD,IAAN;AAAA,WAFO,CAAf;AAGA,iBAAO,CAAC,CAACkF,MAAM,CAACpC,MAAT,GAAkBoC,MAAM,CAACE,IAAP,CAAY,GAAZ,CAAlB,GAAqC,EAA5C;AACD;;;eAED,sBAAahD,UAAb,EAA+B;AAC7B,cAAI,CAAC,KAAKgI,cAAL,CAAoBhI,UAApB,CAAD,IAAoC,CAAC,KAAKqI,gBAAL,CAAsBrI,UAAtB,CAAzC,EAA4E;AAC1E,mBAAO,EAAP;AACD;;AACD,iBAAQ,KAAKiL,MAAL,MAAiB,KAAKjD,cAAL,CAAoBhI,UAApB,CAAjB,IAAqD,KAAKqI,gBAAL,CAAsBrI,UAAtB,KAAqC,CAAC,KAAKiL,MAAL,EAA5F,GAA8G,UAA9G,GAA2H,gBAAlI;AACD;;;eAED,uBAAc;AAAA;;AACZ,eAAKvL,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAACpB,MAAD,EAASqD,KAAT,EAAmB;AAC3CrD,kBAAM,CAACE,KAAP,GAAe,wEAAe,CAA9B;;AACA,gBAAImD,KAAK,KAAK,CAAd,EAAiB;AACfrD,oBAAM,CAACI,KAAP,GAAe,IAAI,oFAAJ,CAAsB,OAAI,CAACZ,QAAL,CAAc2L,iBAAd,EAAtB,CAAf;AACD,aAFD,MAEO;AACLnL,oBAAM,CAACI,KAAP,GAAe,IAAI,oFAAJ,CAAsB,CAAtB,CAAf;AACD;AACF,WAPD;AAQD;;;eAED,4BAAmBJ,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAP,GAAc,gFAAd,aAAuC,KAAKqN,MAAL,CAAYlL,MAAZ,IAAsB,GAAtB,GAA4B,GAAnE,CAAP;AACD;;;eAED,yBAAa;AACX,iBAAQ,KAAK,2FAAqByD,aAArB,GAAqCiC,OAArC,CAA6C,KAAKlG,QAAL,CAAc4L,eAA3D,CAAN,GAAqF,EAA5F;AACD;;;eAEO,uBAAc/H,KAAd,EAA6B;AACnC,iBAAO,KAAK7D,QAAL,CAAc6L,SAAd,GAA0BhI,KAA1B,CAAP;AACD;;;eAEO,gBAAOrD,MAAP,EAAwB;AAC9B,cAAI,CAACA,MAAL,EAAa;AACXA,kBAAM,GAAG,KAAKL,IAAL,CAAU2C,eAAV,EAAT;AACD;;AACD,iBAAO,KAAK3C,IAAL,CAAUsB,OAAV,CAAkB+B,GAAlB,CAAsB,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC1D,EAAN;AAAA,WAAvB,EAAiCiI,OAAjC,CAAyC1F,MAAM,CAACvC,EAAhD,MAAwD,CAA/D;AACD;;;;MA3FwC,mE;;;uBAA9BwN,qB,EAAqB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,sI,EAAA,+I;AAAA,K;;;YAArBA,qB;AAAqB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,ya;AAAA;AAAA;ACjBlC;;AAEE;;AAaA;;AACE;;AACA;;AAMF;;AACA;;AACF;;;;AAvBgB;;AAAA;;AAaS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAO4B;;AAAA;;;;;;mBDThC,CAAC,iEAAD;;;;;;sEAEDA,qB,EAAqB;cAJjC,uDAIiC;eAJvB;AACTjM,qBAAW,EAAE,iCADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaoM,kB;;;;;YAAAA;;;;yBAAAA,kB;AAAkB,O;AAAA,gBARpB,CACP,kEADO,EAEP,6DAAa/H,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQoB;;;;0HAAlBsN,kB,EAAkB;AAAA,uBAFd,+EAEc;AAFO,kBALlC,kEAKkC,EALtB,4DAKsB;AAEP,O;AAPf,K;;;;;sEAOHA,kB,EAAkB;cAT9B,sDAS8B;eATrB;AACRjM,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,+EAAD;AAPN,S;AASqB,Q;;;;;;;;;;;;;;;;;;ACd/B;AAAA;;;AAAA;AAAA;AAAA;;QAAaiM,oB;;;AAIX,sCAAc;AAAA;;AACZ,aAAKH,eAAL,GAAuB,EAAvB;AACA,aAAKI,cAAL,GAAsB,EAAtB;AACD;;;;eAED,mCAAuB;AACrB,iBAAO,CAAC,CAAD,EAAI,EAAJ,EAAQ,CAAR,EAAW,EAAX,EAAe,EAAf,EAAmB,CAAnB,EAAsB,EAAtB,EAA0B,CAA1B,CAAP;AACD;;;eAED,uBAAc7G,KAAd,EAA6B;AAC3B,eAAKyG,eAAL,GAAuBzG,KAAvB;AACD;;;eAED,qBAAS;AACP,cAAMtB,KAAK,GAAGkI,oBAAoB,CAAC9H,aAArB,GAAqCiC,OAArC,CAA6C,KAAK0F,eAAlD,CAAd;AACA,8CAAWG,oBAAoB,CAAC9H,aAArB,GAAqCK,KAArC,CAA2CT,KAA3C,CAAX,sBAAiEkI,oBAAoB,CAAC9H,aAArB,GAAqCK,KAArC,CAA2C,CAA3C,EAA8CT,KAA9C,CAAjE;AACD;;;eAED,6BAAiB;AACf,iBAAO,KAAKgI,SAAL,GAAiB3F,OAAjB,CAAyB,KAAK8F,cAA9B,CAAP;AACD;;;eAED,yBAAoB;AAClB,iBAAO,CAAC,EAAD,EAAK,CAAL,EAAQ,EAAR,EAAY,CAAZ,EAAe,EAAf,EAAmB,CAAnB,EAAsB,CAAtB,EAAyB,EAAzB,EAA6B,CAA7B,EAAgC,EAAhC,EAAoC,CAApC,EAAuC,EAAvC,EAA2C,CAA3C,EAA8C,EAA9C,EAAkD,CAAlD,EAAqD,EAArD,EAAyD,EAAzD,EAA6D,CAA7D,EAAgE,EAAhE,EAAoE,CAApE,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;AC5BH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaC,iB;;;;;;;AAEX,iCAAmBhL,aAAnB,EAA0C;AAAA;;AAAA;;AACxC;AADiB,gBAAAA,aAAA,GAAAA,aAAA;AAAuB;AAEzC;;;;eAED,+BAAsBkE,KAAtB,EAAsC;AACpC,eAAKlE,aAAL,IAAsBkE,KAAK,GAAGA,KAAH,GAAW,CAAtC;AACD;;;eAED,iCAAwB;AACtB,eAAKlE,aAAL;;AACA,cAAI,KAAKA,aAAL,GAAqB,CAAzB,EAA4B;AAC1B,iBAAKA,aAAL,GAAqB,CAArB;AACD;AACF;;;eAED,iBAAK;AACH,iBAAO,IAAIgL,iBAAJ,CAAsB,KAAKhL,aAA3B,CAAP;AACD;;;;MAnBoC,8E;;;;;;;;;;;;;;;;;ACFvC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAGE;;AAAI;;AAAe;;AACnB;;AAAmF;AAAA;;AAAA;;AAAA,iBAAS,SAAAjB,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AACjF;;AACF;;AACA;;AAAmF;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AACjF;;AACF;;AACA;;AAAoF;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,EAAlB,CAAT;AAA8B,SAA9B;;AAClF;;AACF;;AACA;;AAAoF;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,EAAlB,CAAT;AAA8B,SAA9B;;AAClF;;AACF;;AACA;;AAAoF;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,EAAlB,CAAT;AAA8B,SAA9B;;AAClF;;AACF;;AACF;;;;;;AAnBmC,sFAAoB,YAApB,EAAoB,mBAApB,EAAoB,OAApB,EAAoB,KAApB;;AAIQ;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAMzC;;;;;;AAAkB,oGAAyB,aAAzB,EAAyB,uBAAzB;;;;;;AAEhB;;AAEE;;AACF;;;;;;;;;AAHK;;AAEe;;AAAA,wFAAiB,YAAjB,EAAiB,KAAjB;;;;;;AAHtB;;AACE;;AAIF;;;;;;AAHO;;AAAA;;;;;;AAKT;;;;;;AAAkB;;;;QDfPkM,iB;;;;;;;AAIX,iCAAYhM,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,UAAhF;AACA,gBAAK6L,WAAL,GAAmB,KAAnB;AACA,gBAAKnM,QAAL,GAAgB,IAAI,gFAAJ,EAAhB;AAH0G;AAI3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAME,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;;AACA,cAAI,KAAKL,IAAL,CAAU+K,WAAV,KAA0B,CAA9B,EAAiC;AAC/BtK,iBAAK,CAACwL,QAAN,GAAiB3L,UAAU,KAAKG,KAAK,CAACK,aAAtC;AACD,WAFD,MAEO,IAAI,KAAKd,IAAL,CAAU+K,WAAV,KAA0B,CAA9B,EAAiC;AACtC,gBAAMmB,QAAQ,GAAGzL,KAAK,CAACwL,QAAN,IAAkB1L,KAAK,KAAK,CAA5B,GAAgC,EAAhC,GAAqCA,KAAtD;AACAF,kBAAM,CAACE,KAAP,IAAgB,CAACE,KAAK,CAACwL,QAAN,GAAiBC,QAAQ,GAAG,CAAC,CAA7B,GAAiCA,QAAlC,IAA8C,KAAKtL,UAAnE;AACD,WAHM,MAGA;AACL,iBAAKZ,IAAL,CAAUsC,UAAV;AACA,gBAAM6J,aAAa,GAAG5L,KAAK,KAAK,CAAV,GAAcqE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAd,GAA+CrE,UAArE;AACA,iBAAKI,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,EAAiD7B,aAAjD,GAAiEqL,aAAjE;AACD;AACF;;;eAED,wBAAe7L,UAAf,EAAiC;AAC/B,iBAAO,KAAKN,IAAL,CAAU+K,WAAV,KAA0B,CAA1B,IAA+B,KAAKrK,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,EAAiD7B,aAAjD,KAAmER,UAAzG;AACD;;;eAED,0BAAiBD,MAAjB,EAAiC;AAAA;;AAC/B,cAAI,KAAKL,IAAL,CAAUoM,eAAV,CAA0B/L,MAA1B,KAAsC,KAAKL,IAAL,CAAUqM,KAAV,GAAkB,CAAnB,KAA0B,KAAKxM,QAAL,CAAcwM,KAA7E,IAAsF,KAAKrM,IAAL,CAAU+K,WAAV,KAA0B,CAApH,EAAuH;AACrH,iBAAK/K,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAACK,MAAF,CAAS,OAAI,CAAC7B,IAAL,CAAUwF,eAAV,CAA0BhE,CAA1B,CAAT,CAAJ;AAAA,aAA3B;AACD;AACF;;;eAED,uBAAc;AACZ,eAAKxB,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAACI,KAAP,GAAe,IAAI,0EAAJ,EAAnB;AAAA,WAAhC;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKZ,QAAL,CAAcwM,KAAd,GAAsB,EAA7B;AACD;;;;MAzCoC,mE;;;uBAA1BN,iB,EAAiB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,8Z;AAAA;AAAA;ACjB9B;;AAEE;;AAqBA;;AACE;;AACA;;AAMF;;AACA;;AACF;;;;AA/BgB;;AAAA;;AAqBS;;AAAA;;AACsD;;AAAA;;AAC7D;;AAAA;;AAO4B;;AAAA;;;;;;mBDjBhC,CAAC,iEAAD;;;;;;sEAEDA,iB,EAAiB;cAJ7B,uDAI6B;eAJnB;AACT1M,qBAAW,EAAE,2BADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAca+M,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBARhB,CACP,kEADO,EAEP,6DAAa1I,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQgB;;;;0HAAdiO,c,EAAc;AAAA,uBAFV,qEAEU;AAFO,kBAL9B,kEAK8B,EALlB,4DAKkB;AAEP,O;AAPX,K;;;;;sEAOHA,c,EAAc;cAT1B,sDAS0B;eATjB;AACR5M,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,qEAAD;AAPN,S;AASiB,Q;;;;;;;;;;;;;;;;;;ACd3B;AAAA;;;AAAA;AAAA;AAAA;;QAAa4M,gB;;;AAAb;AAAA;;AAEE,aAAAF,KAAA,GAAQ,CAAR;AAKD;;;;eAHC,kBAASG,CAAT,EAAoB;AAClB,eAAKH,KAAL,GAAaG,CAAb;AACD;;;;;;;;;;;;;;;;;;;;;ACNH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaC,a;;;;;;;AAKX,+BAAc;AAAA;;AAAA;;AACZ;AACA,gBAAK3L,aAAL,GAAqB8D,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAArB;AACA,gBAAKsH,QAAL,GAAgB,KAAhB;AAHY;AAIb;;;;eAED,iBAAK;AACH,cAAMxL,KAAK,GAAG,IAAIgM,aAAJ,EAAd;AACAhM,eAAK,CAACK,aAAN,GAAsB,KAAKA,aAA3B;AACAL,eAAK,CAACwL,QAAN,GAAiB,KAAKA,QAAtB;AACA,iBAAOxL,KAAP;AACD;;;;MAhBgC,8E;;;;;;;;;;;;;;;;;ACFnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAQE;;AAAI;;AAAK;;AACT;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AACA;;AACE;;AAAW;;AAAQ;;AACnB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AACF;;AACA;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAZ,QAAA,gBAAT;AAAiC,SAAjC;;AAAmC;;AAAO;;AACpD;;;;;;AAtBmC,oFAAkB,YAAlB,EAAkB,mBAAlB,EAAkB,OAAlB,EAAkB,mjBAAlB;;AAYtB;;AAAA;;AAIA;;AAAA;;AAI0C;;AAAA;;;;;;AAKrD;;;;;;AAAkB;;;;;;AAWR;;AAAqD;;AAAO;;AAAU;;AAAQ;;AAAmC;;;;;;;;AAAnC;;AAAA;;;;;;AANlF;;AACE;;AAAmB;;AAAO;;AAAO;;AAAQ;;AAA0B;;AACnE;;AACA;;AACA;;AACE;;AAAO;;AAAM;;AAAQ;;AACrB;;AACF;;AACF;;;;;;;;AAP2C;;AAAA;;AAIlB;;AAAA;;AACP;;AAAA;;;;;;AATtB;;AAEE;;AACE;;AASF;;AACF;;;;;;;;;AAbK;;AAEe;;AAAA,wFAAiB,gBAAjB,EAAiB,KAAjB,EAAiB,aAAjB,EAAiB,2CAAjB;;AACF;;AAAA;;;;;;AAJpB;;AACE;;AAcF;;;;;;AAbM;;AAAA;;;;;;AAeR;;;;;;AAAkB;;;;ADhCpB,QAAM6M,gBAAgB,GAAG,6BAAzB;;QAMaC,e;;;;;;;AAIX,+BAAY5M,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,QAAhF,EAA0F,CAA1F;AACA,gBAAKN,QAAL,GAAgB,IAAI,4EAAJ,EAAhB;AACA,gBAAKmM,WAAL,GAAmB,KAAnB;AACA,gBAAKY,WAAL,GAAmB,KAAnB;AACA,gBAAKC,YAAL,GAAoB,KAApB;AAL0G;AAM3G;;;;eAED,yBAAgBxM,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AAAA;;AACjE,cAAME,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;;AACA,cAAI,KAAKL,IAAL,CAAUqM,KAAV,KAAoB,CAAxB,EAA2B;AACzB5L,iBAAK,CAACqM,QAAN,GAAiBxM,UAAjB;AACAD,kBAAM,CAACE,KAAP,GAAeA,KAAf;;AACA,gBAAI,KAAKP,IAAL,CAAU+M,qBAAV,EAAJ,EAAuC;AACrC,mBAAKf,WAAL,GAAmB,IAAnB;AACA,mBAAKY,WAAL,GAAmB,IAAnB;AACA,mBAAKC,YAAL,GAAoB,IAApB;AACD;AACF,WARD,MAQO;AACL,gBAAIpM,KAAK,CAACuM,MAAV,EAAkB;AAChB,kBAAI,KAAKnN,QAAL,CAAcoN,OAAd,IAAyB3M,UAAU,KAAKG,KAAK,CAACqM,QAA9C,IAA0D,KAAKlM,UAAL,GAAkB,CAAhF,EAAmF;AACjFP,sBAAM,CAAC2B,IAAP,GAAc,CAAd;AACA,qBAAKkL,cAAL,GAAsB,YAAtB;AACD,eAHD,MAGO,IAAI5M,UAAU,KAAKG,KAAK,CAACqM,QAAzB,EAAmC;AACxCzM,sBAAM,CAAC2B,IAAP,GAAc+E,MAAM,CAAC1G,MAAM,CAAC2B,IAAR,CAAN,GAAsB+E,MAAM,CAAC,KAAKnG,UAAN,CAA1C;;AACA,oBAAIP,MAAM,CAAC2B,IAAP,GAAc,KAAKnC,QAAL,CAAcsN,aAAhC,EAA+C;AAC7C9M,wBAAM,CAAC2B,IAAP,GAAc,KAAKnC,QAAL,CAAcsN,aAA5B;AACD;AACF,eALM,MAKA;AACL,qBAAKnN,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,yBAAIA,CAAC,CAAC1D,EAAF,KAASuC,MAAM,CAACvC,EAAhB,IAAsB,CAAC0D,CAAC,CAACiB,UAAF,EAA3B;AAAA,iBAA1B,EAAqEhB,OAArE,CAA6E,UAAAD,CAAC,EAAI;AAChF,sBAAM4L,CAAC,GAAG,OAAI,CAAC1M,cAAL,CAAoBc,CAApB,CAAV;;AACA,sBAAIlB,UAAU,KAAK8M,CAAC,CAACN,QAArB,EAA+B;AAC7BtL,qBAAC,CAACQ,IAAF,IAAU,OAAI,CAACpB,UAAf;;AACA,2BAAI,CAAClC,YAAL,CAAkB2D,EAAlB;;AACA,wBAAIb,CAAC,CAACQ,IAAF,GAAS,CAAb,EAAgB;AACdR,uBAAC,CAACQ,IAAF,GAAS,CAAT;AACD;AACF;AACF,iBATD;AAUD;AACF,aArBD,MAqBO,IAAI1B,UAAU,KAAKG,KAAK,CAACqM,QAAzB,EAAmC;AACxCrM,mBAAK,CAAC4M,QAAN,IAAkB,KAAKzM,UAAvB;;AACA,kBAAIH,KAAK,CAAC4M,QAAN,IAAkB,CAAtB,EAAyB;AACvB5M,qBAAK,CAAC4M,QAAN,GAAiB,CAAjB;AACD;;AACD5M,mBAAK,CAACuM,MAAN,GAAevM,KAAK,CAAC4M,QAAN,KAAmB,CAAlC;AACD;AACF;AACF;;;eAED,0BAAiBhN,MAAjB,EAAiC;AAC/B,cAAI,KAAKL,IAAL,CAAUqM,KAAV,KAAoB,CAAxB,EAA2B;AACzB,gBAAM7J,aAAa,GAAG,KAAKxC,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAI,CAACA,CAAC,CAACiB,UAAF,EAAL;AAAA,aAA1B,CAAtB;AACA,iBAAKzC,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAACK,MAAF,CAAS,MAAMW,aAAa,CAACxB,MAApB,IAA8B,CAACQ,CAAC,CAACiB,UAAF,EAAxC,CAAJ;AAAA,aAA3B;AACD;;AACD,cAAI,KAAKzC,IAAL,CAAUqM,KAAV,KAAoB,CAApB,IAAyB,KAAKrM,IAAL,CAAU8B,cAAV,EAA7B,EAAyD;AACvD,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;;AACD,iBAAO,KAAKtC,IAAL,CAAU2C,eAAV,GAA4BF,UAA5B,EAAP,EAAiD;AAC/C,iBAAKzC,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,wBAAehC,UAAf,EAAiC;AAC/B,cAAI,KAAKN,IAAL,CAAUqM,KAAV,KAAoB,CAAxB,EAA2B;AACzB,mBAAO/L,UAAU,KAAK,EAAf,IAAqB,CAAC,KAAKgN,mBAAL,GAA2BnK,IAA3B,CAAgC,UAAAJ,CAAC;AAAA,qBAAIA,CAAC,KAAKzC,UAAV;AAAA,aAAjC,CAA7B;AACD;;AACD,iBAAO,KAAKgN,mBAAL,GAA2BnK,IAA3B,CAAgC,UAAAJ,CAAC;AAAA,mBAAIA,CAAC,KAAKzC,UAAV;AAAA,WAAjC,CAAP;AACD;;;eAED,wBAAeA,UAAf,EAAiC;AAC/B,cAAI,KAAKN,IAAL,CAAUqM,KAAV,KAAoB,CAAxB,EAA2B;AACzB,mBAAO,KAAKnJ,cAAL,CAAoB5C,UAApB,CAAP;AACD;;AACD,cAAMG,KAAK,GAAG,KAAKC,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,CAAd;;AACA,cAAIlC,KAAK,CAACuM,MAAV,EAAkB;AAChB,mBAAO,KAAK9J,cAAL,CAAoB5C,UAApB,KAAmC,CAAC,KAAKqI,gBAAL,CAAsBrI,UAAtB,CAA3C;AACD;;AACD,iBAAOG,KAAK,CAACqM,QAAN,KAAmBxM,UAA1B;AACD;;;eAED,0BAAiBA,UAAjB,EAAmC;AACjC,cAAMG,KAAK,GAAG,KAAKC,cAAL,CAAoB,KAAKV,IAAL,CAAU2C,eAAV,EAApB,CAAd;;AACA,cAAIlC,KAAK,CAACuM,MAAV,EAAkB;AAChB,mBAAOvM,KAAK,CAACqM,QAAN,KAAmBxM,UAA1B;AACD;;AACD,iBAAO,KAAP;AACD;;;eAED,sBAAaA,UAAb,EAA+B;AAAA;;AAC7B,cAAI,KAAKN,IAAL,CAAUsB,OAAV,CAAkB6B,IAAlB,CAAuB,UAAA3B,CAAC,EAAI;AAC9B,gBAAMf,KAAK,GAAG,OAAI,CAACC,cAAL,CAAoBc,CAApB,CAAd;;AACA,mBAAO,CAACA,CAAC,CAACiB,UAAF,EAAD,IAAmBjB,CAAC,CAACQ,IAAF,IAAU,CAA7B,IAAkCvB,KAAK,CAACqM,QAAN,KAAmBxM,UAA5D;AACD,WAHG,CAAJ,EAGI;AACF,mBAAOoM,gBAAP;AACD;;AACD,iBAAO,EAAP;AACD;;;eAED,sBAAapM,UAAb,EAA+B;AAC7B,cAAMiN,KAAK,GAAG,KAAKvN,IAAL,CAAUsB,OAAV,CAAkB0E,IAAlB,CAAuB,UAAAxE,CAAC;AAAA,mBAAKA,CAAC,CAACf,KAAF,CAAwBqM,QAAxB,KAAqCxM,UAA1C;AAAA,WAAxB,CAAd;AACA,iBAAOiN,KAAK,aAAMA,KAAK,CAACrP,IAAZ,cAAoBqP,KAAK,CAACvL,IAA1B,SAAoC,EAAhD;AACD;;;eAED,wBAAe3B,MAAf,EAA6B;AAC3B,cAAMC,UAAU,GAAG,KAAKI,cAAL,CAAoBL,MAApB,EAA4ByM,QAA/C;AACA,iBAAOxM,UAAU,KAAK,EAAf,GAAoB,GAApB,GAA2BA,UAAU,GAAG,CAAd,GAAmB,EAApD;AACD;;;eAED,uBAAc;AAAA;;AACZ,eAAKN,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClCA,kBAAM,CAACI,KAAP,GAAe,IAAI,sEAAJ,CAAgB,OAAI,CAACZ,QAAL,CAAc2N,aAA9B,CAAf;AACAnN,kBAAM,CAAC2B,IAAP,GAAc,OAAI,CAACnC,QAAL,CAAcsN,aAA5B;AACD,WAHD;AAID;;;eAED,oCAAwB;AACtB,iBAAO,KAAKtN,QAAL,CAAcsN,aAAd,GAA8B,CAA9B,IAAmC,KAAKtN,QAAL,CAAc2N,aAAd,GAA8B,CAAxE;AACD;;;eAED,4BAAmBnN,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAd;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAK2B,QAAL,CAAc2N,aAAd,GAA8B,GAA9B,GAAoC,KAAK3N,QAAL,CAAcsN,aAAzD;AACD;;;eAEO,+BAAmB;AAAA;;AACzB,iBAAO,KAAKnN,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAACA,CAAC,CAACiB,UAAF,EAAL;AAAA,WAA1B,EACJY,GADI,CACA,UAAA7B,CAAC;AAAA,mBAAI,OAAI,CAACd,cAAL,CAAoBc,CAApB,EAAuBsL,QAA3B;AAAA,WADD,CAAP;AAED;;;;MAxIkC,mE;;;uBAAxBH,e,EAAe,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAAfA,e;AAAe,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,ohB;AAAA;AAAA;ACnB5B;;AAEE;;AAwBA;;AACE;;AACA;;AAgBF;;AACA;;AACF;;;;AA5CgB;;AAAA;;AAwBS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAiB4B;;AAAA;;;;;;mBD5BhC,CAAC,iEAAD;;;;;;sEAEDA,e,EAAe;cAJ3B,uDAI2B;eAJjB;AACTtN,qBAAW,EAAE,yBADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEnB5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcakO,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBARd,CACP,kEADO,EAEP,6DAAa7J,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQc;;;;0HAAZoP,Y,EAAY;AAAA,uBAFR,iEAEQ;AAFO,kBAL5B,kEAK4B,EALhB,4DAKgB;AAEP,O;AAPT,K;;;;;sEAOHA,Y,EAAY;cATxB,sDASwB;eATf;AACR/N,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,iEAAD;AAPN,S;AASe,Q;;;;;;;;;;;;;;;;;;ACdzB;AAAA;;;AAAA;AAAA;AAAA;;QAAa+N,c;;;AAKX,gCAAc;AAAA;;AACZ,aAAKT,OAAL,GAAe,KAAf;AACA,aAAKE,aAAL,GAAqB,CAArB;AACA,aAAKK,aAAL,GAAqB,CAArB;AACD;;;;eAED,yBAAgB;AACd,eAAKP,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;;;;;;;;;;;;;;;;;;;ACbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaU,W;;;;;;;AAKX,6BAAiC;AAAA;;AAAA,YAAdN,QAAc,uEAAH,CAAG;;AAAA;;AAC/B;AADiB,gBAAAA,QAAA,GAAAA,QAAA;AAEjB,gBAAKP,QAAL,GAAgB,CAAC,CAAjB;AACA,gBAAKE,MAAL,GAAc,KAAd;AAH+B;AAIhC;;;;eAED,iBAAK;AACH,cAAMvM,KAAK,GAAG,IAAIkN,WAAJ,CAAgB,KAAKN,QAArB,CAAd;AACA5M,eAAK,CAACqM,QAAN,GAAiB,KAAKA,QAAtB;AACArM,eAAK,CAACuM,MAAN,GAAe,KAAKA,MAApB;AACA,iBAAOvM,KAAP;AACD;;;;MAhB8B,8E;;;;;;;;;;;;;;;;;ACFjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAKE;;AAAI;;AAAK;;AACT;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AAAO;AAAA;;AAAA;;AAAA;AAAA;;AAAP;;AACF;;AACF;;AACA;;AACA;;AAA2F;AAAA;;AAAA;;AAAA,iBAAS,SAAAZ,QAAA,eAAT;AAAgC,SAAhC;;AACzF;;AACF;;AAEF;;;;;;AAjBmC,sFAAoB,YAApB,EAAoB,mBAApB,EAAoB,OAApB,EAAoB,+TAApB;;AAStB;;AAAA;;AAIqC;;AAAA;;;;;;AAOhD;;;;;;AAAkB,oGAAyB,MAAzB,EAAyB,kBAAzB;;;;;;AAEhB;;AAEE;;AAEF;;;;;;;;;AAJK;;AAEe;;AAAA,wFAAiB,gBAAjB,EAAiB,IAAjB,EAAiB,eAAjB,EAAiB,IAAjB,EAAiB,YAAjB,EAAiB,KAAjB;;;;;;AAHtB;;AACE;;AAKF;;;;;;AAJO;;AAAA;;;;;;AAMT;;;;;;AAAkB;;;;QDdP+N,iB;;;;;;;AAIX,iCAAY7N,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,UAAhF,EAA4F,CAA5F;AACA,gBAAKN,QAAL,GAAgB,IAAI,gFAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjEF,gBAAM,CAACE,KAAP,GAAeF,MAAM,CAAC4K,cAAP,EAAf;AACD;;;eAED,0BAAiB5K,MAAjB,EAAiC;AAC/B,cAAI,KAAKL,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,gBAAMvB,KAAK,GAAG,KAAKG,cAAL,CAAoBL,MAApB,EAA4BE,KAA1C;;AACA,gBAAIA,KAAK,GAAGF,MAAM,CAAC4K,cAAP,EAAZ,EAAqC;AACnC5K,oBAAM,CAAC2B,IAAP;AACA,mBAAKtD,YAAL,CAAkB2D,EAAlB;AACD,aAHD,MAGO,IAAI,KAAKxC,QAAL,CAAcmN,MAAd,IAAwBzM,KAAK,KAAK,CAAlC,IAAuCA,KAAK,KAAKF,MAAM,CAAC4K,cAAP,EAAjD,IACN5K,MAAM,CAAC+B,aAAP,CAAqB/B,MAAM,CAAC+B,aAAP,CAAqBpB,MAArB,GAA8B,CAAnD,EAAsDT,KAAtD,KAAgE,CAD9D,EACiE;AACtE,mBAAKP,IAAL,CAAU6N,iBAAV,GAA8B7L,IAA9B;AACA,mBAAKtD,YAAL,CAAkB2D,EAAlB;AACD;;AACD,iBAAK3B,cAAL,CAAoB,KAAKV,IAAL,CAAU8N,aAAV,EAApB,EAA+CvN,KAA/C,GAAuDF,MAAM,CAAC4K,cAAP,EAAvD;AACA,gBAAMzI,aAAa,GAAG,KAAKxC,IAAL,CAAU+N,gBAAV,EAAtB;AACA,iBAAK/N,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAACK,MAAF,CAAS,MAAMW,aAAa,CAACxB,MAApB,IAA8B,CAACQ,CAAC,CAACiB,UAAF,EAAxC,CAAJ;AAAA,aAA3B;AACA,iBAAKzC,IAAL,CAAUsC,UAAV;AACD;;AACD,iBAAO,KAAKtC,IAAL,CAAU2C,eAAV,GAA4BF,UAA5B,EAAP,EAAiD;AAC/C,iBAAKzC,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,uBAAc;AAAA;;AACZ,eAAKtC,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClCA,kBAAM,CAACI,KAAP,GAAe,IAAI,0EAAJ,EAAf;AACAJ,kBAAM,CAAC2B,IAAP,GAAc,OAAI,CAACnC,QAAL,CAAcsN,aAA5B;AACD,WAHD;AAID;;;eAED,oCAAwB;AACtB,iBAAO,KAAKtN,QAAL,CAAcsN,aAAd,GAA8B,CAArC;AACD;;;eAED,mBAAO;AACL,cAAM9M,MAAM,GAAG,KAAKL,IAAL,CAAU2C,eAAV,EAAf;AACA,cAAMlC,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;AACA,iBAAO,CAACI,KAAK,CAACF,KAAN,GAAcE,KAAK,CAACF,KAApB,GAA4B,CAA7B,KAAmC,KAAKP,IAAL,CAAU+K,WAAV,KAA0B,CAA1B,GAA8B,CAA9B,GAAkC1K,MAAM,CAACE,KAA5E,CAAP;AACD;;;eAED,4BAAmBF,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAd;AACD;;;;MAtDoC,mE;;;uBAA1B0P,iB,EAAiB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,gJ;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,ujB;AAAA;AAAA;ACjB9B;;AAEE;;AAmBA;;AACE;;AACA;;AAOF;;AACA;;AACF;;;;AA9BgB;;AAAA;;AAmBS;;AAAA;;AAC0C;;AAAA;;AACjD;;AAAA;;AAQ4B;;AAAA;;;;;;mBDhBhC,CAAC,iEAAD;;;;;;sEAEDA,iB,EAAiB;cAJ7B,uDAI6B;eAJnB;AACTvO,qBAAW,EAAE,2BADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcayO,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBARhB,CACP,kEADO,EAEP,6DAAapK,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQgB;;;;0HAAd2P,c,EAAc;AAAA,uBAFV,qEAEU;AAFO,kBAL9B,kEAK8B,EALlB,4DAKkB;AAEP,O;AAPX,K;;;;;sEAOHA,c,EAAc;cAT1B,sDAS0B;eATjB;AACRtO,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,qEAAD;AAPN,S;AASiB,Q;;;;;;;;;;;;;;;;;;ACd3B;AAAA;;;AAAA;AAAA;AAAA;;QAAasO,gB;;;AAIX,kCAAc;AAAA;;AACZ,aAAKd,aAAL,GAAqB,CAArB;AACA,aAAKH,MAAL,GAAc,IAAd;AACD;;;;eAED,wBAAe;AACb,eAAKA,MAAL,GAAc,CAAC,KAAKA,MAApB;AACD;;;;;;;;;;;;;;;;;;;;;ACXH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEakB,a;;;;;;;AAEX,+BAA8B;AAAA;;AAAA,YAAX3N,KAAW,uEAAH,CAAG;;AAAA;;AAC5B;AADiB,gBAAAA,KAAA,GAAAA,KAAA;AAAW;AAE7B;;;;eAED,iBAAK;AACH,iBAAO,IAAI2N,aAAJ,CAAkB,KAAK3N,KAAvB,CAAP;AACD;;;;MARgC,8E;;;;;;;;;;;;;;;;;ACFnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AASA,QAAM4N,eAAe,GAAG,CACtB,wEADsB,EAEtB,wEAFsB,EAGtB,oEAHsB,EAItB,sEAJsB,EAKtB,0EALsB,EAMtB,oFANsB,CAAxB;;QAaaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAHhBD,eAGgB,EAZzB,wEAYyB,EAXzB,wEAWyB,EAVzB,oEAUyB,EATzB,sEASyB,EARzB,0EAQyB,EAPzB,oFAOyB;;;;0HAAdC,c,EAAc;AAAA,kBAZzB,wEAYyB,EAXzB,wEAWyB,EAVzB,oEAUyB,EATzB,sEASyB,EARzB,0EAQyB,EAPzB,oFAOyB;AAPJ,kBALrB,wEAKqB,EAJrB,wEAIqB,EAHrB,oEAGqB,EAFrB,sEAEqB,EADrB,0EACqB,EAArB,oFAAqB;AAOI,O;AAPJ,K;;;;;sEAOVA,c,EAAc;cAJ1B,sDAI0B;eAJjB;AACR1O,iBAAO,EAAEyO,eADD;AAERtQ,iBAAO,EAAEsQ;AAFD,S;AAIiB,Q;;;;;;;;;;;;;;;;;;ACtB3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAEO,QAAME,gBAAgB,GAC3B,oEAAQ,iBAAR,EAA2B,CACzB,uEAAW,SAAX,EAAsB,CACpB,kEAAM;AAACC,cAAQ,EAAE;AAAX,KAAN,CADoB,EAEpB,kEAAM,gBAAN,EAAwB,CACtB,kEAAM;AACJA,cAAQ,EAAE,UADN;AAEJC,SAAG,EAAE,CAFD;AAGJC,UAAI,EAAE,CAHF;AAIJC,WAAK,EAAE;AAJH,KAAN,CADsB,CAAxB,EAOG;AAACC,cAAQ,EAAE;AAAX,KAPH,CAFoB,EAUpB,kEAAM,QAAN,EAAgB,CACd,kEAAM;AAACF,UAAI,EAAE;AAAP,KAAN,CADc,CAAhB,EAEG;AAACE,cAAQ,EAAE;AAAX,KAFH,CAVoB,EAapB,kEAAM,QAAN,EAAgB,0EAAhB,EAAgC;AAACA,cAAQ,EAAE;AAAX,KAAhC,CAboB,EAcpB,kEAAM,CACJ,kEAAM,QAAN,EAAgB,CACd,oEAAQ,gBAAR,EAA0B,kEAAM;AAACF,UAAI,EAAE;AAAP,KAAN,CAA1B,CADc,CAAhB,EAEG;AAACE,cAAQ,EAAE;AAAX,KAFH,CADI,EAIJ,kEAAM,QAAN,EAAgB,CACd,oEAAQ,gBAAR,EAA0B,kEAAM;AAACF,UAAI,EAAE;AAAP,KAAN,CAA1B,CADc,CAAhB,EAEG;AAACE,cAAQ,EAAE;AAAX,KAFH,CAJI,CAAN,CAdoB,EAsBpB,kEAAM,QAAN,EAAgB,0EAAhB,EAAgC;AAACA,cAAQ,EAAE;AAAX,KAAhC,CAtBoB,CAAtB,CADyB,CAA3B,CADK;;;;;;;;;;;;;;;;ACFP;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEaC,Y;;;;;;;AAKX,8BAAc;AAAA;;AAAA;;AACb;AAJD,gBAAAC,OAAA,GAAU,KAAV;AACA,gBAAA7M,UAAA,GAAa,KAAb;AAIC,gBAAKa,KAAL,GAAa,CAAb;;AACA,gBAAKsI,GAAL;;AAHa;AAIb;;;;eAED,yBAAgB;AACd,eAAK0D,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;eAED,4BAAmB;AACjB,eAAK7M,UAAL,GAAkB,CAAC,KAAKA,UAAxB;AACD;;;;MAjB+B,qF;;;;;;;;;;;;;;;;;ACFlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACKI;;AACkE;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAlC,QAAA,kBAAT;AAA8B,SAA9B;;AAChE;;AACF;;;;;;;;;AAHyC;;AAEvC;;AAAA;;;;;;;;AALJ;;AAEE;;AAAI;;AAAM;;AACV;;AAIA;;AACA;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,MAAT;AAAuB,SAAvB;;AAAyB;;AAAG;;AACjF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAT;AAA4B,SAA5B;;AAA8B;;AAAS;;AAC5F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAmB,CAAnB,CAAT;AAA8B,SAA9B;;AAAgC;;AAAS;;AAC9F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAmB,EAAnB,CAAT;AAA+B,SAA/B;;AAAiC;;AAAS;;AAC/F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,WAAmB,EAAnB,CAAT;AAA+B,SAA/B;;AAAiC;;AAAS;;AAC/F;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,OAAT;AAAwB,SAAxB;;AAA0B;;AAAI;;AACnF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,QAAT;AAAyB,SAAzB;;AAA2B;;AAAK;;AACrF;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,MAAT;AAAuB,SAAvB;;AAAyB;;AAAG;;AACjF;;AAEA;;AAAI;;AAAK;;AACT;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,gBAAT;AAAiC,SAAjC;;AAAmC;;AAC3C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,mBAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACF;;;;;;AAvCmC,kFAAgB,YAAhB,EAAgB,mBAAhB,EAAgB,OAAhB,EAAgB,KAAhB;;AAIzB;;AAAA;;AAuB6C;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAMrD;;;;;;AAAkB;;;;;;AAEhB;;AAEE;;AAIF;;;;;;;;;AANK;;AAEe;;AAAA,wFAAiB,YAAjB,EAAiB,KAAjB,EAAiB,aAAjB,EAAiB,wEAAjB,EAAiB,gBAAjB,EAAiB,0EAAjB;;;;;;AAHtB;;AACE;;AAOF;;;;;;AANO;;AAAA;;;;;;AAQT;;;;;;AAAkB;;;;QDtCPgP,a;;;;;;;AAIX,6BAAY9O,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,MAAhF,EAAwF,CAAxF;AACA,gBAAKN,QAAL,GAAgB,IAAI,wEAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAI,CAAC,CAAC,KAAKP,IAAL,CAAUwJ,KAAV,CAAgBlJ,UAAhB,CAAN,EAAmC;AACjC,gBAAI,KAAKT,QAAL,CAAc+O,OAAd,IAAyB,KAAK5O,IAAL,CAAU8O,gBAAV,CAA2BzO,MAA3B,CAA7B,EAAiE;AAC/D,mBAAKL,IAAL,CAAUwJ,KAAV,CAAgBlJ,UAAhB,IAA8B,CAA9B;AACD,aAFD,MAEO,IAAG,KAAKT,QAAL,CAAc+O,OAAjB,EAA0B;AAC/BvO,oBAAM,CAACE,KAAP,IAAgB,CAAC,KAAKV,QAAL,CAAcsI,aAAd,KAAgC,CAAhC,GAAoC5H,KAArC,IAA8C,KAAKK,UAAnE;AACD,aAFM,MAEA;AACLP,oBAAM,CAACE,KAAP,IAAgB,CAAC,KAAKV,QAAL,CAAcsI,aAAd,KAAgC,CAAhC,GAAoC5H,KAArC,IAA8C,KAAKK,UAAnE;AACA,mBAAKZ,IAAL,CAAUwJ,KAAV,CAAgBlJ,UAAhB,IAA8B,CAA9B;AACD;AACF,WATD,MASO,IAAI,KAAKT,QAAL,CAAckC,UAAd,KAA8B,KAAKlC,QAAL,CAAc+O,OAAd,IAAyB,CAAC,KAAK5O,IAAL,CAAU8O,gBAAV,CAA2BzO,MAA3B,CAA3B,IAAkE,CAAC,KAAKR,QAAL,CAAc+O,OAA9G,CAAJ,EAA4H;AACjIvO,kBAAM,CAACE,KAAP,IAAgB,CAAC,KAAKV,QAAL,CAAcsI,aAAd,KAAgC,CAAhC,GAAoC5H,KAArC,IAA8C,KAAKK,UAAnE;AACD;AACF;;;eAED,0BAAiBP,MAAjB,EAAiC;AAAA;;AAC/B,cAAG,CAAC,KAAKL,IAAL,CAAUwJ,KAAV,CAAgBxD,IAAhB,CAAqB,UAAA4D,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAtB,CAAJ,EAAkC;AAChC,iBAAK5J,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAACK,MAAF,CAAS,OAAI,CAAC7B,IAAL,CAAUwF,eAAV,CAA0BhE,CAA1B,CAAT,CAAJ;AAAA,aAA3B;AACD;;AACD,cAAI,KAAKxB,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,0BAAiBhC,UAAjB,EAAmC;AACjC,iBAAO,KAAKT,QAAL,CAAckC,UAAd,IAA4B,CAAC,KAAK/B,IAAL,CAAUwJ,KAAV,CAAgBlJ,UAAhB,CAApC;AACD;;;eAED,wBAAeA,UAAf,EAAiC;AAC/B,iBAAO,KAAKT,QAAL,CAAckC,UAAd,IAA4B,CAAC,CAAC,KAAK/B,IAAL,CAAUwJ,KAAV,CAAgBlJ,UAAhB,CAArC;AACD;;;eAED,uBAAc;AAAA;;AACZ,eAAKN,IAAL,CAAUwJ,KAAV,GAAkB,KAAK3J,QAAL,CAAc2J,KAAd,CAAoBnG,GAApB,CAAwB,UAAAnB,CAAC;AAAA,mBAAIA,CAAC,GAAG,CAAH,GAAO,CAAZ;AAAA,WAAzB,CAAlB;AACA,eAAKrC,QAAL,CAAckB,MAAd,CAAqBU,OAArB,CAA6B,UAAAsB,CAAC;AAAA,mBAAI,OAAI,CAAClD,QAAL,CAAc2J,KAAd,CAAoBzG,CAApB,IAAyB,IAA7B;AAAA,WAA9B;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKlD,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,EAArC;AACD;;;;MAjDgC,mE;;;uBAAtB6N,a,EAAa,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,+I;AAAA,K;;;YAAbA,a;AAAa,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,ylB;AAAA;AAAA;ACjB1B;;AAEE;;AAyCA;;AACE;;AACA;;AASF;;AACA;;AACF;;;;AAtDgB;;AAAA;;AAyCS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAU4B;;AAAA;;;;;;mBDxChC,CAAC,iEAAD;;;;;;sEAEDA,a,EAAa;cAJzB,uDAIyB;eAJf;AACTxP,qBAAW,EAAE,uBADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcawP,U;;;;;YAAAA;;;;yBAAAA,U;AAAU,O;AAAA,gBARZ,CACP,kEADO,EAEP,6DAAanL,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQY;;;;0HAAV0Q,U,EAAU;AAAA,uBAFN,6DAEM;AAFO,kBAL1B,kEAK0B,EALd,4DAKc;AAEP,O;AAPP,K;;;;;sEAOHA,U,EAAU;cATtB,sDASsB;eATb;AACRrP,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,6DAAD;AAPN,S;AASa,Q;;;;;;;;;;;;;;;;;;ACdvB;AAAA;;;AAAA;AAAA;AAAA;;QAAaqP,gB;;;AAOX,kCAAc;AAAA;;AAJd,aAAAxF,KAAA,GAAmB,EAAnB;AAKE,aAAKzI,MAAL,GAAc,EAAd;AACA,aAAKsE,OAAL,GAAe,KAAf;AACA,aAAK4J,OAAL,GAAe,KAAf;AACA,YAAIxF,UAAU,GAAG,IAAjB;;AACA,aAAK,IAAIvH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,eAAKsH,KAAL,CAAWtH,CAAX,IAAgBuH,UAAhB;;AACA,cAAIvH,CAAC,KAAK,EAAV,EAAc;AACZuH,sBAAU,GAAG,KAAb;AACD;AACF;;AACD,aAAKC,UAAL;AACD;;;;eAED,qBAAY;AACV,eAAK,IAAIxH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKsH,KAAL,CAAWxI,MAA/B,EAAuCkB,CAAC,EAAxC,EAA4C;AAC1C,iBAAKsH,KAAL,CAAWtH,CAAX,IAAgB,KAAhB;AACD;;AACD,eAAK,IAAIA,GAAC,GAAG,CAAb,EAAgBA,GAAC,GAAG,CAApB,EAAuBA,GAAC,EAAxB,EAA4B;AAC1B,gBAAIgN,IAAI,GAAGtK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAX;;AACA,mBAAO,KAAK6E,KAAL,CAAW0F,IAAX,CAAP,EAAyB;AACvBA,kBAAI,GAAGtK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,EAA3B,CAAP;AACD;;AACD,iBAAK6E,KAAL,CAAW0F,IAAX,IAAmB,IAAnB;AACD;;AACD,eAAKxF,UAAL;AACD;;;eAED,yBAAgB;AACd,eAAKrE,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;eAED,yBAAgB;AACd,eAAK4J,OAAL,GAAe,CAAC,KAAKA,OAArB;AACD;;;eAGD,sBAAa;AACX,cAAMnF,OAAO,GAAa,EAA1B;;AACA,eAAK,IAAI5H,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B4H,mBAAO,CAAC5H,CAAD,CAAP,GAAcA,CAAC,GAAG,CAAlB;AACD;;AACD,iBAAO4H,OAAP;AACD;;;eAED,mBAAU5H,CAAV,EAAqB;AACnB,eAAKsH,KAAL,CAAWtH,CAAX,IAAgB,CAAC,KAAKsH,KAAL,CAAWtH,CAAX,CAAjB;AACA,eAAKwH,UAAL;AACD;;;eAED,sBAAa;AACX,eAAK3I,MAAL,GAAc,EAAd;;AACA,eAAK,IAAImB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,gBAAI,KAAKsH,KAAL,CAAWtH,CAAX,CAAJ,EAAmB;AACjB,mBAAKnB,MAAL,CAAY+D,IAAZ,CAAiB5C,CAAjB;AACD;AACF;AACF;;;;;;;;;;;;;;;;;;;;;AChEH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaiN,a;;;;;;;AAKX,+BAAc;AAAA;;AAAA;;AACZ;AACA,gBAAK1J,UAAL,GAAkB,EAAlB;AACA,gBAAK2J,UAAL,GAAkB,EAAlB;AAHY;AAIb;;;;eAED,uBAAcnI,KAAd,EAA2B;AACzB,iBAAO,KAAKC,aAAL,CAAmB,KAAKzB,UAAxB,EAAoCwB,KAApC,EAA2CjC,KAAlD;AACD;;;eAED,4BAAmBiC,KAAnB,EAAkCjC,KAAlC,EAAiD;AAC/C,eAAKkC,aAAL,CAAmB,KAAKzB,UAAxB,EAAoCwB,KAApC,EAA2CjC,KAA3C,IAAoDA,KAApD;AACD;;;eAED,uBAAciC,KAAd,EAA2B;AACzB,iBAAO,KAAKC,aAAL,CAAmB,KAAKkI,UAAxB,EAAoCnI,KAApC,EAA2CjC,KAAlD;AACD;;;eAED,4BAAmBiC,KAAnB,EAAkCjC,KAAlC,EAAiD;AAC/C,eAAKkC,aAAL,CAAmB,KAAKkI,UAAxB,EAAoCnI,KAApC,EAA2CjC,KAA3C,IAAoDA,KAApD;AACD;;;eAED,iBAAK;AACH,cAAMvE,KAAK,GAAG,IAAI0O,aAAJ,EAAd;AACA,eAAK1J,UAAL,CAAgBhE,OAAhB,CAAwB,UAAA0F,EAAE;AAAA,mBAAI1G,KAAK,CAACgF,UAAN,CAAiBX,IAAjB,CAAsBqC,EAAE,CAAChB,KAAH,EAAtB,CAAJ;AAAA,WAA1B;AACA,eAAKiJ,UAAL,CAAgB3N,OAAhB,CAAwB,UAAA0F,EAAE;AAAA,mBAAI1G,KAAK,CAAC2O,UAAN,CAAiBtK,IAAjB,CAAsBqC,EAAE,CAAChB,KAAH,EAAtB,CAAJ;AAAA,WAA1B;AACA,iBAAO1F,KAAP;AACD;;;;MAhCgC,8E;;;;;;;;;;;;;;;;;ACHnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACQI;;AACkE;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,SAAAZ,QAAA,kBAAT;AAA8B,SAA9B;;AAChE;;AACF;;;;;;;;;AAHyC;;AAEvC;;AAAA;;;;;;;;AARJ;;AAKE;;AAAI;;AAAM;;AACV;;AAIA;;AAEA;;AAAqD;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,YAAT;AAA6B,SAA7B;;AAA+B;;AAAS;;AAC7F;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,gBAAT;AAAiC,SAAjC;;AAAmC;;AAC3C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,SAAAA,QAAA,gBAAT;AAAiC,SAAjC;;AAAmC;;AAC3C;;AACF;;;;;;AAnBmC,iGAA+B,YAA/B,EAA+B,mBAA/B,EAA+B,OAA/B,EAA+B,+RAA/B;;AAOzB;;AAAA;;AAM8C;;AAAA;;AAGA;;AAAA;;;;;;AAMtD;;;;;;AAAkB;;;;;;AAMV;;AAEE;;AAAsC;;AAAoB;;AAAkC;;AAC9F;;;;;;;;;;AAHK;;AAEH;;AAAA;;AAA0D;;AAAA;;;;;;AANlE;;AAEE;;AACE;;AACE;;AAIF;;AACF;;AACF;;;;;;;;;AAVK;;AAEe;;AAAA;;AAGT;;AAAA;;;;;;AANb;;AACE;;AAWF;;;;;;AAVO;;AAAA;;;;;;AAYT;;;;;;AAAkB;;;;QDtBPwP,iB;;;;;;;AAIX,iCAAYtP,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,UAAhF;AACA,gBAAKN,QAAL,GAAgB,IAAI,gFAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAME,KAAK,GAAG,KAAKC,cAAL,CAAoBL,MAApB,CAAd;;AACA,cAAI,KAAK6E,aAAL,CAAmB5E,UAAnB,CAAJ,EAAoC;AAClCG,iBAAK,CAAC0E,kBAAN,CAAyB7E,UAAzB,EAAqC,CAArC;AACAG,iBAAK,CAAC6O,kBAAN,CAAyBhP,UAAzB,EAAqC,KAAKM,UAA1C;;AACA,gBAAI,KAAKf,QAAL,CAAcwF,OAAlB,EAA2B;AACzBhF,oBAAM,CAACE,KAAP,IAAgB,KAAKK,UAArB;AACD,aAFD,MAEO;AACLP,oBAAM,CAACE,KAAP,IAAgBA,KAAK,GAAG,KAAKK,UAA7B;AACD;AACF;AACF;;;eAED,0BAAiBP,MAAjB,EAAiC;AAAA;;AAC/B;AACA,cAAI,KAAKL,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AAC9B,gBAAIG,KAAK,GAAG,CAAZ;AACA,gBAAM3B,UAAU,GAAG,KAAKT,QAAL,CAAckB,MAAd,CAAqB,KAAKf,IAAL,CAAUqM,KAA/B,CAAnB;;AACA,iBAAK,IAAInK,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;AAC1B,kBAAMC,CAAC,GAAG9B,MAAM,CAAC+B,aAAP,CAAqB/B,MAAM,CAAC+B,aAAP,CAAqBpB,MAArB,GAA8BkB,CAA9B,GAAkC,CAAvD,CAAV;;AACA,kBAAIC,CAAC,CAAC5B,KAAF,KAAY,oEAAW0I,sBAAX,CAAkC3I,UAAlC,CAAhB,EAA+D;AAC7D2B,qBAAK,IAAKE,CAAC,CAACF,KAAF,GAAU,CAApB;AACD;AACF;;AACD,gBAAIA,KAAK,KAAK,CAAV,IAAe,KAAKpC,QAAL,CAAcoP,OAAjC,EAA0C;AACxC5O,oBAAM,CAACE,KAAP,GAAeqE,IAAI,CAACyH,KAAL,CAAWhM,MAAM,CAACE,KAAP,GAAe,CAA1B,CAAf;AACD;;AACDF,kBAAM,CAACwB,MAAP,CAAcI,KAAK,KAAK,EAAxB;;AACA,gBAAI5B,MAAM,CAAC6F,GAAX,EAAgB;AACd,mBAAKgH,cAAL,GAAsB,aAAtB;AACD;AACF;;AAED,cAAMqC,SAAS,GAAI,KAAKvP,IAAL,CAAUqM,KAAV,KAAqB,KAAKxM,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAApD,IACb,KAAKhB,IAAL,CAAU+M,qBAAV,EADa,IACwB,KAAK/M,IAAL,CAAU8B,cAAV,EAD1C;;AAEA,cAAIyN,SAAJ,EAAe;AACb,iBAAKvP,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAAD,CAAC;AAAA,qBAAIA,CAAC,CAACK,MAAF,CAAS,OAAI,CAAC7B,IAAL,CAAUwF,eAAV,CAA0BhE,CAA1B,CAAT,CAAJ;AAAA,aAA3B;AACD,WAFD,MAEO,IAAI,KAAKxB,IAAL,CAAU8B,cAAV,EAAJ,EAAgC;AACrC,iBAAK9B,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,uBAAcjC,MAAd,EAA8BC,UAA9B,EAAgD;AAC9C,cAAMmF,UAAU,GAAG,KAAK/E,cAAL,CAAoBL,MAApB,EAA4B+E,aAA5B,CAA0C9E,UAA1C,CAAnB;;AACA,cAAImF,UAAU,KAAK,CAAnB,EAAsB;AACpB,mBAAO,KAAP;AACD,WAFD,MAEO;AACL,gBAAIC,GAAG,GAAG,KAAK,KAAKhF,cAAL,CAAoBL,MAApB,EAA4B+H,aAA5B,CAA0C9H,UAA1C,IAAwD,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAAvE;;AACA,iBAAK,IAAI4B,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGuD,UAApB,EAAgCvD,CAAC,EAAjC,EAAqC;AACnCwD,iBAAG,IAAI,GAAP;AACD;;AACD,iBAAK,IAAIxD,GAAC,GAAGuD,UAAb,EAAyBvD,GAAC,GAAG,CAA7B,EAAgCA,GAAC,EAAjC,EAAqC;AACnCwD,iBAAG,IAAI,GAAP;AACD;;AACD,mBAAOA,GAAP;AACD;AACF;;;eAED,uBAAc;AACZ,eAAK1F,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAACI,KAAP,GAAe,IAAI,0EAAJ,EAAnB;AAAA,WAAhC;AACD;;;eAED,oCAAwB;AACtB,iBAAO,KAAKZ,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,CAArC;AACD;;;eAED,uBAAcV,UAAd,EAAgC;AAC9B,iBAAO,KAAKT,QAAL,CAAckB,MAAd,CAAqB,KAAKf,IAAL,CAAUqM,KAA/B,MAA0C/L,UAAjD;AACD;;;eAED,8BAAqBA,UAArB,EAAuC;AACrC,iBAAO,KAAKT,QAAL,CAAckB,MAAd,CAAqBgF,OAArB,CAA6BzF,UAA7B,IAA2C,KAAKN,IAAL,CAAUqM,KAA5D;AACD;;;eAED,wBAAe/L,UAAf,EAAiC;AAC/B,iBAAO,KAAKT,QAAL,CAAckB,MAAd,CAAqBgF,OAArB,CAA6BzF,UAA7B,MAA6C,KAAKN,IAAL,CAAUqM,KAA9D;AACD;;;eAED,wBAAe/L,UAAf,EAAiC;AAC/B,iBAAO,KAAK4C,cAAL,CAAoB5C,UAApB,CAAP;AACD;;;eAED,6BAAiB;AACf,cAAI2F,OAAO,GAAG,KAAKjG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC0E,GAAN;AAAA,WAA1B,CAAd;;AACA,cAAI,CAACD,OAAO,CAACjF,MAAb,EAAqB;AACnB,mBAAO,EAAP;AACD;;AACD,cAAIyC,GAAG,GAAGwC,OAAO,CAAC,CAAD,CAAP,CAAW1F,KAArB;AACA0F,iBAAO,CAACxE,OAAR,CAAgB,UAAAD,CAAC,EAAI;AACnBiC,eAAG,GAAGjC,CAAC,CAACjB,KAAF,GAAUkD,GAAV,GAAgBjC,CAAC,CAACjB,KAAlB,GAA0BkD,GAAhC;AACD,WAFD;AAGAwC,iBAAO,GAAGA,OAAO,CAAC1E,MAAR,CAAe,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACjB,KAAF,KAAYkD,GAAhB;AAAA,WAAhB,EAAqCJ,GAArC,CAAyC,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC2E,KAAF,EAAJ;AAAA,WAA1C,CAAV;AACA,cAAMC,MAAM,GAAG,KAAKpG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAACyE,OAAO,CAAC9C,IAAR,CAAa,UAAAkD,CAAC;AAAA,qBAAIA,CAAC,CAACvI,EAAF,KAAS0D,CAAC,CAAC1D,EAAf;AAAA,aAAd,CAAL;AAAA,WAA1B,EAAiEuF,GAAjE,CAAqE,UAAA7B,CAAC,EAAI;AACvF,gBAAM8E,CAAC,GAAG9E,CAAC,CAAC2E,KAAF,EAAV;AACAG,aAAC,CAACJ,GAAF,GAAQ,KAAR;AACA,mBAAOI,CAAP;AACD,WAJc,CAAf;AAKA,8CAAWL,OAAX,sBAAuBG,MAAvB;AACD;;;eAED,4BAAmB/F,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAP,GAAc,gFAAd,GAAoCmC,MAAM,CAACE,KAA3C,IAAqDF,MAAM,CAAC6F,GAAP,IAAc,KAAKgH,cAApB,GAAuC,IAAvC,GAA+C,EAAnG,CAAP;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKrN,QAAL,CAAckB,MAAd,CAAqBC,MAArB,GAA8B,GAA9B,IAAqC,KAAKnB,QAAL,CAAcoP,OAAd,GAAwB,GAAxB,GAA8B,GAAnE,CAAP;AACD;;;;MApHoC,mE;;;uBAA1BI,iB,EAAiB,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,sI,EAAA,+I;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,0kB;AAAA;AAAA;ACjB9B;;AAEE;;AAqBA;;AACE;;AACA;;AAaF;;AACA;;AACF;;;;AAtCgB;;AAAA;;AAqBS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAc4B;;AAAA;;;;;;mBDxBhC,CAAC,iEAAD;;;;;;sEAEDA,iB,EAAiB;cAJ7B,uDAI6B;eAJnB;AACThQ,qBAAW,EAAE,2BADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAImB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjB9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaiQ,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBARhB,CACP,kEADO,EAEP,6DAAa5L,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQgB;;;;0HAAdmR,c,EAAc;AAAA,uBAFV,qEAEU;AAFO,kBAL9B,kEAK8B,EALlB,4DAKkB;AAEP,O;AAPX,K;;;;;sEAOHA,c,EAAc;cAT1B,sDAS0B;eATjB;AACR9P,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,qEAAD;AAPN,S;AASiB,Q;;;;;;;;;;;;;;;;;;ACd3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACEE;;AACE;;AAAG;;AAAkB;;AACvB;;;;;;AADK;;AAAA;;;;QDIM8P,sB;;;AACX,sCAAsBC,SAAtB,EAC4CzR,IAD5C,EACsF;AAAA;;AADhE,aAAAyR,SAAA,GAAAA,SAAA;AACsB,aAAAzR,IAAA,GAAAA,IAAA;AAC3C;;;;eAED,kBAAM;AACJ,eAAKyR,SAAL,CAAeC,KAAf,CAAqB,KAArB;AACD;;;eAED,mBAAO;AACL,eAAKD,SAAL,CAAeC,KAAf,CAAqB,IAArB;AACD;;;;;;;uBAXUF,sB,EAAsB,sI,EAAA,gEAEb,wEAFa,C;AAEE,K;;;YAFxBA,sB;AAAsB,mC;AAAA,e;AAAA,a;AAAA,iL;AAAA;AAAA;ACPnC;;AACE;;AAAyC;;AAAG;;AAAgB;;AAAI;;AAChE;;AAGA;;AACE;;AAA8C;AAAA,mBAAS,IAAAG,OAAA,EAAT;AAAkB,WAAlB;;AAAoB;;AAAE;;AACpE;;AAAgD;AAAA,mBAAS,IAAAC,MAAA,EAAT;AAAiB,WAAjB;;AAAmB;;AAAM;;AAC3E;;AACF;;;;AAR8C;;AAAA;;AACT;;AAAA;;AAIP;;AAAA;;AACA;;AAAA;;;;;;;;;sEDAjBJ,sB,EAAsB;cAJlC,uDAIkC;eAJxB;AACTpQ,qBAAW,EAAE,+BADJ;AAETC,mBAAS,EAAE,CAAC,+BAAD;AAFF,S;AAIwB,Q;;;;;;kBAEpB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AETtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AC0CI;;AAAA;;;;;;;;AAAkC;;AAC7B,qGAA8B,WAA9B,EAA8B,wBAA9B;;;;QDpCIwQ,yB;;;AAEX,yCAAsBJ,SAAtB,EAC4CzR,IAD5C,EAC6F;AAAA;;AADvE,aAAAyR,SAAA,GAAAA,SAAA;AACsB,aAAAzR,IAAA,GAAAA,IAAA;AAC3C;;;;eAED,mBAAUyF,KAAV,EAAuB;AACrB,iBAAO,KAAKzF,IAAL,CAAU8R,OAAV,CAAkB5M,IAAlB,CAAuB,UAAA3B,CAAC;AAAA,mBAAIA,CAAC,KAAKkC,KAAV;AAAA,WAAxB,CAAP;AACD;;;eAED,qBAAYA,KAAZ,EAAyB;AACvB,iBAAO,KAAKzF,IAAL,CAAU+R,SAAV,CAAoB7M,IAApB,CAAyB,UAAA3B,CAAC;AAAA,mBAAIA,CAAC,KAAKkC,KAAV;AAAA,WAA1B,CAAP;AACD;;;eAED,iBAAK;AACH,eAAKgM,SAAL,CAAeC,KAAf;AACD;;;;;;;uBAhBUG,yB,EAAyB,sI,EAAA,gEAGhB,wEAHgB,C;AAGD,K;;;YAHxBA,yB;AAAyB,mC;AAAA,e;AAAA,a;AAAA,uxP;AAAA;AAAA;ACPtC;;AACE;;AAAmC;AAAA,mBAAS,IAAAH,KAAA,EAAT;AAAgB,WAAhB;;AACjC;;AAAA;;AACE;;AACE;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAAmM;;AAAE;;AACrM;;AAAmM;;AAAC;;AACpM;;AAAkM;;AAAE;;AACpM;;AAAmM;;AAAC;;AACpM;;AAAmM;;AAAE;;AACrM;;AAAmM;;AAAC;;AACpM;;AAAmM;;AAAE;;AACrM;;AAAkM;;AAAE;;AACpM;;AAAkM;;AAAC;;AACnM;;AAAkM;;AAAE;;AACpM;;AAAkM;;AAAC;;AACnM;;AAAmM;;AAAE;;AACrM;;AAAmM;;AAAC;;AACpM;;AAAmM;;AAAE;;AACrM;;AAAkM;;AAAC;;AACnM;;AAAkM;;AAAE;;AACpM;;AAAkM;;AAAE;;AACpM;;AAAmM;;AAAC;;AACpM;;AAAmM;;AAAE;;AACrM;;AAAmM;;AAAC;;AACpM;;AAAyN;;AAAC;;AAC1N;;AACA;;AACF;;AACF;;AACA;;AAEF;;AACF;;;;AAHS;;AAAA;;;;;;;;;sEDnCIG,yB,EAAyB;cAJrC,uDAIqC;eAJ3B;AACTzQ,qBAAW,EAAE,mCADJ;AAETC,mBAAS,EAAE,CAAC,mCAAD;AAFF,S;AAI2B,Q;;;;;;kBAGvB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACKoC;;AAA0C;;AAAI;;;;;;AAD9E;;AACE;;AAAK;;AAAyB;;AAAyD;;AACvF;;AAAK;;AAAgB;;AACvB;;;;;;;AAH2E;;AACpE;;AAAA;;AAAgD;;AAAA;;AAChD;;AAAA;;;;;;AAJT;;AACE;;AAAG;;AAAkB;;AACrB;;AAIF;;;;;;AALK;;AAAA;;AACqB;;AAAA;;;;QDIf2Q,e;;;AACX,+BAAsBP,SAAtB,EAC4CzR,IAD5C,EACyG;AAAA;;AADnF,aAAAyR,SAAA,GAAAA,SAAA;AACsB,aAAAzR,IAAA,GAAAA,IAAA;AAC3C;;;;eAED,iBAAK;AACH,eAAKyR,SAAL,CAAeC,KAAf;AACD;;;;;;;uBAPUM,e,EAAe,sI,EAAA,gEAEN,wEAFM,C;AAES,K;;;YAFxBA,e;AAAe,mC;AAAA,c;AAAA,a;AAAA,6T;AAAA;AAAA;ACR5B;;AACE;;AAAyC;;AAAG;;AAAgB;;AAAI;;AAChE;;AAOA;;AACE;;AAAwE;;AAAE;;AAC5E;;AACF;;;;AAX8C;;AAAA;;AACT;;AAAA;;AAQP;;AAAA,6FAAyB,OAAzB,EAAyB,SAAzB;;;;;;;;;sEDFjBA,e,EAAe;cAJ3B,uDAI2B;eAJjB;AACT5Q,qBAAW,EAAE,uBADJ;AAETC,mBAAS,EAAE,CAAC,uBAAD;AAFF,S;AAIiB,Q;;;;;;kBAEb,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACgBM;;AACE;;AAAI;;;;AAA4B;;AAChC;;AAAI;;;;AAAuC;;AAC3C;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAwB;;AAC5B;;AAAI;;AAAwB;;AAC9B;;;;;;;;AAPM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDbC4Q,0B;;;AACX,0CAAsBR,SAAtB,EAC4CzR,IAD5C,EACoF;AAAA;;AAD9D,aAAAyR,SAAA,GAAAA,SAAA;AACsB,aAAAzR,IAAA,GAAAA,IAAA;AAC1CA,YAAI,CAACkS,UAAL,CAAgBrJ,IAAhB,CAAqB,UAACJ,CAAD,EAAIC,CAAJ;AAAA,iBAAU,IAAIyJ,IAAJ,CAASzJ,CAAC,CAACyG,CAAX,EAAciD,OAAd,KAA0B,IAAID,IAAJ,CAAS1J,CAAC,CAAC0G,CAAX,EAAciD,OAAd,EAApC;AAAA,SAArB;AACD;;;;eAED,qBAAYC,IAAZ,EAAgC;AAC9B,iBAAO,IAAIF,IAAJ,CAAS,IAAIA,IAAJ,CAASE,IAAI,CAACvN,CAAd,EAAiBsN,OAAjB,KAA6B,IAAID,IAAJ,CAASE,IAAI,CAAClD,CAAd,EAAiBiD,OAAjB,EAAtC,CAAP;AACD;;;eAED,oBAAW/O,OAAX,EAA4B;AAC1B,iBAAOA,OAAO,CAAC+B,GAAR,CAAY,UAAA7B,CAAC,EAAI;AACtB,gBAAM+O,GAAG,GAAG/O,CAAC,CAACgP,KAAF,CAAQ,gFAAR,CAAZ;AACA,gBAAIC,MAAM,GAAGF,GAAG,CAAC,CAAD,CAAhB;;AACA,gBAAIA,GAAG,CAACvP,MAAJ,KAAe,CAAnB,EAAsB;AACpByP,oBAAM,IAAI,MAAMF,GAAG,CAAC,CAAD,CAAT,GAAe,GAAzB;AACD;;AACD,mBAAOE,MAAP;AACD,WAPM,CAAP;AAQD;;;eAED,iBAAK;AACH,eAAKf,SAAL,CAAeC,KAAf;AACD;;;eAED,yBAAa;AACX,iBAAO,sEAAYe,UAAZ,GAAyB,sEAAYA,UAArC,GAAkD,EAAzD;AACD;;;;;;;uBA3BUR,0B,EAA0B,sI,EAAA,gEAEjB,wEAFiB,C;AAEF,K;;;YAFxBA,0B;AAA0B,mC;AAAA,e;AAAA,a;AAAA,sP;AAAA;AAAA;ACVvC;;AACE;;AACE;;AAAG;;AAAO;;AACV;;AAAG;;AAAsB;;AAC3B;;AACA;;AACE;;AACE;;AACE;;AAAI;;AAAI;;AACR;;AAAI;;AAAQ;;AACZ;;AAAI;;AAAI;;AACR;;AAAI;;AAAM;;AACV;;AAAI;;AAAK;;AACT;;AAAI;;AAAS;;AACb;;AAAI;;AAAQ;;AACd;;AACA;;AASF;;AACF;;AACA;;AACE;;AAAwE;;AAAE;;AAC5E;;AACF;;;;AA3BO;;AAAA;;AAaG;;AAAA;;AAYoB;;AAAA,6FAAyB,OAAzB,EAAyB,SAAzB;;;;;;;;;;sEDlBjBA,0B,EAA0B;cAJtC,uDAIsC;eAJ5B;AACT7Q,qBAAW,EAAE,oCADJ;AAETC,mBAAS,EAAE,CAAC,oCAAD;AAFF,S;AAI4B,Q;;;;;;kBAExB,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEZtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWM;;AACE;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAY;;AAChB;;AAAI;;AAAqB;;AACzB;;AAAI;;AAAsB;;AAC5B;;;;;;;;AALM;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;QDRCqR,6B;;;AACX,6CAAsBjB,SAAtB,EAC4CzR,IAD5C,EACsF;AAAA;;AAAA;;AADhE,aAAAyR,SAAA,GAAAA,SAAA;AACsB,aAAAzR,IAAA,GAAAA,IAAA;AAC1CA,YAAI,CAACkS,UAAL,CAAgBrJ,IAAhB,CAAqB,UAACJ,CAAD,EAAIC,CAAJ;AAAA,iBAAU,OAAI,CAACiK,QAAL,CAAcjK,CAAd,IAAmB,OAAI,CAACiK,QAAL,CAAclK,CAAd,CAA7B;AAAA,SAArB;AACD;;;;eAED,kBAAS4J,IAAT,EAA+B;AAC7B,iBAAO1L,IAAI,CAACyH,KAAL,CAAWiE,IAAI,CAACjK,CAAL,IAAUiK,IAAI,CAACjK,CAAL,GAASiK,IAAI,CAACO,CAAxB,IAA6B,GAAxC,CAAP;AACD;;;eAED,iBAAK;AACH,eAAKnB,SAAL,CAAeC,KAAf;AACD;;;;;;;uBAZUgB,6B,EAA6B,sI,EAAA,gEAEpB,wEAFoB,C;AAEL,K;;;YAFxBA,6B;AAA6B,mC;AAAA,e;AAAA,a;AAAA,sP;AAAA;AAAA;ACR1C;;AACE;;AAAyC;;AAAG;;AAAU;;AAAI;;AAC1D;;AACE;;AACE;;AACE;;AAAI;;AAAM;;AACV;;AAAI;;AAAI;;AACR;;AAAI;;AAAK;;AACT;;AAAI;;AAAG;;AACP;;AAAI;;AAAI;;AACV;;AACA;;AAOF;;AACF;;AACA;;AACE;;AAAwE;;AAAE;;AAC5E;;AACF;;;;AAZU;;AAAA;;AAUoB;;AAAA,6FAAyB,OAAzB,EAAyB,SAAzB;;;;;;;;;sEDbjBA,6B,EAA6B;cAJzC,uDAIyC;eAJ/B;AACTtR,qBAAW,EAAE,uCADJ;AAETC,mBAAS,EAAE,CAAC,uCAAD;AAFF,S;AAI+B,Q;;;;;;kBAE3B,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAYawR,oB;;;AAMX,oCAAmB7Q,KAAnB,EACmBF,WADnB,EAEoBG,aAFpB,EAEkD;AAAA;;AAF/B,aAAAD,KAAA,GAAAA,KAAA;AACA,aAAAF,WAAA,GAAAA,WAAA;AACC,aAAAG,aAAA,GAAAA,aAAA;AACnB;;;;eAED,gBAAO;AAAA;;AACL,eAAK6Q,gBAAL,CAAsB,wDAAtB,EAAgF,YAAM;AACpF,mBAAI,CAAC9Q,KAAL,CAAW+Q,QAAX,CAAoB,CAAC,GAAD,CAApB;;AACA,mBAAI,CAACC,UAAL,CAAgBjR,IAAhB,CAAqBkR,UAArB;;AACA,mBAAI,CAACD,UAAL,CAAgBrQ,UAAhB,GAA6B,CAA7B;AACA,mBAAI,CAACqQ,UAAL,CAAgB/D,cAAhB,GAAiC,EAAjC;AACD,WALD;AAMD;;;eAED,mBAAU;AAAA;;AACR,eAAK6D,gBAAL,CAAsB,4CAAtB,EAAoE,YAAM;AACxE,mBAAI,CAACE,UAAL,CAAgBE,OAAhB,CAAwB,IAAxB;AACD,WAFD;AAGD;;;eAED,wBAAe;AAAA;;AACb,eAAKJ,gBAAL,CAAsB,yDAAtB,EAAiF,YAAM;AACrF,mBAAI,CAACE,UAAL,CAAgBG,KAAhB;;AACA,mBAAI,CAACH,UAAL,CAAgBI,YAAhB,GAA+B,IAA/B;AACD,WAHD;AAID;;;eAED,gBAAO;AACL,eAAKJ,UAAL,CAAgBK,IAAhB;AACD;;;eAED,qBAAY;AACV,cAAMC,aAAa,GAAa,EAAhC;AACA,cAAMC,aAAa,GAAa,EAAhC;AACA,cAAMC,eAAe,GAAa,EAAlC;;AACA,eAAK,IAAIvP,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B,gBAAI,KAAK+O,UAAL,CAAgB/N,cAAhB,CAA+BhB,CAA/B,CAAJ,EAAuC;AACrCqP,2BAAa,CAACzM,IAAd,CAAmB5C,CAAnB;AACD;;AACD,gBAAI,KAAK+O,UAAL,CAAgB3I,cAAhB,CAA+BpG,CAA/B,CAAJ,EAAuC;AACrCsP,2BAAa,CAAC1M,IAAd,CAAmB5C,CAAnB;AACD;;AACD,gBAAI,KAAK+O,UAAL,CAAgBtI,gBAAhB,CAAiCzG,CAAjC,CAAJ,EAAyC;AACvCuP,6BAAe,CAAC3M,IAAhB,CAAqB5C,CAArB;AACD;AACF;;AACD,eAAKhC,aAAL,CAAmBwR,cAAnB,CAAkCH,aAAlC,EAAiDC,aAAjD,EAAgEC,eAAhE;AACD;;;eAED,mBAAO;AACL,iBAAO,KAAKE,IAAL,IAAa,KAAKA,IAAL,KAAc,CAA3B,GAA+B,KAAKA,IAApC,GAA2C,KAAKC,QAAL,EAAlD;AACD;;;eAEO,0BAAiBC,OAAjB,EAAkCC,QAAlC,EAAwD;AAC9D,cAAI,KAAKb,UAAL,CAAgBc,WAAhB,CAA4B/Q,MAAhC,EAAwC;AACtC,iBAAKd,aAAL,CAAmB8R,iBAAnB,CAAqC,cAArC,EAAqDH,OAArD,EACGI,WADH,GACiBC,SADjB,CAC2B,UAAAjU,IAAI,EAAI;AACjC,kBAAIA,IAAJ,EAAU;AACR6T,wBAAQ;AACT;AACF,aALD;AAMD,WAPD,MAOO;AACLA,oBAAQ;AACT;AACF;;;eAEO,oBAAQ;AACd,cAAMzF,KAAK,GAAG,KAAK4E,UAAL,CAAgBjR,IAAhB,CAAqBqM,KAAnC;AACA,iBAAO,KAAK8F,WAAL,GAAoB,KAAKA,WAAL,GAAmB9F,KAAvC,GAAiDA,KAAK,GAAG,CAAhE;AACD;;;;;;;uBA3EUyE,oB,EAAoB,uH,EAAA,4J,EAAA,uI;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,mL;AAAA;AAAA;ACZjC;;AACE;;AAA0B;AAAA,mBAAS,IAAAK,OAAA,EAAT;AAAkB,WAAlB;;AACxB;;AAAU;;AAAO;;AACnB;;AACA;;AAA0B;AAAA,mBAAS,IAAAG,IAAA,EAAT;AAAe,WAAf;;AACxB;;AAAU;;AAAI;;AAChB;;AACF;;AAEA;;AAAwB;AAAA,mBAAS,IAAAc,SAAA,EAAT;AAAoB,WAApB;;AACtB;;AACF;;AAEA;;AACE;;AAAwB;AAAA,mBAAS,IAAAC,IAAA,EAAT;AAAe,WAAf;;AAAiC;;AAAU;;AAAI;;AAAW;;AAClF;;AAAwB;AAAA,mBAAS,IAAAC,YAAA,EAAT;AAAuB,WAAvB;;AAAyC;;AAAU;;AAAK;;AAAW;;AAC7F;;;;AAP8C;;AAAA;;AAC5C;;AAAA;;;;;;;;;sEDEWxB,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT1R,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;gBAE9B;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEhBH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACQM;;AACE;;AAAI;;AAAe;;AACnB;;AAAI;;AAAgB;;AACtB;;;;;;AAFM;;AAAA;;AACA;;AAAA;;;;QDFCiT,iC;;;AACX,iDAAsB7C,SAAtB,EAC4CzR,IAD5C,EACwF;AAAA;;AADlE,aAAAyR,SAAA,GAAAA,SAAA;AACsB,aAAAzR,IAAA,GAAAA,IAAA;AAC1CA,YAAI,CAACkS,UAAL,CAAgBrJ,IAAhB,CAAqB,UAACJ,CAAD,EAAIC,CAAJ;AAAA,iBAAUA,CAAC,CAAC6L,KAAF,GAAU9L,CAAC,CAAC8L,KAAtB;AAAA,SAArB;AACD;;;;eAED,iBAAK;AACH,eAAK9C,SAAL,CAAeC,KAAf;AACD;;;;;;;uBARU4C,iC,EAAiC,sI,EAAA,gEAExB,wEAFwB,C;AAET,K;;;YAFxBA,iC;AAAiC,mC;AAAA,e;AAAA,a;AAAA,sP;AAAA;AAAA;ACR9C;;AACE;;AAAyC;;AAAG;;AAAkB;;AAAI;;AAClE;;AACE;;AACE;;AACE;;AAAI;;AAAU;;AACd;;AAAI;;AAAK;;AACX;;AACA;;AAIF;;AACF;;AACA;;AACE;;AAAwE;;AAAE;;AAC5E;;AACF;;;;AATU;;AAAA;;AAOoB;;AAAA,6FAAyB,OAAzB,EAAyB,SAAzB;;;;;;;;;sEDPjBA,iC,EAAiC;cAJ7C,uDAI6C;eAJnC;AACTlT,qBAAW,EAAE,4CADJ;AAETC,mBAAS,EAAE,CAAC,4CAAD;AAFF,S;AAImC,Q;;;;;;kBAE/B,oD;mBAAO,wE;;;;;;;;;;;;;;;;;;;;;AEVtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;;;ACKI;;AAEE;;AAAU;;AAAe;;AACzB;;AAAmB;;AAAe;;AACpC;;;;;;;;;AAH+C;;AAA9B;;AACL;;AAAA;;AACS;;AAAA;;;;;;AAJvB;;AACE;;AAKF;;;;;;;;AAL4B;;AAAA;;;;;;;;QDKjBmT,a;;;AAEX,6BAA6BC,MAA7B,EAC6BC,MAD7B,EAE6BxS,iBAF7B,EAEmE;AAAA;;AAFtC,aAAAuS,MAAA,GAAAA,MAAA;AACA,aAAAC,MAAA,GAAAA,MAAA;AACA,aAAAxS,iBAAA,GAAAA,iBAAA;AAC5B;;;;eAED,sBAAa;AACX,cAAMwE,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACD,MAAL,KAAgB,uDAAO3D,MAAlC,CAAf;AACA,eAAK0R,MAAL,CAAY1B,QAAZ,CAAqB,CAAC,MAAM,uDAAOrM,MAAP,EAAe3G,IAAtB,CAArB;AACD;;;eAED,uBAAW;AACT,iBAAO,uDAAOuD,MAAP,CAAc,UAAAiL,CAAC;AAAA,mBAAI,CAAC,CAACA,CAAC,CAACvO,IAAR;AAAA,WAAf,CAAP;AACD;;;eAED,kCAAyB;AACvB,eAAK0U,MAAL,CAAYC,sBAAZ,CAAmC,KAAKzS,iBAAL,CAAuB0S,qBAAvB,EAAnC,EADuB,CAEvB;AACD;;;eAED,8BAAqB;AACnB,eAAKF,MAAL,CAAYG,eAAZ,CAA4B,KAAK3S,iBAAL,CAAuB4S,iBAAvB,EAA5B;AACD;;;;;;;uBAvBUN,a,EAAa,uH,EAAA,uI,EAAA,+I;AAAA,K;;;YAAbA,a;AAAa,mC;AAAA,e;AAAA,a;AAAA,2U;AAAA;AAAA;ACV1B;;AACE;;AAAI;AAAA,mBAAS,IAAAO,UAAA,EAAT;AAAqB,WAArB;;AAAuB;;AAAY;;AACzC;;AACA;;AACE;;AAOF;;AACA;;AACE;;AAAwB;AAAA,mBAAS,IAAAJ,sBAAA,EAAT;AAAiC,WAAjC;;AACtB;;AAAU;;AAAK;;AACjB;;AACA;;AAAwB;AAAA,mBAAS,IAAAK,kBAAA,EAAT;AAA6B,WAA7B;;AACtB;;AAAU;;AAAO;;AACnB;;AACF;;;;AAf2B;;AAAA;;AASkC;;AAAA;;AAGJ;;AAAA;;;;;;;;;sEDN5CR,a,EAAa;cAJzB,uDAIyB;eAJf;AACTpT,qBAAW,EAAE,uBADJ;AAETC,mBAAS,EAAE,CAAC,uBAAD;AAFF,S;AAIe,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEV1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMM;;AAA+C;;AAAiC;;;;;;;;AAAjC;;AAAA;;;;;;AAC/C;;AAA2D;;AAAiC;;;;;;;;AAAjC;;AAAA;;;;;;AAC3D;;AAAwE;;AAAuC;;;;;;;;AAAvC;;AAAA;;;;;;;;AAN5E;;AACE;;AAC2C;AAAA;;AAAA;;AAAA;;AAAA,6CAAuB,CAAvB;AAAwB,SAAxB;;AACzC;;AACA;;AACA;;AACA;;AACF;;AACF;;;;;;;;AAP2C;;AAAA,6GAA6B,UAA7B,EAA6B,mCAA7B;;AAEvC;;AAAA;;AACU;;AAAA;;AACY;;AAAA;;AACO;;AAAA;;;;;;AAO/B;;AAA8C;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAC9C;;AAA0D;;AAAgC;;;;;;AAAhC;;AAAA;;;;;;AAC1D;;AAAuE;;AAAsC;;;;;;AAAtC;;AAAA;;;;QDP9D4T,oB;;;AAIX,oCAAmBlT,IAAnB,EACmBD,WADnB,EACyD;AAAA;;AADtC,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAD,WAAA,GAAAA,WAAA;AAClB;;;;eAED,sBAAU;AACR,cAAM+J,OAAO,GAAa,EAA1B;;AACA,eAAK,IAAI5H,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAI,EAArB,EAAyBA,CAAC,EAA1B,EAA8B;AAC5B4H,mBAAO,CAAC5H,CAAC,GAAG,CAAL,CAAP,GAAiBA,CAAjB;AACD;;AACD,iBAAO4H,OAAP;AACD;;;eAED,wBAAexJ,UAAf,EAAiC;AAC/B,cAAI,KAAK2Q,UAAL,CAAgB3I,cAAhB,CAA+BhI,UAA/B,CAAJ,EAAgD;AAC9C,mBAAO,SAAP;AACD,WAFD,MAEO,IAAI,KAAK2Q,UAAL,CAAgBtI,gBAAhB,CAAiCrI,UAAjC,CAAJ,EAAkD;AACvD,mBAAO,QAAP;AACD;;AACD,iBAAO,EAAP;AACD;;;eAED,0BAAiBA,UAAjB,EAAmC;AACjC,iBAAO,CAAC,KAAK2Q,UAAL,CAAgB/N,cAAhB,CAA+B5C,UAA/B,CAAD,IAA+C,CAAC,KAAK6S,cAAL,CAAoB7S,UAApB,CAAvD;AACD;;;eAED,qBAAYA,UAAZ,EAAgC;AAC9B,eAAK2Q,UAAL,CAAgBmC,WAAhB,CAA4B,CAAC,KAAKnC,UAAL,CAAgB/N,cAAhB,CAA+B5C,UAA/B,IAA6C,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAA7C,GAA6F,CAA9F,EAC1B,oEAAW2I,sBAAX,CAAkC3I,UAAlC,CAD0B,CAA5B;AAED;;;;;;;uBAhCU4S,oB,EAAoB,mI,EAAA,4J;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,c;AAAA,4U;AAAA;AAAA;ACVjC;;AAEE;;AAUA;;AACQ;AAAA,mBAAS,IAAAE,WAAA,CAAY,EAAZ,CAAT;AAAwB,WAAxB;;AACN;;AACA;;AACA;;AACA;;AACF;;AAEA;;AACQ;AAAA,mBAAS,IAAAnC,UAAA,cAAT;AAAiC,WAAjC;;AAAyE;;AAAE;;AACnF;;AACQ;AAAA,mBAAS,IAAAA,UAAA,cAAT;AAAiC,WAAjC;;AAAyE;;AAAE;;AAEnF;;AAAyC;AAAA,mBAAS,IAAAA,UAAA,OAAT;AAA0B,WAA1B;;AAAiE;;AAAI;;AAC9G;;AAAyC;AAAA,mBAAS,IAAAA,UAAA,cAAwB,CAAxB,EAA0B,CAA1B,EAAT;AAAsC,WAAtC;;AAA6E;;AAAC;;AACzH;;;;AA3BwB;;AAER;;AAAA;;AAU2B;;AAAA,oGAA4B,UAA5B,EAA4B,wBAA5B;;AAG7B;;AAAA;;AACY;;AAAA;;AACO;;AAAA;;AAGU;;AAAA,8HAAsD,UAAtD,EAAsD,4BAAtD;;AAEA;;AAAA,8HAAsD,UAAtD,EAAsD,4BAAtD;;AAG4B;;AAAA;;AACY;;AAAA;;;;;;;;;sEDhBtEiC,oB,EAAoB;cALhC,uDAKgC;eALtB;AACT9T,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD;AAHF,S;AAKsB,Q;;;;;;;;gBAE9B;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACCoB;;AAA8B;;AAAY;;;;;;AAQ5D;;;;;;AACA;;;;;;AACA;;;;;;AACA;;AAA4D;;AAAgB;;;;;;AAAhB;;AAAA;;;;;;AAC5D;;AAA4D;;AAAO;;AAAM;;AAAQ;;AAAe;;;;;;AAAf;;AAAA;;;;;;AACjF;;AACE;;AAAO;;AAAM;;AAAQ;;AACrB;;AAAO;;AAAO;;AAAQ;;AACxB;;;;;;AAFuB;;AAAA;;AACC;;AAAA;;;;;;QDNb+T,oB,GAOX,8BAA4BtT,WAA5B,EAAkE;AAAA;;AAAtC,WAAAA,WAAA,GAAAA,WAAA;AALnB,WAAAuT,UAAA,GAAa,IAAb;AACA,WAAAC,cAAA,GAAiB,IAAjB;AACA,WAAAC,aAAA,GAAgB,KAAhB;AACA,WAAAC,WAAA,GAAc,KAAd;AAGR,K;;;uBARUJ,oB,EAAoB,4J;AAAA,K;;;YAApBA,oB;AAAoB,uC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,6B;AAAA,e;AAAA,c;AAAA,6Q;AAAA;AAAA;;;ACVjC;;AACE;;AAAkB;;AAAqD;;AAAe;;AACtF;;AACE;;AAAmB;;AAA8C;;AACjE;;AAAmB;;AAA8C;;AACjE;;AAAmB;;AAA8C;;AACjE;;AAAyB;;AAA4D;;AACvF;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAIA;;AACF;;;;AAlB8B;;AAAA;;AAA2C;;AAAA;;AAElD;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;AACM;;AAAA;;AAGT;;AAAA;;AACN;;AAAA;;AACY;;AAAA;;AACL;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;;;sEDJRA,oB,EAAoB;cANhC,uDAMgC;eANtB;AACTjU,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,+BAAD,CAHF;AAIToU,uBAAa,EAAE,gEAAkBC;AAJxB,S;AAMsB,Q;;;;;;gBAC9B;;;gBACA;;;gBACA;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEfH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACMM;;AACE;;AACF;;;;;;AAFgD;;AAC9C;;AAAA;;;;;;;;AAON;;AACE;;AAAyB;;AAAe;;AACxC;;AAAwB;AAAA;;AAAA;;AAAA;;AAAA,iBAAS,QAAA1C,UAAA,yBAAT;AAAwC,SAAxC;;AAA0C;;AAAU;;AAAa;;AAAW;;AACtG;;;;;;AAF2B;;AAAA;;;;QDJhB2C,uB;;;AAIX,uCAAoB7T,WAApB,EAA0D;AAAA;;AAAtC,aAAAA,WAAA,GAAAA,WAAA;AAFpB,aAAA8T,aAAA,GAAgB,EAAhB;AAGE,aAAKA,aAAL,GAAqB,KAAK9T,WAAL,CAAiB+T,gBAAjB,EAArB;AACD;;;;eAED,sBAAa;AAAA;;AACX,iBAAO,KAAKD,aAAL,CAAmBtS,MAAnB,CAA0B,UAAAwS,CAAC;AAAA,mBAAI,OAAI,CAAC9C,UAAL,CAAgBjR,IAAhB,CAAqBsB,OAArB,CACnC+B,GADmC,CAC/B,UAAA7B,CAAC;AAAA,qBAAIA,CAAC,CAACtD,IAAN;AAAA,aAD8B,EAClB6H,OADkB,CACVgO,CADU,MACH,CAAC,CADF;AAAA,WAA3B,CAAP;AAED;;;eAED,mBAAUC,eAAV,EAAgC;AAC9B,eAAK/C,UAAL,CAAgBgD,SAAhB,CAA0BD,eAA1B;AACA,eAAKH,aAAL,GAAqB,KAAK9T,WAAL,CAAiB+T,gBAAjB,EAArB;AACD;;;eAED,wBAAejV,KAAf,EAAoDmV,eAApD,EAAuF;AACrF,eAAK/C,UAAL,CAAgBgD,SAAhB,CAA0BpV,KAAK,CAACqV,MAAhC;AACA,eAAKL,aAAL,GAAqB,KAAK9T,WAAL,CAAiB+T,gBAAjB,EAArB;AACAE,yBAAe,CAAChP,KAAhB,GAAwB,EAAxB;AACAgP,yBAAe,CAACG,IAAhB;AACD;;;;;;;uBAvBUP,uB,EAAuB,4J;AAAA,K;;;YAAvBA,uB;AAAuB,0C;AAAA;AAAA;AAAA,O;AAAA,e;AAAA,a;AAAA,ye;AAAA;AAAA;;;ACXpC;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AAEA;;AAA0C;AAAA;;AAAA;;AAAA,mBAAkB,IAAAQ,cAAA,cAAlB;AAAyD,WAAzD;;AACxC;;AAGF;;AACF;;AACA;;AAAwB;AAAA;;AAAA;;AAAA,mBAAS,IAAAH,SAAA,MAAT;AAAmC,WAAnC;;AAA6E;;AAAU;;AAAU;;AAAW;;AACtI;;AACA;;AACE;;AAIF;;;;;;AAdM;;AAAA,+GAAuC,iBAAvC,EAAuC,IAAvC;;AAEY;;AAAA;;AAK6C;;AAAA;;AAGrC;;AAAA;;;;;;;;;sEDHbL,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTxU,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,kCAAD;AAHF,S;AAKyB,Q;;;;;;gBACjC;;;;;;;;;;;;;;;;;;;;AEZH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;QAWa+U,iB;;;AAKX,iCAA6BnU,aAA7B,EAA2D;AAAA;;AAA9B,aAAAA,aAAA,GAAAA,aAAA;AAC5B;;;;eAED,qBAAY;AACV,eAAKA,aAAL,CAAmBoU,UAAnB,CAA8B,KAAKC,KAAnC,EAA0C,KAAKC,KAA/C;AACD;;;eAED,0BAAiB;AACf,eAAKtU,aAAL,CAAmBuU,wBAAnB,CAA4C,KAAKxD,UAAL,CAAgB8B,iBAAhB,EAA5C;AACD;;;eAED,uBAAc;AACZ,eAAK7S,aAAL,CAAmB4S,eAAnB,CAAmC,KAAK7B,UAAL,CAAgByD,cAAhB,EAAnC;AACD;;;;;;;uBAlBUL,iB,EAAiB,uI;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA;AAAA;AAAA;AAAA;AAAA,O;AAAA,6B;AAAA,e;AAAA,a;AAAA,+P;AAAA;AAAA;;;ACX9B;;AACE;;AAAI;;AAAkB;;AAEtB;;AAAI;;AAAO;;AACX;;AACA;;AAEA;;AAEA;;AAEA;;AAAK;;AACL;;AAAqD;AAAA,mBAAS,IAAAM,cAAA,EAAT;AAAyB,WAAzB;;AAA2B;;AAAW;;AAC3F;;AAAqD;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAAY;;AACzF;;AAAqD;AAAA,mBAAS,IAAAC,SAAA,EAAT;AAAoB,WAApB;;AAAsB;;AAAK;;AAChF;;AACA;;AAA6D;AAAA,mBAAS,IAAA5D,UAAA,UAAT;AAA6B,WAA7B;;AAA+B;;AAAK;;AACjG;;AAA6C;AAAA,mBAAS,IAAAA,UAAA,OAAT;AAA0B,WAA1B;;AAA4B;;AAAM;;AAEjF;;;;AAlBM;;AAAA;;AAGiB;;AAAA;;;;;;;;;;sEDOVoD,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACTjV,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD,CAHF;AAIToU,uBAAa,EAAE,gEAAkBC;AAJxB,S;AAMmB,Q;;;;;;gBAC3B;;;gBACA;;;gBACA;;;;;;;;;;;;;;;;;;;;AEdH;AAAA;;;AAAA;AAAA;AAAA;;QAAamB,mB,GAAb;AAAA;;AACE,WAAAC,KAAA,GAAQ,CAAR;AACA,WAAAC,OAAA,GAAU,CAAV;AACD,K;;;;;;;;;;;;;;;;;ACHD;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,U;;;AAIX,0BAAYhO,KAAZ,EAA2BjC,KAA3B,EAA0C;AAAA;;AACxC,aAAKiC,KAAL,GAAaA,KAAb;AACA,aAAKjC,KAAL,GAAaA,KAAb;AACD;;;;eAED,iBAAK;AACH,iBAAO,IAAIiQ,UAAJ,CAAe,KAAKhO,KAApB,EAA2B,KAAKjC,KAAhC,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACXH;AAAA;;;AAAA;AAAA;AAAA;;QAAakQ,c;;;;;;;;;;;;;;;;;;;ACGb;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,M;;;AAUX,sBAAmBrX,EAAnB,EAAiD;AAAA,YAAXI,IAAW,uEAAJ,EAAI;;AAAA;;AAA9B,aAAAJ,EAAA,GAAAA,EAAA;AAAmB,aAAAI,IAAA,GAAAA,IAAA;AATtC,aAAAqC,KAAA,GAAQ,CAAR;AACA,yBAAmB,EAAnB;AAEA,aAAA2F,GAAA,GAAM,KAAN;AACA,aAAAkP,WAAA,GAAc,CAAd;AACA,aAAAC,KAAA,GAAQ,IAAR;AAEA,aAAArT,IAAA,GAAO,CAAP;AAGC;;;;eAED,kBAAmB;AAAA,cAAZkE,GAAY,uEAAN,IAAM;AACjB,eAAKA,GAAL,GAAWA,GAAX;AACA,eAAKkP,WAAL,GAAmBlP,GAAG,GAAG,IAAIkK,IAAJ,GAAWC,OAAX,EAAH,GAA0B,CAAhD;AACD;;;eAED,0BAAc;AACZ,iBAAO,eAAY5J,MAAZ,CAAmB,UAACC,CAAD,EAAIC,CAAJ;AAAA,mBAAUD,CAAC,GAAGC,CAAd;AAAA,WAAnB,EAAoC,CAApC,CAAP;AACD;;;eAED,yBAAgB2O,GAAhB,EAA4B;AAC1B,eAAKlT,aAAL,CAAmB0C,IAAnB,CAAwBwQ,GAAxB;AACD;;;eAED,sBAAU;AACR,iBAAO,KAAKtT,IAAL,IAAa,CAApB;AACD;;;eAED,iBAAQ;AACN,eAAKzB,KAAL,GAAa,CAAb;AACA,2BAAc,EAAd;AACA,eAAK6B,aAAL,GAAqB,EAArB;AACA,eAAK8D,GAAL,GAAW,KAAX;AACA,eAAKkP,WAAL,GAAmB,CAAnB;AACA,eAAKC,KAAL,GAAa,IAAb;AACD;;;eAED,iBAAK;AACH,cAAMhV,MAAM,GAAG,IAAI8U,MAAJ,CAAW,KAAKrX,EAAhB,EAAoB,KAAKI,IAAzB,CAAf;AACAmC,gBAAM,CAACE,KAAP,GAAe,KAAKA,KAApB;AACAF,gBAAM,CAAC2B,IAAP,GAAc,KAAKA,IAAnB;AACA3B,gBAAM,UAAN,GAAgB,EAAhB;AACA,yBAAYoB,OAAZ,CAAoB,UAAAU,CAAC,EAAI;AACvB9B,kBAAM,UAAN,CAAcyE,IAAd,CAAmB3C,CAAnB;AACD,WAFD;AAGA9B,gBAAM,CAAC+B,aAAP,GAAuB,KAAKA,aAA5B;AACA/B,gBAAM,CAAC6F,GAAP,GAAa,KAAKA,GAAlB;AACA7F,gBAAM,CAAC+U,WAAP,GAAqB,KAAKA,WAA1B;AACA/U,gBAAM,CAACgV,KAAP,GAAe,KAAKA,KAApB;AACAhV,gBAAM,CAAC+B,aAAP,GAAuB,EAAvB;AACA,eAAKA,aAAL,CAAmBX,OAAnB,CAA2B,UAAA8T,OAAM,EAAI;AACnClV,kBAAM,CAAC+B,aAAP,CAAqB0C,IAArB,CAA0ByQ,OAAM,CAACpP,KAAP,EAA1B;AACD,WAFD;;AAGA,cAAI,KAAK1F,KAAT,EAAgB;AACdJ,kBAAM,CAACI,KAAP,GAAe,KAAKA,KAAL,CAAW0F,KAAX,EAAf;AACD;;AACD,iBAAO9F,MAAP;AACD;;;;;;;;;;;;;;;;;;;;;AC9DH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAEsBmV,e;;;;;;;;;eAEpB,uBAAcC,IAAd,EAAkCnV,UAAlC,EAAoD;AAClD,cAAMoV,QAAQ,GAAGD,IAAI,CAAClU,MAAL,CAAY,UAAAwB,CAAC;AAAA,mBAAIA,CAAC,CAACkE,KAAF,KAAY3G,UAAhB;AAAA,WAAb,CAAjB;;AACA,cAAIoV,QAAQ,CAAC1U,MAAT,KAAoB,CAAxB,EAA2B;AACzByU,gBAAI,CAAC3Q,IAAL,CAAU,IAAI,6DAAJ,CAAexE,UAAf,EAA2B,CAA3B,CAAV;AACD;;AACD,iBAAOmV,IAAI,CAAClU,MAAL,CAAY,UAAAwB,CAAC;AAAA,mBAAIA,CAAC,CAACkE,KAAF,KAAY3G,UAAhB;AAAA,WAAb,EAAyC,CAAzC,CAAP;AACD;;;eAED,sBAAU;AACR,iBAAO,KAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACbH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAaO,QAAMqV,YAAY,GAAG,EAArB;AACP,QAAMC,yBAAyB,GAAG,CAAlC;;QAEsBC,U;;;AAapB,0BAA6B9V,WAA7B,EAC6BC,IAD7B,EAE6BC,KAF7B,EAG6BC,aAH7B,EAI6BxB,YAJ7B,EAK6ByB,iBAL7B,EAM6B2V,QAN7B,EAQ8D;AAAA,YADjCC,sBACiC,uEADR,CACQ;AAAA,YAAjCC,sBAAiC;;AAAA;;AARjC,aAAAjW,WAAA,GAAAA,WAAA;AACA,aAAAC,IAAA,GAAAA,IAAA;AACA,aAAAC,KAAA,GAAAA,KAAA;AACA,aAAAC,aAAA,GAAAA,aAAA;AACA,aAAAxB,YAAA,GAAAA,YAAA;AACA,aAAAyB,iBAAA,GAAAA,iBAAA;AACA,aAAA2V,QAAA,GAAAA,QAAA;AACA,aAAAC,sBAAA,GAAAA,sBAAA;AACA,aAAAC,sBAAA,GAAAA,sBAAA;AAnB7B,aAAAC,YAAA,GAAe,IAAf;AACA,aAAA5E,YAAA,GAAe,IAAf;AAEA,aAAArF,WAAA,GAAc,IAAd;AACA,aAAAY,WAAA,GAAc,IAAd;AACA,aAAAC,YAAA,GAAe,IAAf;AACA,aAAAoE,UAAA,GAAa,IAAb;AAcC;;;;eAMD,oBAAW;AACT,eAAKI,YAAL,GAAoB,IAApB;AACA,eAAKnE,cAAL,GAAsB,EAAtB;AACD;;;eAED,qBAAYgJ,IAAZ,EAA4B;AAAA;;AAC1B,cAAM3V,KAAK,GAAG2V,IAAI,CAAC,CAAD,CAAlB;AACA,cAAM1V,SAAS,GAAG0V,IAAI,CAAC,CAAD,CAAtB;;AACA,cAAI,KAAKD,YAAT,EAAuB;AACrB,iBAAKE,iBAAL;AACA,iBAAKF,YAAL,GAAoB,KAApB;;AACA,gBAAI1V,KAAK,KAAK,EAAV,IAAgB,KAAKK,UAAL,KAAoB,CAAxC,EAA2C;AACzC,mBAAKA,UAAL,GAAkB,CAAlB;AACD;;AAED,gBAAMwV,YAAY,GAAG,KAAKpW,IAAL,CAAU2C,eAAV,EAArB;AACA,gBAAMrC,UAAU,GAAGC,KAAK,KAAK,EAAV,GAAe,EAAf,GAAoBA,KAAK,GAAG,CAA/C;AAEA6V,wBAAY,CAACC,eAAb,CAA6B,IAAI,kDAAJ,CAAU9V,KAAV,EAAiB,KAAKK,UAAtB,EAAkC,KAAKZ,IAAL,CAAU+K,WAA5C,CAA7B;;AACA,gBAAI,KAAK/K,IAAL,CAAU+K,WAAV,KAA0B,CAA9B,EAAiC;AAC/BqL,0BAAY,UAAZ,GAAsB,EAAtB;AACD;;AACDA,wBAAY,UAAZ,CAAoB,KAAKpW,IAAL,CAAU+K,WAA9B,IAA6CxK,KAAK,GAAG,KAAKK,UAA1D;AACA,iBAAKZ,IAAL,CAAU+K,WAAV;AAEA,iBAAKuL,eAAL,CAAqBF,YAArB,EAAmC9V,UAAnC,EAA+CC,KAA/C,EAAsDC,SAAtD;AACA,iBAAK+V,gBAAL,CAAsBH,YAAtB;AAEA,iBAAKxV,UAAL,GAAkB,CAAlB;AACA,gBAAMqF,OAAO,GAAG,KAAKjG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAAC0E,GAAN;AAAA,aAA1B,CAAhB;;AACA,gBAAID,OAAO,CAACjF,MAAR,GAAiB,CAArB,EAAwB;AACtB,kBAAK,KAAKhB,IAAL,CAAUwW,YAAV,IAA0B,KAAKxW,IAAL,CAAUyW,kBAAV,KAAiCxQ,OAAO,CAACjF,MAAzC,IAAmD,CAA9E,IAAoF,CAAC,KAAKhB,IAAL,CAAUwW,YAAnG,EAAiH;AAC/G,oBAAM3E,OAAO,GAAG,KAAK3E,cAAL,GAAsB,KAAKA,cAA3B,GAA4C,cAAc,KAAKlN,IAAL,CAAUqM,KAAV,GAAkB,CAAhC,CAA5D;AACA,qBAAKqK,gBAAL;AACA,qBAAKxW,aAAL,CAAmBoU,UAAnB,CAA8B,YAA9B,EAA4CzC,OAA5C,EAAqD,KAAK8E,iBAAL,EAArD;AACA,qBAAKxF,OAAL,CAAa,IAAb;AACD,eALD,MAKO;AACL,uBAAO,KAAKnR,IAAL,CAAU2C,eAAV,GAA4BuD,GAAnC,EAAwC;AACtC,uBAAKlG,IAAL,CAAUsC,UAAV;AACD;AACF;AACF;;AAED,gBAAME,aAAa,GAAG,KAAKxC,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,qBAAI,CAAC,OAAI,CAACd,cAAL,CAAoBc,CAApB,CAAD,IAA2B,CAAC,OAAI,CAACd,cAAL,CAAoBc,CAApB,EAAuBiB,UAAvB,EAAhC;AAAA,aAA1B,CAAtB;;AACA,gBAAI,CAACD,aAAa,CAACxB,MAAnB,EAA2B;AACzB,kBAAM6Q,QAAO,GAAG,KAAK3E,cAAL,GAAsB,KAAKA,cAA3B,GAA4C,cAAc,KAAKlN,IAAL,CAAUqM,KAAV,GAAkB,CAAhC,CAA5D;;AACA,mBAAKqK,gBAAL;AACA,mBAAKxW,aAAL,CAAmBoU,UAAnB,CAA8B,YAA9B,EAA4CzC,QAA5C,EAAqD,KAAK8E,iBAAL,EAArD;AACA,mBAAKxF,OAAL,CAAa,IAAb;AACD;;AAED,iBAAK8E,YAAL,GAAoB,IAApB;AACD;AACF;;;eAED,wBAAe5V,MAAf,EAA6B;AAC3B,iBAAOA,MAAM,CAACI,KAAd;AACD;;;eAED,wBAAY;AACV,iBAAO,KAAKT,IAAL,CAAUyW,kBAAV,KAAiCb,yBAAxC;AACD;;;eAED,mBAAU1X,IAAV,EAAqB;AACnB,cAAI,CAAC,CAACA,IAAI,CAAC8G,KAAL,CAAW4R,IAAX,GAAkB5V,MAApB,IAA8B,CAAC,KAAKhB,IAAL,CAAUsB,OAAV,CAAkB6B,IAAlB,CAAuB,UAAA3B,CAAC;AAAA,mBAAIA,CAAC,CAACtD,IAAF,KAAWA,IAAI,CAAC8G,KAApB;AAAA,WAAxB,CAAnC,EAAuF;AACrF,iBAAKhF,IAAL,CAAUsB,OAAV,CAAkBwD,IAAlB,CAAuB,IAAI,oDAAJ,CAAW,iDAAX,EAAmB5G,IAAI,CAAC8G,KAAxB,CAAvB;AACA,iBAAKjF,WAAL,CAAiB8W,WAAjB,CAA6B3Y,IAAI,CAAC8G,KAAlC;AACD;;AACD9G,cAAI,CAAC8G,KAAL,GAAa,EAAb;AACD;;;eAED,sBAAa3E,MAAb,EAA6B;AAC3B,eAAKL,IAAL,CAAUsB,OAAV,GAAoB,KAAKtB,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,KAAKnB,MAAV;AAAA,WAA1B,CAApB;AACD;;;eAED,mBAAwB;AAAA,cAAhByW,MAAgB,uEAAP,KAAO;AACtB,eAAKzF,YAAL,GAAoB,CAAC,KAAK0F,wBAAL,EAAD,IAAoC,CAAC,KAAKC,wBAAL,EAAzD;;AACA,cAAI,CAAC,KAAKD,wBAAL,EAAL,EAAsC;AACpC,gBAAIE,GAAG,GAAG,kCAAV;;AACA,gBAAI,KAAKlB,sBAAT,EAAiC;AAC/BkB,iBAAG,yBAAkB,KAAKlB,sBAAvB,CAAH;AACD;;AACD,gBAAI,KAAKC,sBAAT,EAAiC;AAC/BiB,iBAAG,IAAI,CAAC,KAAKlB,sBAAL,GAA8B,IAA9B,GAAqC,IAAtC,uBAA0D,KAAKC,sBAA/D,OAAP;AACD,aAFD,MAEO;AACLiB,iBAAG,IAAI,KAAKlB,sBAAL,GAA8B,IAA9B,GAAqC,GAA5C;AACD;;AACD,iBAAK7V,aAAL,CAAmBgX,eAAnB,CAAmC,QAAnC,EAA6CD,GAA7C;AACD,WAXD,MAWO,IAAI,KAAK5F,YAAT,EAAuB;AAC5B,iBAAKnR,aAAL,CAAmBgX,eAAnB,CAAmC,QAAnC,EAA6C,wBAA7C;AACD;;AACD,cAAIJ,MAAJ,EAAY;AACV,iBAAK9W,IAAL,CAAUmX,aAAV;AACD;;AACD,eAAK/F,KAAL;AACD;;;eAED,uBAAc;AACZ,eAAKxQ,UAAL,GAAkB,KAAKA,UAAL,KAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAA9C;AACD;;;eAED,uBAAc;AACZ,eAAKA,UAAL,GAAkB,KAAKA,UAAL,KAAoB,CAApB,GAAwB,CAAxB,GAA4B,CAA9C;AACD;;;eAED,gBAAO;AACL,cAAI,KAAKmR,WAAL,CAAiB/Q,MAAjB,GAA0B,CAA9B,EAAiC;AAC/B,iBAAKhB,IAAL,GAAY,KAAK+R,WAAL,CAAiBqF,GAAjB,EAAZ;AACD;AACF;;;eAED,gBAAO;AACL,cAAMC,QAAQ,GAAG,KAAKrX,IAAL,CAAU+K,WAA3B;AACA,eAAKqI,WAAL,CAAiB,CAAC,CAAD,EAAI,CAAJ,CAAjB;;AACA,cAAIiE,QAAQ,KAAK,CAAjB,EAAoB;AAClB,iBAAKC,IAAL;AACD;AACF;;;eAED,iBAAQ;AACN,eAAKvF,WAAL,GAAmB,EAAnB;AACA,eAAK/R,IAAL,CAAUkR,UAAV;AACA,eAAKtQ,UAAL,GAAkB,CAAlB;AACA,eAAKsM,cAAL,GAAsB,EAAtB;AACA,eAAKlN,IAAL,CAAUuF,gBAAV,GAA6B,CAA7B;AACA,eAAKgS,WAAL;AACA,eAAKC,eAAL;AACD;;;eAED,gBAAO;AACL,eAAKpG,KAAL;AACA,eAAKnR,KAAL,CAAW+Q,QAAX,CAAoB,CAAC,GAAD,CAApB;AACD;;;eAED,oCAAwB;AACtB,iBAAO,IAAP;AACD;;;eAED,wBAAe1Q,UAAf,EAAiC;AAC/B,iBAAO,IAAP;AACD;;;eAED,wBAAeA,UAAf,EAAiC;AAC/B,iBAAO,KAAP;AACD;;;eAED,0BAAiBA,UAAjB,EAAmC;AACjC,iBAAO,KAAP;AACD;;;eAED,sBAAaA,UAAb,EAA+B;AAC7B,iBAAO,EAAP;AACD;;;eAED,sBAAaA,UAAb,EAA+B;AAC7B,iBAAO,EAAP;AACD;;;eAED,4BAAmBA,UAAnB,EAAqC;AACnC,iBAAO,EAAP;AACD;;;eAED,4BAAmBD,MAAnB,EAAiC;AAC/B,iBAAOA,MAAM,CAACnC,IAAP,GAAc,gFAAd,GAAoCmC,MAAM,CAACE,KAAlD;AACD;;;eAED,yBAAa;AACX,iBAAO,EAAP;AACD;;;eAED,6BAAiB;AAAA;;AACf,cAAM4P,UAAU,GAAG,KAAKhQ,iBAAL,CAAuB4S,iBAAvB,CAAyC,KAAK9B,UAAL,CAAgB6E,QAAzD,CAAnB;AACA,cAAMxU,OAAO,GAAuB,EAApC;AACA6O,oBAAU,CAAC1O,OAAX,CAAmB,UAAA6O,IAAI,EAAI;AACzB,mBAAI,CAACmH,eAAL,CAAqBnH,IAArB,EAA2B,GAA3B,EAAgChP,OAAhC;;AACA,mBAAI,CAACmW,eAAL,CAAqBnH,IAArB,EAA2B,GAA3B,EAAgChP,OAAhC;AACD,WAHD;AAIA,iBAAOA,OAAP;AACD;;;eAED,0BAAc;AACZ,iBAAO,KAAKnB,iBAAL,CAAuB4S,iBAAvB,CAAyC,KAAK9B,UAAL,CAAgB6E,QAAzD,CAAP;AACD;;;eAED,6BAAiB;AACf,cAAI7P,OAAO,GAAG,KAAKjG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC0E,GAAN;AAAA,WAA1B,CAAd;AACAD,iBAAO,GAAGA,OAAO,CAACa,IAAR,CAAa,UAAC4Q,EAAD,EAAKC,EAAL;AAAA,mBAAYD,EAAE,CAACtC,WAAH,GAAiBuC,EAAE,CAACvC,WAApB,GAAkC,CAAC,CAAnC,GAAuC,CAAnD;AAAA,WAAb,EACPjR,KADO,CACD,CADC,EACE,CADF,EACKd,GADL,CACS,UAAA7B,CAAC;AAAA,mBAAIA,CAAC,CAAC2E,KAAF,EAAJ;AAAA,WADV,CAAV;AAEA,cAAMC,MAAM,GAAG,KAAKpG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAACyE,OAAO,CAAC9C,IAAR,CAAa,UAAAkD,CAAC;AAAA,qBAAIA,CAAC,CAACvI,EAAF,KAAS0D,CAAC,CAAC1D,EAAf;AAAA,aAAd,CAAL;AAAA,WAA1B,EACZuF,GADY,CACR,UAAA7B,CAAC,EAAI;AACR,gBAAM8E,CAAC,GAAG9E,CAAC,CAAC2E,KAAF,EAAV;AACAG,aAAC,CAACJ,GAAF,GAAQ,KAAR;AACA,mBAAOI,CAAP;AACD,WALY,CAAf;AAMA,8CAAWL,OAAX,sBAAuBG,MAAvB;AACD;;;eAEO,2BAAkB;AACxB,eAAKwR,cAAL,GAAsB,IAAI,4EAAJ,EAAtB;AACA,eAAKA,cAAL,CAAoBxK,CAApB,GAAwB,IAAIgD,IAAJ,GAAWyH,WAAX,EAAxB;AACA,eAAKD,cAAL,CAAoBE,CAApB,GAAwB,KAAKhC,QAA7B;AACD;;;eAEO,4BAAmB;AAAA;;AACzB,eAAK8B,cAAL,CAAoB7U,CAApB,GAAwB,IAAIqN,IAAJ,GAAWyH,WAAX,EAAxB;AACA,eAAKD,cAAL,CAAoBvR,CAApB,GAAwB,KAAKrG,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAAC0E,GAAN;AAAA,WAA1B,EAAqC7C,GAArC,CAAyC,UAAA7B,CAAC;AAAA,mBAAI,OAAI,CAACuW,kBAAL,CAAwBvW,CAAxB,CAAJ;AAAA,WAA1C,CAAxB;AACA,eAAKoW,cAAL,CAAoB/G,CAApB,GAAwB,KAAK7Q,IAAL,CAAUsB,OAAV,CAAkBC,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAI,CAACA,CAAC,CAAC0E,GAAP;AAAA,WAA1B,EAAsC7C,GAAtC,CAA0C,UAAA7B,CAAC;AAAA,mBAAI,OAAI,CAACuW,kBAAL,CAAwBvW,CAAxB,CAAJ;AAAA,WAA3C,CAAxB;AACA,eAAKoW,cAAL,CAAoBpL,CAApB,GAAwB,KAAKxM,IAAL,CAAUqM,KAAlC;AACA,eAAKuL,cAAL,CAAoBtR,CAApB,GAAwB,KAAK0R,aAAL,EAAxB;AACA,eAAK7X,iBAAL,CAAuB8X,cAAvB,CAAsC,KAAKL,cAA3C;AACD;;;eAEO,yBAAgBtH,IAAhB,EAAsCrJ,KAAtC,EAAwD3F,OAAxD,EAAqF;AAC3FgP,cAAI,CAACrJ,KAAD,CAAJ,CAAYxF,OAAZ,CAAoB,UAAAD,CAAC,EAAI;AACvB,gBAAMtD,IAAI,GAAGsD,CAAC,CAACgP,KAAF,CAAQ,gFAAR,EAA6B,CAA7B,CAAb;AACA,gBAAInQ,MAAM,GAAGiB,OAAO,CAAC0E,IAAR,CAAa,UAAAkS,EAAE;AAAA,qBAAIA,EAAE,CAACtO,CAAH,KAAS1L,IAAb;AAAA,aAAf,CAAb;;AACA,gBAAI,CAACmC,MAAL,EAAa;AACXA,oBAAM,GAAG;AAACuJ,iBAAC,EAAE1L,IAAJ;AAAUmI,iBAAC,EAAE,CAAb;AAAgBwK,iBAAC,EAAE;AAAnB,eAAT;AACAvP,qBAAO,CAACwD,IAAR,CAAazE,MAAb;AACD;;AACDA,kBAAM,CAAC4G,KAAD,CAAN;AACD,WARD;AASD;;;eAEO,oCAAwB;AAC9B,cAAM3F,OAAO,GAAa,EAA1B;AACA,eAAKtB,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM,EAAI;AAClC,gBAAIA,MAAM,CAACnC,IAAP,CAAY8C,MAAZ,KAAuB,CAA3B,EAA8B;AAC5BM,qBAAO,CAACwD,IAAR,CAAazE,MAAb;AACD;AACF,WAJD;AAKA,eAAKL,IAAL,CAAUsB,OAAV,GAAoBA,OAApB;AACA,iBAAOA,OAAO,CAACN,MAAR,IAAkB,KAAK+U,sBAAvB,KACJ,CAAC,KAAKC,sBAAN,IAAgC1U,OAAO,CAACN,MAAR,IAAkB,KAAKgV,sBADnD,CAAP;AAED;;;eAEO,6BAAoB;AAC1B,eAAKjE,WAAL,CAAiBjN,IAAjB,CAAsB,KAAK9E,IAAL,CAAUmG,KAAV,EAAtB;AACD;;;eAlPD,gCAA8B7F,UAA9B,EAAgD;AAC9C,iBAAOA,UAAU,KAAK,EAAf,GAAoB,EAApB,GAAyBA,UAAU,GAAG,CAA7C;AACD;;;;;;;;;;;YA1BmBuV;;;;;;;;;;;;;;;;;ACjBtB;AAAA;;;AAAA;AAAA;AAAA;;QAAasC,K;;;AAGX,qBAAmB5X,KAAnB,EAAyC0B,KAAzC,EAA+DmW,KAA/D,EAA8E;AAAA;;AAA3D,aAAA7X,KAAA,GAAAA,KAAA;AAAsB,aAAA0B,KAAA,GAAAA,KAAA;AAAsB,aAAAmW,KAAA,GAAAA,KAAA;AAC7D,aAAKnR,KAAL,GAAa,KAAK1G,KAAL,KAAe,EAAf,GAAoB,GAApB,GAA2B,KAAKA,KAAL,GAAa,EAArD;AACD;;;;eAED,iBAAK;AACH,iBAAO,IAAI4X,KAAJ,CAAU,KAAK5X,KAAf,EAAsB,KAAK0B,KAA3B,EAAkC,KAAKmW,KAAvC,CAAP;AACD;;;;;;;;;;;;;;;;;;;;;ACTH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGA,QAAMC,eAAe,GAAG,qBAAxB;AACA,QAAMC,UAAU,GAAG,SAAnB;AACA,QAAMC,MAAM,GAAG,CAAC,aAAD,EAAgB,kBAAhB,EAAoC,YAApC,EAAkD,UAAlD,CAAf;;QAGaC,uB;;;AAIX,yCAAc;AAAA;;AAFd,aAAA3Y,QAAA,GAAW,IAAI,sFAAJ,EAAX;AAGE,YAAM5B,IAAI,GAAGwa,YAAY,CAACC,OAAb,CAAqBL,eAArB,CAAb;;AACA,YAAIpa,IAAJ,EAAU;AACR,eAAK4B,QAAL,GAAgB8Y,IAAI,CAACC,KAAL,CAAW3a,IAAX,CAAhB;AACD;;AACD,aAAK4a,QAAL;AACD;;;;eAED,4BAAmB;AACjB,eAAKhZ,QAAL,CAAckV,KAAd,GAAsB,CAAC,KAAKlV,QAAL,CAAckV,KAAd,GAAsB,CAAvB,IAA4BwD,MAAM,CAACvX,MAAzD;AACA,eAAK6X,QAAL;AACA,eAAKC,YAAL;AACD;;;eAED,yBAAgB;AACd,eAAKjZ,QAAL,CAAcmV,OAAd,GAAwB,CAAC,KAAKnV,QAAL,CAAcmV,OAAd,GAAwB,CAAzB,IAA8B,CAAtD;AACA,eAAK8D,YAAL;AACD;;;eAED,4BAAgB;AACd,cAAM7a,IAAI,GAAGwa,YAAY,CAACC,OAAb,CAAqBJ,UAArB,CAAb;;AACA,cAAIra,IAAJ,EAAU;AACR,mBAAO0a,IAAI,CAACC,KAAL,CAAW3a,IAAX,CAAP;AACD;;AACD,iBAAO,EAAP;AACD;;;eAED,qBAAYC,IAAZ,EAA0B;AACxB,cAAMoD,OAAO,GAAG,CAACpD,IAAD,4BAAU,KAAK4V,gBAAL,EAAV,GAAmCvS,MAAnC,CAA0C,UAACwX,CAAD,EAAI7W,CAAJ,EAAOwE,CAAP;AAAA,mBAAaA,CAAC,CAACX,OAAF,CAAUgT,CAAV,MAAiB7W,CAA9B;AAAA,WAA1C,CAAhB;AACAuW,sBAAY,CAACO,OAAb,CAAqBV,UAArB,EAAiCK,IAAI,CAACM,SAAL,CAAe3X,OAAf,CAAjC;AACD;;;eAEO,oBAAW;AACjBiX,gBAAM,CAAC9W,OAAP,CAAe,UAAAsT,KAAK,EAAI;AACtBpW,oBAAQ,CAACua,IAAT,CAAcC,SAAd,GAA0Bxa,QAAQ,CAACua,IAAT,CAAcC,SAAd,CAAwBC,OAAxB,CAAgCrE,KAAhC,EAAuC,EAAvC,CAA1B;AACD,WAFD;AAGApW,kBAAQ,CAACua,IAAT,CAAcG,SAAd,CAAwBC,GAAxB,CAA4Bf,MAAM,CAAC,KAAK1Y,QAAL,CAAckV,KAAf,CAAlC;AACD;;;eAEO,wBAAe;AACrB0D,sBAAY,CAACO,OAAb,CAAqBX,eAArB,EAAsCM,IAAI,CAACM,SAAL,CAAe,KAAKpZ,QAApB,CAAtC;AACD;;;;;;;uBA7CU2Y,uB;AAAuB,K;;;aAAvBA,uB;AAAuB,eAAvBA,uBAAuB,K;AAAA,kBADX;;;;;sEACZA,uB,EAAuB;cADnC,wDACmC;eADxB;AAACe,oBAAU,EAAE;AAAb,S;AACwB,Q;;;;;;;;;;;;;;;;;;;;ACRpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcaC,a;;;AAEX,6BAAoB7G,MAApB,EAAuC;AAAA;;AAAnB,aAAAA,MAAA,GAAAA,MAAA;AACnB;;;;eAED,sBAA2D;AAAA,cAAhD4B,KAAgD,uEAAxC,EAAwC;AAAA,cAApC1C,OAAoC,uEAA1B,EAA0B;AAAA,cAAtBvQ,OAAsB,uEAAF,EAAE;AACzD,iBAAO,KAAKqR,MAAL,CAAY8G,IAAZ,CAAiB,mFAAjB,EAAkC;AACvCC,sBAAU,EAAE,gBAD2B;AAEvCzb,gBAAI,EAAE;AAACsW,mBAAK,EAALA,KAAD;AAAQ1C,qBAAO,EAAPA,OAAR;AAAiBvQ,qBAAO,EAAPA;AAAjB;AAFiC,WAAlC,CAAP;AAID;;;eAED,kCAAyB6O,UAAzB,EAAyD;AACvD,iBAAO,KAAKwC,MAAL,CAAY8G,IAAZ,CAAiB,iIAAjB,EAAgD;AACrDxb,gBAAI,EAAE;AAACkS,wBAAU,EAAVA;AAAD;AAD+C,WAAhD,CAAP;AAGD;;;eAED,yBAAgBA,UAAhB,EAA8C;AAC5C,iBAAO,KAAKwC,MAAL,CAAY8G,IAAZ,CAAiB,wHAAjB,EAA6C;AAClDxb,gBAAI,EAAE;AAACkS,wBAAU,EAAVA;AAAD,aAD4C;AAElDwJ,oBAAQ,EAAE,OAFwC;AAGlDC,qBAAS,EAAE,OAHuC;AAIlDC,kBAAM,EAAE,MAJ0C;AAKlDpL,iBAAK,EAAE;AAL2C,WAA7C,CAAP;AAOD;;;eAED,gCAAuB0B,UAAvB,EAAyD;AACvD,iBAAO,KAAKwC,MAAL,CAAY8G,IAAZ,CAAiB,+IAAjB,EAAoD;AACzDxb,gBAAI,EAAE;AAACkS,wBAAU,EAAVA;AAAD;AADmD,WAApD,CAAP;AAGD;;;eAED,2BAAwC;AAAA,cAAxBoE,KAAwB,uEAAhB,EAAgB;AAAA,cAAZ1C,OAAY,uEAAF,EAAE;AACtC,iBAAO,KAAKc,MAAL,CAAY8G,IAAZ,CAAiB,mFAAjB,EAAkC;AACvCC,sBAAU,EAAE,cAD2B;AAEvCzb,gBAAI,EAAE;AAACsW,mBAAK,EAALA,KAAD;AAAQ1C,qBAAO,EAAPA,OAAR;AAAiBvQ,qBAAO,EAAE;AAA1B;AAFiC,WAAlC,CAAP;AAID;;;eAED,6BAA0C;AAAA,cAAxBiT,KAAwB,uEAAhB,EAAgB;AAAA,cAAZ1C,OAAY,uEAAF,EAAE;AACxC,iBAAO,KAAKc,MAAL,CAAY8G,IAAZ,CAAiB,0GAAjB,EAAyC;AAC9CC,sBAAU,EAAE,gBADkC;AAE9Czb,gBAAI,EAAE;AAACsW,mBAAK,EAALA,KAAD;AAAQ1C,qBAAO,EAAPA,OAAR;AAAiBvQ,qBAAO,EAAE;AAA1B;AAFwC,WAAzC,CAAP;AAID;;;eAED,wBAAewY,YAAf,EAAuCC,mBAAvC,EAAsEtI,eAAtE,EAAiG;AAC/F,iBAAO,KAAKkB,MAAL,CAAY8G,IAAZ,CAAiB,8GAAjB,EAA4C;AACjDxb,gBAAI,EAAE;AAACgJ,mBAAK,EAAE6S,YAAR;AAAsB/J,qBAAO,EAAEgK,mBAA/B;AAAoD/J,uBAAS,EAAEyB;AAA/D;AAD2C,WAA5C,CAAP;AAGD;;;;;;;uBApDU+H,a,EAAa,0H;AAAA,K;;;aAAbA,a;AAAa,eAAbA,aAAa,K;AAAA,kBADD;;;;;sEACZA,a,EAAa;cADzB,wDACyB;eADd;AAACD,oBAAU,EAAE;AAAb,S;AACc,Q;;;;;;;;;;;;;;;;;;;;;;ACd1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAIaS,W;;;AADb;AAAA;;AAEE,aAAA1Y,OAAA,GAAoB,EAApB;AAGA,aAAAiE,gBAAA,GAAmB,CAAnB;AAEA,aAAAiR,YAAA,GAAe,IAAf;AACA,aAAAhN,KAAA,GAAkB,EAAlB;AA0HD;;;;eAxHC,8BAAqB;AACnB,eAAKgN,YAAL,GAAoB,CAAC,KAAKA,YAA1B;AACD;;;eAED,0BAAc;AACZ,iBAAO,KAAKzL,WAAL,KAAqB,CAA5B;AACD;;;eAED,2BAAe;AACb,iBAAO,KAAKzJ,OAAL,CAAa,KAAK2Y,iBAAlB,CAAP;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAK3Y,OAAL,CAAaC,MAAb,CAAoB,UAAAC,CAAC;AAAA,mBAAI,CAACA,CAAC,CAACiB,UAAF,EAAL;AAAA,WAArB,CAAP;AACD;;;eAED,yBAAa;AACX,cAAIiB,KAAK,GAAG,KAAKuW,iBAAL,GAAyB,CAAzB,KAA+B,KAAK3Y,OAAL,CAAaN,MAA5C,GAAqD,CAArD,GAAyD,KAAKiZ,iBAAL,GAAyB,CAA9F;;AACA,iBAAO,KAAK3Y,OAAL,CAAaoC,KAAb,EAAoBjB,UAApB,EAAP,EAAyC;AACvCiB,iBAAK,GAAGA,KAAK,GAAG,CAAR,KAAc,KAAKpC,OAAL,CAAaN,MAA3B,GAAoC,CAApC,GAAwC0C,KAAK,GAAG,CAAxD;AACD;;AACD,iBAAO,KAAKpC,OAAL,CAAaoC,KAAb,CAAP;AACD;;;eAED,6BAAiB;AACf,cAAIA,KAAK,GAAG,KAAKuW,iBAAL,KAA2B,CAA3B,GAA+B,KAAK3Y,OAAL,CAAaN,MAAb,GAAsB,CAArD,GAAyD,KAAKiZ,iBAAL,GAAyB,CAA9F;;AACA,iBAAO,KAAK3Y,OAAL,CAAaoC,KAAb,EAAoBjB,UAApB,EAAP,EAAyC;AACvCiB,iBAAK,GAAGA,KAAK,KAAK,CAAV,GAAc,KAAKpC,OAAL,CAAaN,MAAb,GAAsB,CAApC,GAAwC0C,KAAK,GAAG,CAAxD;AACD;;AACD,iBAAO,KAAKpC,OAAL,CAAaoC,KAAb,CAAP;AACD;;;eAED,sBAAU;AACR,cAAI,KAAKqJ,qBAAL,EAAJ,EAAkC;AAChC,iBAAKmN,SAAL;AACD;;AACD,eAAKD,iBAAL,GAAyB,CAAC,KAAKA,iBAAL,GAAyB,CAA1B,IAA+B,KAAKxD,kBAAL,EAAxD;AACA,eAAK1L,WAAL,GAAmB,CAAnB;AACD;;;eAED,8BAAkB;AAChB,iBAAO,KAAKzJ,OAAL,CAAaN,MAApB;AACD;;;eAED,6BAAiB;AACf,iBAAO,KAAKM,OAAL,CAAa,CAAb,CAAP;AACD;;;eAED,0BAAiBjB,MAAjB,EAA+B;AAC7B,iBAAOA,MAAM,CAACvC,EAAP,KAAc,KAAKqc,iBAAL,GAAyBrc,EAA9C;AACD;;;eAED,oCAAwB;AACtB,iBAAO,KAAKgR,gBAAL,CAAsB,KAAKnM,eAAL,EAAtB,CAAP;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAKrB,OAAL,CAAa,KAAKmV,kBAAL,KAA4B,CAAzC,CAAP;AACD;;;eAED,yBAAgBpW,MAAhB,EAA8B;AAC5B,iBAAOA,MAAM,CAACvC,EAAP,KAAc,KAAKsc,gBAAL,GAAwBtc,EAA7C;AACD;;;eAED,iCAAqB;AACnB,iBAAO,KAAKsO,eAAL,CAAqB,KAAKzJ,eAAL,EAArB,CAAP;AACD;;;eAED,6BAAiB;AACf,cAAIc,GAAG,GAAG,KAAKnC,OAAL,CAAa,CAAb,EAAgBf,KAA1B;AACA,cAAMiC,aAAa,GAAG,KAAKuL,gBAAL,EAAtB;AACAvL,uBAAa,CAACf,OAAd,CAAsB,UAAAD,CAAC,EAAI;AACzBiC,eAAG,GAAGjC,CAAC,CAACjB,KAAF,GAAUkD,GAAV,GAAgBjC,CAAC,CAACjB,KAAlB,GAA0BkD,GAAhC;AACD,WAFD;AAGA,iBAAOjB,aAAa,CAACjB,MAAd,CAAqB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,CAACjB,KAAF,KAAYkD,GAAhB;AAAA,WAAtB,CAAP;AACD;;;eAED,yBAAgB4W,SAAhB,EAAiC;AAC/B,cAAMC,IAAI,GAAG,KAAK5X,iBAAL,EAAb;AACA,iBAAO2X,SAAS,CAAC9Z,KAAV,MAAsB+Z,IAAI,IAAIA,IAAI,CAACtZ,MAAd,GAAwBsZ,IAAI,CAAC,CAAD,CAAJ,CAAQ/Z,KAAhC,GAAwC,CAA7D,CAAP;AACD;;;eAED,0BAAiB8Z,SAAjB,EAAkC;AAChC,cAAI1U,GAAG,GAAG,KAAKrE,OAAL,CAAa,CAAb,EAAgBf,KAA1B;AACA,eAAKe,OAAL,CAAaG,OAAb,CAAqB,UAAApB,MAAM,EAAI;AAC7BsF,eAAG,GAAGtF,MAAM,CAACE,KAAP,GAAeoF,GAAf,GAAqBtF,MAAM,CAACE,KAA5B,GAAoCoF,GAA1C;AACD,WAFD;AAGA,iBAAO0U,SAAS,CAAC9Z,KAAV,KAAoBoF,GAA3B;AACD;;;eAED,qBAAS;AACP,eAAK0G,KAAL;AACD;;;eAED,sBAAU;AACR,eAAK/K,OAAL,CAAaG,OAAb,CAAqB,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAAC+Q,KAAP,EAAJ;AAAA,WAA3B;AACA,eAAK6I,iBAAL,GAAyB,CAAzB;AACA,eAAKlP,WAAL,GAAmB,CAAnB;AACA,eAAKsB,KAAL,GAAa,CAAb;AACD;;;eAED,yBAAa;AACX,eAAK/K,OAAL,CAAawD,IAAb,CAAkB,KAAKxD,OAAL,CAAaiZ,KAAb,EAAlB;AACD;;;eAED,iBAAK;AACH,cAAMva,IAAI,GAAG,IAAIga,WAAJ,EAAb;AACAha,cAAI,CAACia,iBAAL,GAAyB,KAAKA,iBAA9B;AACAja,cAAI,CAAC+K,WAAL,GAAmB,KAAKA,WAAxB;AACA/K,cAAI,CAACuF,gBAAL,GAAwB,KAAKA,gBAA7B;AACAvF,cAAI,CAACqM,KAAL,GAAa,KAAKA,KAAlB;AACArM,cAAI,CAACwJ,KAAL,GAAa,KAAKA,KAAL,CAAWnG,GAAX,CAAe,UAAAuG,CAAC;AAAA,mBAAIA,CAAJ;AAAA,WAAhB,CAAb;AACA,cAAMtI,OAAO,GAAa,EAA1B;AACA,eAAKA,OAAL,CAAaG,OAAb,CAAqB,UAAApB,MAAM,EAAI;AAC7BiB,mBAAO,CAACwD,IAAR,CAAazE,MAAM,CAAC8F,KAAP,EAAb;AACD,WAFD;AAGAnG,cAAI,CAACsB,OAAL,GAAeA,OAAf;AACA,iBAAOtB,IAAP;AACD;;;;;;;uBA/HUga,W;AAAW,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBADC;;;;;sEACZA,W,EAAW;cADvB,wDACuB;eADZ;AAACT,oBAAU,EAAE;AAAb,S;AACY,Q;;;;;;;;;;;;;;;;;;ACJxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaiB,Y;;;;;;;;;eAIX,cAAK;AACH,eAAKC,IAAL,CAAU,WAAV;AACD;;;eAEO,cAAKC,aAAL,EAA4B;AAClC,eAAKzb,YAAL,CAAkB0b,GAAlB,2BAAyCD,aAAzC;AACA,eAAKzb,YAAL,CAAkBwb,IAAlB;AACD;;;;;;;uBAXUD,Y;AAAY,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBADA;;;;;sEACZA,Y,EAAY;cADxB,wDACwB;eADb;AAACjB,oBAAU,EAAE;AAAb,S;AACa,Q;;;;;;;;;;;;;;;;;;ACHzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAKO,QAAMqB,mBAAmB,GAAG,MAA5B;AACP,QAAMC,sBAAsB,GAAG,YAA/B;;QAGaC,iB;;;AAEX,iCAA6BC,cAA7B,EAA6D;AAAA;;AAAhC,aAAAA,cAAA,GAAAA,cAAA;AAC5B;;;;eAED,wBAAe5K,UAAf,EAA2C;AACzC,cAAMG,IAAI,GAAG,KAAKyK,cAAL,CAAoBC,SAApB,CAA8BH,sBAA9B,CAAb;;AACA,cAAIvK,IAAJ,EAAU;AACRA,gBAAI,CAACxL,IAAL,CAAUqL,UAAV;AACA,iBAAK4K,cAAL,CAAoBE,SAApB,CAA8BJ,sBAA9B,EAAsDvK,IAAtD;AACD,WAHD,MAGO;AACL,iBAAKyK,cAAL,CAAoBE,SAApB,CAA8BJ,sBAA9B,EAAsD,CAAC1K,UAAD,CAAtD;AACD;AACF;;;eAED,2BAAkB2F,QAAlB,EAAmC;AACjC,cAAM3F,UAAU,GAAG,KAAK4K,cAAL,CAAoBC,SAApB,CAA8BH,sBAA9B,CAAnB;AACA,iBAAO/E,QAAQ,GAAG3F,UAAU,CAAC5O,MAAX,CAAkB,UAAAW,CAAC;AAAA,mBAAIA,CAAC,CAAC4V,CAAF,KAAQhC,QAAZ;AAAA,WAAnB,CAAH,GAA8C3F,UAA7D;AACD;;;eAED,6BAAoB+K,UAApB,EAAwCpF,QAAxC,EAAyD;AACvD,cAAMqF,UAAU,GAAG,KAAKJ,cAAL,CAAoBC,SAApB,CAA8BH,sBAA9B,EAAsDtZ,MAAtD,CAA6D,UAAAW,CAAC;AAAA,mBAC/EA,CAAC,CAAC2O,CAAF,CAAI1N,IAAJ,CAAS,UAAA3B,CAAC;AAAA,qBAAIA,CAAC,CAACuE,OAAF,CAAUmV,UAAV,MAA0B,CAAC,CAA/B;AAAA,aAAV,KACAhZ,CAAC,CAACmE,CAAF,CAAIlD,IAAJ,CAAS,UAAA3B,CAAC;AAAA,qBAAIA,CAAC,CAACuE,OAAF,CAAUmV,UAAV,MAA0B,CAAC,CAA/B;AAAA,aAAV,CAF+E;AAAA,WAA9D,CAAnB;AAGA,iBAAOpF,QAAQ,GAAGqF,UAAU,CAAC5Z,MAAX,CAAkB,UAAAW,CAAC;AAAA,mBAAIA,CAAC,CAAC4V,CAAF,KAAQhC,QAAZ;AAAA,WAAnB,CAAH,GAA8CqF,UAA7D;AACD;;;eAED,iCAAqB;AACnB,cAAM7K,IAAI,GAAG,KAAKyK,cAAL,CAAoBC,SAApB,CAA8BH,sBAA9B,CAAb;AACA,cAAMO,KAAK,GAAyB,EAApC;AACA9K,cAAI,CAAC7O,OAAL,CAAa,UAAA2L,CAAC,EAAI;AAChB,gBAAIiO,IAAI,GAAGD,KAAK,CAACpV,IAAN,CAAW,UAAA8R,CAAC;AAAA,qBAAIA,CAAC,CAAC5Z,IAAF,KAAWkP,CAAC,CAAC0K,CAAjB;AAAA,aAAZ,CAAX;;AACA,gBAAI,CAACuD,IAAL,EAAW;AACTA,kBAAI,GAAG;AAACnd,oBAAI,EAAEkP,CAAC,CAAC0K,CAAT;AAAYtF,qBAAK,EAAE;AAAnB,eAAP;AACA4I,mBAAK,CAACtW,IAAN,CAAWuW,IAAX;AACD;;AACDA,gBAAI,CAAC7I,KAAL;AACD,WAPD;AAQA,iBAAO4I,KAAP;AACD;;;eAED,2BAAkB;AAChBE,iBAAO,CAACC,GAAR,CAAY5C,IAAI,CAACM,SAAL,CAAe,KAAK8B,cAAL,CAAoBC,SAApB,CAA8BH,sBAA9B,CAAf,CAAZ;AACD;;;;;;;uBA3CUC,iB,EAAiB,gI;AAAA,K;;;aAAjBA,iB;AAAiB,eAAjBA,iBAAiB,K;AAAA,kBADL;;;;;sEACZA,iB,EAAiB;cAD7B,wDAC6B;eADlB;AAACvB,oBAAU,EAAE;AAAb,S;AACkB,Q;;;;;;;;;;;;;;;;;;;;;;ACT9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAGaiC,c;;;AAIX,gCAAc;AAAA;;AACZ,aAAKC,OAAL,GAAehD,YAAf;AACD;;;;eAED,iBAAQiD,GAAR,EAAmB;AACjB,iBAAO,CAAC,CAAC,KAAKhD,OAAL,CAAagD,GAAb,CAAT;AACD;;;eAED,iBAAQA,GAAR,EAAmB;AACjB,iBAAO,KAAKD,OAAL,CAAa/C,OAAb,CAAqBgD,GAArB,CAAP;AACD;;;eAED,mBAAUA,GAAV,EAAqB;AACnB,iBAAO/C,IAAI,CAACC,KAAL,CAAW,KAAKF,OAAL,CAAagD,GAAb,CAAX,CAAP;AACD;;;eAED,iBAAQA,GAAR,EAAqB1W,KAArB,EAAoC;AAClC,eAAKyW,OAAL,CAAazC,OAAb,CAAqB0C,GAArB,EAA0B1W,KAA1B;AACD;;;eAED,mBAAU0W,GAAV,EAAuB1W,KAAvB,EAAmC;AACjC,eAAKgU,OAAL,CAAa0C,GAAb,EAAkB/C,IAAI,CAACM,SAAL,CAAejU,KAAf,CAAlB;AACD;;;eAED,oBAAW0W,GAAX,EAAwB;AACtB,eAAKD,OAAL,CAAaE,UAAb,CAAwBD,GAAxB;AACD;;;;;;;uBA9BUF,c;AAAc,K;;;aAAdA,c;AAAc,eAAdA,cAAc,K;AAAA,kBADF;;;;;sEACZA,c,EAAc;cAD1B,wDAC0B;eADf;AAACjC,oBAAU,EAAE;AAAb,S;AACe,Q;;;;;;;;;;;;;;;;;;;;ACH3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAkBA,QAAMqC,UAAU,GAAG,CAAC,oGAAD,EAAuB,oGAAvB,EAA6C,+GAA7C,EAAwE,kIAAxE,EACjB,mFADiB,EACA,6GADA,EACyB,yFADzB,EAC4C,oGAD5C,EACkE,2GADlE,EAEjB,yHAFiB,EAEW,gJAFX,EAE8C,8EAF9C,CAAnB;;QAWaC,Y;;;;;YAAAA;;;;yBAAAA,Y;AAAY,O;AAAA,gBANd,CAAC,4DAAD,EAAe,+DAAf,EAA+B,6DAA/B,CAMc,EAJb,4DAIa,EAJC,0DAID,EAJc,+DAId;;;;0HAAZA,Y,EAAY;AAAA,uBAXL,oGAWK,EAXiB,oGAWjB,EAXuC,+GAWvC,EAXkE,kIAWlE,EAVvB,mFAUuB,EAVN,6GAUM,EAVmB,yFAUnB,EAVsC,oGAUtC,EAV4D,2GAU5D,EATvB,yHASuB,EATK,gJASL,EATwC,8EASxC;AATqD,kBAGlE,4DAHkE,EAGpD,+DAHoD,EAGpC,6DAHoC,CASrD;AAN6B,kBAE1C,4DAF0C,EAE5B,0DAF4B,EAEf,+DAFe,EALlC,oGAKkC,EALZ,oGAKY,EALU,+GAKV,EALqC,kIAKrC,EAJpD,mFAIoD,EAJnC,6GAImC,EAJV,yFAIU,EAJS,oGAIT,EAJ+B,2GAI/B,EAHpD,yHAGoD,EAHxB,gJAGwB,EAHW,8EAGX;AAM7B,O;AATqD,K;;;;;sEASjEA,Y,EAAY;cAPxB,sDAOwB;eAPf;AACRnc,iBAAO,EAAE,CAAC,4DAAD,EAAe,+DAAf,EAA+B,6DAA/B,CADD;AAERC,sBAAY,EAAEic,UAFN;AAGR/d,iBAAO,GAAG,4DAAH,EAAiB,0DAAjB,EAA8B,+DAA9B,SAAiD+d,UAAjD,CAHC;AAIRE,yBAAe,EAAE,CAAC,mFAAD,EAAkB,+GAAlB,EAA6C,kIAA7C,EACf,yHADe,EACa,gJADb;AAJT,S;AAOe,Q;;;;;;;;;;;;;;;;;;AC7BzB;AAAA;;;AAAA;AAAA;AAAA;;QAAaC,W;;;AAAb;AAAA;;AAEE,aAAAC,UAAA,GAAa,GAAb;AACA,aAAAC,KAAA,GAAQ,CAAR;AACA,aAAAC,QAAA,GAAW,CAAX;AAyCD;;;;eAvCC,yBAAa;AACX,iBAAO,KAAKD,KAAL,KAAe,CAAtB;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKA,KAAL,KAAe,CAAtB;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAKC,QAAL,KAAkB,CAAzB;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAKA,QAAL,KAAkB,CAAzB;AACD;;;eAED,4BAAgB;AACd,iBAAO,KAAKA,QAAL,KAAkB,CAAzB;AACD;;;eAED,2BAAe;AACb,iBAAO,KAAKA,QAAL,KAAkB,CAAzB;AACD;;;eAED,kBAASD,KAAT,EAAwB;AACtB,eAAKA,KAAL,GAAaA,KAAb;AACD;;;eAED,qBAAYC,QAAZ,EAA8B;AAC5B,eAAKA,QAAL,GAAgBA,QAAhB;AACD;;;eAED,uBAAcF,UAAd,EAAkC;AAChC,eAAKA,UAAL,GAAkBA,UAAlB;AACD;;;;;;;;;;;;;;;;;;;;;AC5CH;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACEE;;AAKE;;AAAI;;AAAK;;AACT;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAnc,QAAA,eAAuB,GAAvB,CAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,eAAuB,GAAvB,CAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,eAAuB,GAAvB,CAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,eAAuB,GAAvB,CAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,eAAuB,GAAvB,CAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,eAAuB,GAAvB,CAAT;AAAoC,SAApC;;AAAsC;;AAC9C;;AACA;;AAEA;;AAAI;;AAAQ;;AACZ;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,UAAkB,CAAlB,CAAT;AAA6B,SAA7B;;AAA+B;;AACvC;;AACA;;AAEA;;AAAI;;AAAS;;AACb;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,aAAqB,CAArB,CAAT;AAAgC,SAAhC;;AAAkC;;AAC1C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,aAAqB,CAArB,CAAT;AAAgC,SAAhC;;AAAkC;;AAC1C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,aAAqB,CAArB,CAAT;AAAgC,SAAhC;;AAAkC;;AAC1C;;AACA;;AACQ;AAAA;;AAAA;;AAAA,iBAAS,QAAAA,QAAA,aAAqB,CAArB,CAAT;AAAgC,SAAhC;;AAAkC;;AAC1C;;AACF;;;;;;AAnDmC,iFAAe,YAAf,EAAe,kBAAf,EAAe,OAAf,EAAe,uPAAf;;AAMQ;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMY;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAMA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;;;;;AAMrD;;;;;;AAAkB;;;;;;AAEhB;;AAEE;;AACF;;;;;;;;;AAHK;;AAEe;;AAAA,uFAAiB,YAAjB,EAAiB,KAAjB;;;;;;AAHtB;;AACE;;AAIF;;;;;;AAHO;;AAAA;;;;;;AAKT;;;;;;AAAkB;;;;QD/CPsc,Y;;;;;;;AAIX,4BAAYpc,WAAZ,EAAkDC,IAAlD,EAAqEC,KAArE,EACYC,aADZ,EAC0CxB,YAD1C,EACsEyB,iBADtE,EAC4G;AAAA;;AAAA;;AAC1G,sCAAMJ,WAAN,EAAmBC,IAAnB,EAAyBC,KAAzB,EAAgCC,aAAhC,EAA+CxB,YAA/C,EAA6DyB,iBAA7D,EAAgF,KAAhF;AACA,gBAAKN,QAAL,GAAgB,IAAI,sEAAJ,EAAhB;AAF0G;AAG3G;;;;eAED,yBAAgBQ,MAAhB,EAAgCC,UAAhC,EAAoDC,KAApD,EAAmE;AACjE,cAAM6b,UAAU,GAAG,CAAC/b,MAAM,CAACgV,KAAR,IAAiB,KAAKxV,QAAL,CAAcwc,aAAd,EAAjB,IACbhc,MAAM,CAACgV,KAAP,KACG,KAAKxV,QAAL,CAAcyc,aAAd,MAAiC,KAAK1b,UAAL,KAAoB,CAAtD,IACE,KAAKf,QAAL,CAAc0c,aAAd,MAAiC,KAAK3b,UAAL,KAAoB,CAFzD,CADN;;AAIA,cAAIwb,UAAJ,EAAgB;AACd,gBAAMlS,WAAW,GAAG3J,KAAK,GAAG,KAAKK,UAAjC;AACAP,kBAAM,CAACgV,KAAP,GAAe,KAAf;AACAhV,kBAAM,CAACE,KAAP,IAAgB2J,WAAhB;AACD;AACF;;;eAED,0BAAiB7J,MAAjB,EAAiC;AAC/B,cAAImc,IAAI,GAAG,KAAX;;AACA,cAAK,KAAK3c,QAAL,CAAc4c,eAAd,MAAmCpc,MAAM,CAACE,KAAP,IAAgB,CAApD,IACAF,MAAM,CAACE,KAAP,KAAiB,CAAjB,KAAuB,KAAKV,QAAL,CAAc6c,gBAAd,MACnB,KAAK7c,QAAL,CAAc8c,gBAAd,MAAoC,KAAK/b,UAAL,KAAoB,CADrC,IAEnB,KAAKf,QAAL,CAAc+c,gBAAd,MAAoC,KAAKhc,UAAL,KAAoB,CAF5D,CADJ,EAGuE;AACrEP,kBAAM,CAACwB,MAAP;AACA2a,gBAAI,GAAG,IAAP;AACD,WAND,MAMO,IAAInc,MAAM,CAACE,KAAP,IAAgB,CAAhB,IACL,KAAKV,QAAL,CAAc8c,gBAAd,MAAoCtc,MAAM,CAACE,KAAP,GAAe,CAD9C,IAEL,KAAKV,QAAL,CAAc+c,gBAAd,MAAoCvc,MAAM,CAACE,KAAP,GAAe,CAFlD,EAEsD;AAC3DF,kBAAM,UAAN,CAAcoB,OAAd,CAAsB,UAAAU,CAAC;AAAA,qBAAI9B,MAAM,CAACE,KAAP,IAAgB4B,CAApB;AAAA,aAAvB;AACAqa,gBAAI,GAAG,IAAP;AACA,iBAAKtc,aAAL,CAAmBgX,eAAnB,WAAsC,KAAKlX,IAAL,CAAU2C,eAAV,GAA4BzE,IAAlE;AACD;;AACD,cAAI,KAAK8B,IAAL,CAAU8B,cAAV,MAA8B0a,IAAlC,EAAwC;AACtC,iBAAKxc,IAAL,CAAUsC,UAAV;AACD;AACF;;;eAED,uBAAc;AAAA;;AACZ,eAAKtC,IAAL,CAAUsB,OAAV,CAAkBG,OAAlB,CAA0B,UAAApB,MAAM;AAAA,mBAAIA,MAAM,CAACE,KAAP,GAAe,OAAI,CAACV,QAAL,CAAcmc,UAAjC;AAAA,WAAhC;AACD;;;eAED,yBAAa;AACX,iBAAO,KAAKnc,QAAL,CAAcmc,UAAd,GAA2B,EAAlC;AACD;;;;MAhD+B,mE;;;uBAArBG,Y,EAAY,4J,EAAA,mI,EAAA,uH,EAAA,uI,EAAA,qI,EAAA,+I;AAAA,K;;;YAAZA,Y;AAAY,mC;AAAA,0F;AAAA,c;AAAA,a;AAAA,2Z;AAAA;AAAA;ACjBzB;;AAEE;;AAqDA;;AACE;;AACA;;AAMF;;AACA;;AACF;;;;AA/DgB;;AAAA;;AAqDS;;AAAA;;AACuB;;AAAA;;AAC9B;;AAAA;;AAO4B;;AAAA;;;;;;mBDjDhC,CAAC,iEAAD;;;;;;sEAEDA,Y,EAAY;cAJxB,uDAIwB;eAJd;AACT9c,qBAAW,EAAE,sBADJ;AAETE,oBAAU,EAAE,CAAC,iEAAD;AAFH,S;AAIc,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEjBzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAcasd,S;;;;;YAAAA;;;;yBAAAA,S;AAAS,O;AAAA,gBARX,CACP,kEADO,EAEP,6DAAajZ,QAAb,CAAsB,CACpB;AAAC5F,YAAI,EAAE,EAAP;AAAWK,iBAAS,EAAE;AAAtB,OADoB,CAAtB,CAFO,CAQW;;;;0HAATwe,S,EAAS;AAAA,uBAFL,2DAEK;AAFO,kBALzB,kEAKyB,EALb,4DAKa;AAEP,O;AAPN,K;;;;;sEAOHA,S,EAAS;cATrB,sDASqB;eATZ;AACRnd,iBAAO,EAAE,CACP,kEADO,EAEP,6DAAakE,QAAb,CAAsB,CACpB;AAAC5F,gBAAI,EAAE,EAAP;AAAWK,qBAAS,EAAE;AAAtB,WADoB,CAAtB,CAFO,CADD;AAORsB,sBAAY,EAAE,CAAC,2DAAD;AAPN,S;AASY,Q;;;;;;;;;;;;;;;;;;ACdtB;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMmd,WAAW,GAAG;AACzBpM,gBAAU,EAAE,mBAAO;AAAC;AAAA,sBAAD,CAAP,CAA8BqM,OADjB;AAEzBC,gBAAU,EAAE;AAFa,KAApB;AAKP;;;;;;;AAOA;;;;;;;;;;;;;;;;;AChBA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAI5B,OAAO,CAAC6B,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01', color: '#009688', icon: 'emoji_food_beverage'}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket', color: '#0a756b', icon: 'sports_cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock', color: '#0f5851', icon: 'cached'}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai, Halve It', color: '#0f5851', icon: 'emoji_symbols'}\r\n  },\r\n  {\r\n    path: 'fives',\r\n    data: {name: 'Fives', color: '#009688', icon: 'add_box'}\r\n  },\r\n  {\r\n    path: 'hare-and-hound',\r\n    data: {name: 'Hare and Hound', color: '#0a756b', icon: 'cruelty_free'}\r\n  },\r\n  {\r\n    path: 'knockout',\r\n    data: {name: 'Knockout', color: '#009688', icon: 'sports_mma'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer', color: '#0a756b', icon: 'gps_fixed'}\r\n  },\r\n  {\r\n    path: 'capture-the-flag',\r\n    data: {name: 'Capture the Flag', color: '#0a756b', icon: 'flag'}\r\n  },\r\n  {\r\n    path: 'duel',\r\n    data: {name: 'Duel', color: '#0a756b', icon: 'emoji_events'}\r\n  },\r\n  {\r\n    path: 'imitator',\r\n    data: {name: 'Imitator', color: '#0a756b', icon: 'group'}\r\n  },\r\n  {\r\n    path: 'scam',\r\n    data: {name: 'Scam', color: '#0a756b', icon: 'group_work'}\r\n  }\r\n];\r\n","import {Routes} from '@angular/router';\nimport {MenuComponent} from './shared/components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\nimport {FivesModule} from './fives/fives.module';\nimport {HareAndHoundModule} from './hare-and-hound/hare-and-hound.module';\nimport {KnockoutModule} from './knockout/knockout.module';\nimport {CaptureTheFlagModule} from './capture-the-flag/capture-the-flag.module';\nimport {ImitatorModule} from './imitator/imitator.module';\nimport {ScamModule} from './scam/scam.module';\nimport {DuelModule} from './duel/duel.module';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: MenuComponent\n  },\n  {\n    path: 'x01',\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'fives',\n    loadChildren: () => FivesModule\n  },\n  {\n    path: 'hare-and-hound',\n    loadChildren: () => HareAndHoundModule\n  },\n  {\n    path: 'knockout',\n    loadChildren: () => KnockoutModule\n  },\n  {\n    path: 'killer',\n    loadChildren: () => KillerModule\n  },\n  {\n    path: 'capture-the-flag',\n    loadChildren: () => CaptureTheFlagModule\n  },\n  {\n    path: 'duel',\n    loadChildren: () => DuelModule\n  },\n  {\n    path: 'imitator',\n    loadChildren: () => ImitatorModule\n  },\n  {\n    path: 'scam',\n    loadChildren: () => ScamModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {AfterViewInit, Component, ElementRef, ViewChild} from '@angular/core';\nimport {slideInAnimation} from './route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {SoundService} from '~services/sound.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n\n  @ViewChild('audioElement') audioElementRef: ElementRef;\n\n  constructor(public applicationStateService: ApplicationStateService,\n              private soundService: SoundService) {\n    document.addEventListener('touchmove',  (event: any) => {\n      if (event.scale !== 1) { event.preventDefault(); }\n    }, { passive: false });\n  }\n\n  ngAfterViewInit() {\n    this.soundService.audioElement = this.audioElementRef.nativeElement;\n  }\n}\n","<audio #audioElement></audio>\r\n<div [@routeAnimations]=\"outlet && outlet.isActivated && outlet.activatedRoute\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleColorTheme()\" color=\"primary\"><mat-icon>invert_colors</mat-icon></button>\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleDetails()\" [color]=\"applicationStateService.settings.details ? 'primary' : 'accent'\">\r\n    <mat-icon>search</mat-icon>\r\n  </button>\r\n</div>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {Player} from '~models/player.model';\nimport {AroundClockState} from './models/around-clock.state.model';\nimport {AroundClockSettings} from './models/around-clock.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\n\n@Component({\n  templateUrl: './around-clock.component.html',\n  animations: [slideInAnimation],\n})\nexport class AroundClockComponent extends Playground<AroundClockState> {\n\n  settings: AroundClockSettings;\n  hiddenInfo = true;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\n    super(application, game, route, dialogService, soundService, statisticsService, 'around-clock', 2);\n    this.settings = new AroundClockSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal: number) {\n    const state = this.getPlayerState(player);\n    const originalMulti = this.multiplier;\n    if (this.getFieldIndex(state.actFieldIndex) === fieldIndex) {\n      // last throw\n      if (state.actFieldIndex >= this.settings.fields.length - this.multiplier) {\n        this.multiplier = this.multiplier === 1 ? 1 : this.settings.fields.length - (state.actFieldIndex + 1);\n      }\n      state.increaseActFieldIndex(this.settings.jump ? this.multiplier : 1);\n      if (state.actFieldIndex >= this.settings.fields.length) {\n        state.actFieldIndex = this.settings.fields.length;\n      }\n    }\n    player.score++;\n\n    if ((this.settings.saboteur || this.settings.promoter) && scoreReal !== 0) {\n      const realFieldIndex = scoreReal === 25 ? 20 : scoreReal - 1;\n      this.game.players.filter(p => p.id !== player.id).forEach(otherPlayer => {\n        const otherPlayerState = this.getPlayerState(otherPlayer);\n        if (this.getFieldIndex(otherPlayerState.actFieldIndex) === realFieldIndex && score === 0) {\n          if (this.settings.saboteur) {\n            otherPlayerState.decreaseActFieldIndex(this.settings.jump ? originalMulti : 1);\n          } else {\n            otherPlayerState.increaseActFieldIndex(this.settings.jump ? originalMulti : 1);\n            if (otherPlayerState.actFieldIndex >= this.settings.fields.length) {\n              otherPlayerState.actFieldIndex = this.settings.fields.length - 1;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    const state = this.getPlayerState(player);\n    if ((this.settings.fields.length - 1) < state.actFieldIndex) {\n      player.setWin();\n    } else if (this.game.isTheLastThrow()) {\n      if (this.settings.punishment || this.settings.life !== 0) {\n        let multi = 0;\n        for (let i = 0; i < 3; i++) {\n          const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n          multi += t.score;\n        }\n        if (multi === 0) {\n          if (this.settings.punishment) {\n            state.decreaseActFieldIndex();\n          }\n          if (this.settings.life !== 0) {\n            this.soundService.no();\n            player.life--;\n          }\n        }\n      }\n      this.game.nextPlayer();\n    }\n\n    if (this.settings.firstDeath) {\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\n      if (activePlayers.length < this.game.players.length) {\n        this.getTheBestPlayers().forEach(p => p.setWin(true));\n      }\n    }\n\n    if (this.settings.life !== 0 && this.game.players.length > 1) {\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\n      if (activePlayers.length === 1) {\n        activePlayers[0].setWin(true);\n      } else if (!!activePlayers.length) {\n        while (this.game.getActualPlayer().isInactive()) {\n          this.game.nextPlayer();\n        }\n      }\n    }\n  }\n\n  getDistanceFromRandom(): string {\n    if (this.settings.style === 3) {\n      const bullPos = this.settings.fields.findIndex(f => f === 20);\n      const playerPos = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\n      const diff = bullPos - playerPos;\n      return diff >= 0 ? diff + '' : '';\n    }\n    return '';\n  }\n\n  toggleHiddenInfo() {\n    this.hiddenInfo = !this.hiddenInfo;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return fieldIndex === this.getFieldIndex(this.getPlayerState(this.game.getActualPlayer()).actFieldIndex);\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return this.isFieldEnabled(fieldIndex);\n  }\n\n  isSecondaryField(fieldIndex: number): boolean {\n    if (!this.isFieldEnabled(fieldIndex)) {\n      return this.game.players.filter(p => p !== this.game.getActualPlayer())\n        .some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\n    }\n    return false;\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const owners = this.game.players\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex).map(p => p.name);\n    return !!owners.length ? owners.join(' ') : '';\n  }\n\n  getFieldNoteBottom(fieldIndex: number): string {\n    const owners = this.game.players\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex);\n    const actualOwn = owners.some(p => p.name === this.game.getActualPlayer().name);\n    if (actualOwn) {\n      const length = this.settings.fields.length - 1 - this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\n      return length + '';\n    }\n    return !actualOwn && !!owners.length && (this.settings.promoter || this.settings.saboteur) ? (this.settings.promoter ? '▲' : '▼') : '';\n  }\n\n  customReset() {\n    this.game.players.forEach(player => {\n      player.life = this.settings.life;\n      player.state = new AroundClockState();\n    });\n    this.settings.setStyle();\n  }\n\n  decoratePlayerStat(player: Player): string {\n    return player.name;\n  }\n\n  private getTheBestPlayers(): Player[] {\n    const activePlayers = this.game.players.filter(p => !p.isInactive());\n    let max = 0;\n    activePlayers.forEach(p => {\n      const index = this.getPlayerState(p).actFieldIndex;\n      max = index > max ? index : max;\n    });\n    return activePlayers.filter(p => this.getPlayerState(p).actFieldIndex === max);\n  }\n\n  private getFieldIndex(index: number) {\n    return this.settings.fields[index];\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Around The Clock'\" [playground]=\"playground\"\r\n                [rules]=\"'The object of this popular game is to be the first player to hit every number on the board ' +\r\n                 'from 1-20. The numbers must be hit in order, and players alternate after three throws. The player ' +\r\n                  'must hit each number in turn and cannot proceed until to the next number until the number is hit. ' +\r\n                   'The winner is the player who hist all the numbers in order first.'\">\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.jump?'primary':''\" (click)=\"settings.toggleJump()\">\r\n      Enable Jump\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.punishment?'primary':''\" (click)=\"settings.togglePunishment()\">\r\n      Punishment\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.saboteur?'primary':''\" (click)=\"settings.toggleSaboteur()\">\r\n      Saboteur\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.promoter?'primary':''\" (click)=\"settings.togglePromoter()\">\r\n      Promoter\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 3?'primary':''\" (click)=\"settings.toggleTreeLives()\">\r\n      Tree Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 5?'primary':''\" (click)=\"settings.toggleFiveLives()\">\r\n      Five Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 7?'primary':''\" (click)=\"settings.toggleSevenLives()\">\r\n      Seven Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 10?'primary':''\" (click)=\"settings.toggleTenLives()\">\r\n      Ten Lives\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.firstDeath?'primary':''\" (click)=\"settings.toggleFirstDeath()\">\r\n      First Death\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Field's order</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==0?'primary':''\" (click)=\"settings.setStyle(0)\">\r\n      Ascending\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\" (click)=\"settings.setStyle(4)\">\r\n      Descending\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\" (click)=\"settings.setStyle(1)\">\r\n      Clockwise\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\" (click)=\"settings.setStyle(2)\">\r\n      Anticlockwise\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==8?'primary':''\" (click)=\"settings.setStyle(8)\">\r\n      TripleClock\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==9?'primary':''\" (click)=\"settings.setStyle(9)\">\r\n      ZoneClock\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\" (click)=\"settings.setStyle(3)\">\r\n      Random\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==6?'primary':''\" (click)=\"settings.setStyle(6)\">\r\n      Random11\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==5?'primary':''\" (click)=\"settings.setStyle(5)\">\r\n      Recurrence\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==7?'primary':''\" (click)=\"settings.setStyle(7)\">\r\n      Pirate\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"hidden-info\" [class.hidden]=\"hiddenInfo\" (click)=\"toggleHiddenInfo()\">{{getDistanceFromRandom()}}</div>\r\n      <div class=\"player\r\n        {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\r\n        {{settings.life !== 0 && player.isInactive() ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [lifeDisplayed]=\"settings.life !== 0\" [hasContent]=\"false\">\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class AroundClockSettings {\n  jump: boolean;\n  punishment: boolean;\n  life: number;\n  saboteur: boolean;\n  promoter: boolean;\n  style: number;\n  fields: number[];\n  firstDeath: boolean;\n\n  constructor() {\n    this.style = 0;\n    this.jump = true;\n    this.firstDeath = true;\n    this.punishment = true;\n    this.life = 0;\n    this.promoter = false;\n    this.saboteur = true;\n    this.fields = AroundClockSettings.getBaseFields();\n  }\n\n  setStyle(style?: number) {\n    if (!!style || style === 0) {\n      this.style = style;\n    }\n    switch (this.style) {\n      case 1:\n        this.fields = AroundClockSettings.getClockFields();\n        break;\n      case 2:\n        this.fields = AroundClockSettings.getAnticlockFields();\n        break;\n      case 3:\n        this.fields = AroundClockSettings.getRandom();\n        break;\n      case 4:\n        this.fields = [...AroundClockSettings.getBaseFields().reverse().slice(1), 20];\n        break;\n      case 5:\n        this.fields = AroundClockSettings.getRecurrence();\n        break;\n      case 6:\n        this.fields = AroundClockSettings.getRandom(11);\n        break;\n      case 7:\n        this.fields = AroundClockSettings.getPirate();\n        break;\n      case 8:\n        this.fields = AroundClockSettings.getTripleClockFields();\n        break;\n      case 9:\n        this.fields = AroundClockSettings.getZoneClockFields();\n        break;\n      default:\n        this.fields = AroundClockSettings.getBaseFields();\n    }\n  }\n\n  toggleFirstDeath() {\n    this.firstDeath = !this.firstDeath;\n  }\n\n  toggleJump() {\n    this.jump = !this.jump;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n  }\n\n  toggleTreeLives() {\n    this.life = this.life === 3 ? 0 : 3;\n  }\n\n  toggleFiveLives() {\n    this.life = this.life === 5 ? 0 : 5;\n  }\n\n  toggleSevenLives() {\n    this.life = this.life === 7 ? 0 : 7;\n  }\n\n  toggleTenLives() {\n    this.life = this.life === 10 ? 0 : 10;\n  }\n\n  toggleSaboteur() {\n    this.saboteur = !this.saboteur;\n    if (this.saboteur) {\n      this.promoter = false;\n    }\n  }\n\n  togglePromoter() {\n    this.promoter = !this.promoter;\n    if (this.promoter) {\n      this.saboteur = false;\n    }\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getClockFields(): number[] {\n    return [0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4, 19, 20];\n  }\n\n  private static getAnticlockFields(): number[] {\n    return [4, 11, 8, 13, 10, 7, 15, 6, 18, 2, 16, 1, 14, 9, 5, 12, 3, 17, 0, 19, 20];\n  }\n\n  private static getTripleClockFields(): number[] {\n    return [0, 12, 14, 2, 15, 13, 4, 17, 5, 1, 18, 7, 8, 19, 3, 9, 16, 6, 10, 11, 20];\n  }\n\n  private static getZoneClockFields(): number[] {\n    return [0, 12, 17, 9, 3, 1, 5, 2, 14, 15, 16, 7, 18, 10, 6, 20, 13, 19, 8, 4, 11];\n  }\n\n  private static getRandom(size?: number): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    if (!size) {\n      size = fields.length;\n    }\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n      fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n    }\n    return randomFields;\n  }\n\n  private static getPirate(): number[] {\n    let fields = AroundClockSettings.getRandom();\n    for (let i = 0; i < 4; i++) {\n      const random = Math.floor(Math.random() * fields.length);\n      if (fields[random] === 20) {\n        i--;\n      } else {\n        fields[random] = 20;\n      }\n    }\n    return fields;\n  }\n\n  private static getRecurrence(): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    const randomFields = [];\n    for (let i = (fields.length - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n    }\n    return randomFields;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex(value = 1) {\r\n    this.actFieldIndex -= value;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state = new AroundClockState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {CaptureTheFlagState} from './models/capture-the-flag.state.model';\nimport {CaptureTheFlagSettings} from './models/capture-the-flag.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\n\n@Component({\n  templateUrl: './capture-the-flag.component.html',\n  animations: [slideInAnimation],\n})\nexport class CaptureTheFlagComponent extends Playground<CaptureTheFlagState> {\n\n  settings: CaptureTheFlagSettings;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\n    super(application, game, route, dialogService, soundService, statisticsService, 'ctf');\n    this.settings = new CaptureTheFlagSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\n    const state = this.getPlayerState(player);\n    if (this.isActiveField(fieldIndex)) {\n      state.increaseFieldCount(fieldIndex, this.multiplier);\n      if (state.getFieldCount(fieldIndex) >= 3) {\n        player.score += this.settings.noScore ? 1 : score;\n        this.checkWinner(player);\n        this.game.actualFieldIndex++;\n      }\n    } else if (fieldIndex === 20) {\n      state.increaseFieldCount(this.settings.fields[this.game.actualFieldIndex], 3);\n      player.score += this.settings.noScore ? 1 : this.settings.fields[this.game.actualFieldIndex] + 1;\n      this.checkWinner(player);\n      this.game.actualFieldIndex++;\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    if (this.game.actualFieldIndex === this.settings.fields.length) {\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\n    } else if (this.game.isTheLastThrow()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  getFieldValue(player: Player, fieldIndex: number): string {\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\n    if (fieldCount === 0) {\n      return '○○○';\n    } else {\n      let str = '';\n      for (let i = 0; i < Math.min(fieldCount, 3); i++) {\n        str += '●';\n      }\n      for (let i = fieldCount; i < 3; i++) {\n        str += '○';\n      }\n      return str;\n    }\n  }\n\n  customReset() {\n    this.game.actualFieldIndex = 0;\n    this.game.players.forEach(player => player.state = new CaptureTheFlagState());\n    if (this.settings.style === 0) {\n      this.settings.randomCity();\n    } else if (this.settings.style === 1) {\n      this.settings.randomCountry();\n    } else {\n      this.settings.randomContinent();\n    }\n  }\n\n  customSettingsValidation(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  isActiveField(fieldIndex: number): boolean {\n    return this.settings.fields[this.game.actualFieldIndex] === fieldIndex;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return fieldIndex === 20 || this.settings.fields.indexOf(fieldIndex) === this.game.actualFieldIndex;\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return this.isFieldEnabled(fieldIndex);\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const player = this.game.players.find(player => this.getPlayerState(player).getFieldCount(fieldIndex) >= 3);\n    return player ? player.name : '';\n  }\n\n  getTheFinalResult(): Player[] {\n    let winners = this.game.players.filter(p => p.win);\n    if (!winners.length) {\n      return [];\n    }\n    let max = winners[0].score;\n    winners.forEach(p => {\n      max = p.score > max ? p.score : max;\n    });\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\n      const c = p.clone();\n      c.win = false;\n      return c;\n    });\n    return [...winners, ...losers];\n  }\n\n  getGameConfig(): string {\n    return this.settings.fields.length+'';\n  }\n\n  private checkWinner(player: Player) {\n    let total = this.settings.fields.length;\n    const sum = player.score;\n    if (!this.settings.noScore) {\n      total = this.settings.fields.reduce((a, b) => a + b, 0);\n    }\n    if (sum > Math.floor(total / 2)) {\n      player.setWin(true);\n    }\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Capture the Flag'\" [playground]=\"playground\"\n                [rules]=\"'Növekvő sorrendben jönnek a mezők, a játékosoknak el kell foglalni őket. Ez történhet úgy,' +\n                 ' hogy háromszor eltalálja a játékos vagy dob egyetlen dupla bullt. Ha a játékos elfoglalta a mezőt, ' +\n                  'akkor No score esetén 1 pontot kap, egyébként megkapja a mező értékét és megnyílik a következő mező.' +\n                   'A játék a bull mező elfoglalásáig tart. A végén az nyer, akinek a legtöbb pontja van. Döntetlen ' +\n                    'lehetséges.'\">\n\n\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style === 0 ? 'primary' : ''\"\n            (click)=\"settings.randomCity()\">City (5)\n    </button>\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style === 1 ? 'primary' : ''\"\n            (click)=\"settings.randomCountry()\">Country (10)\n    </button>\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style === 2 ? 'primary' : ''\"\n            (click)=\"settings.randomContinent()\">Continent (20)\n    </button>\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.noScore?'primary':''\"\n            (click)=\"settings.toggleNoScore()\">No score\n    </button>\n  </app-settings>\n\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <app-player-score [player]=\"player\">\n          <div class=\"field-set\">\n            <div class=\"field {{isActiveField(field) ? 'highlighted': ''}}\"\n                 *ngFor=\"let field of settings.fields\">\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\n            </div>\n          </div>\n        </app-player-score>\n      </div>\n    </ng-container>\n  </div>\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared/shared.module';\nimport {CaptureTheFlagComponent} from './capture-the-flag.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {path: '', component: CaptureTheFlagComponent}\n    ])\n  ],\n  declarations: [CaptureTheFlagComponent]\n})\nexport class CaptureTheFlagModule {\n}\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class CaptureTheFlagSettings {\n\n  fields: number[];\n  style: number;\n  noScore = false;\n\n  constructor() {\n    this.fields = [];\n    this.noScore = false;\n    this.randomCountry();\n  }\n\n  randomCity() {\n    this.style = 0;\n    this.fields = CaptureTheFlagSettings.getRandom(5);\n    this.fields[this.fields.length] = 20;\n  }\n\n  randomCountry() {\n    this.style = 1;\n    this.fields = CaptureTheFlagSettings.getRandom(10);\n    this.fields[this.fields.length] = 20;\n  }\n\n  randomContinent() {\n    this.style = 2;\n    this.fields = CaptureTheFlagSettings.getRandom(20);\n    this.fields[this.fields.length] = 20;\n  }\n\n  toggleNoScore() {\n    this.noScore = !this.noScore;\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getRandom(size?: number): number[] {\n    let fields = CaptureTheFlagSettings.getBaseFields();\n    if (!size) {\n      size = fields.length;\n    }\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      if (fields[random] === 20) {\n        i++;\n      } else {\n        randomFields.push(fields[random]);\n        fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n      }\n    }\n    return randomFields.sort((a, b) => Number(a) - Number(b));\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\nimport {FieldValue} from '~models/field-value.model';\n\nexport class CaptureTheFlagState extends PlaygroundState {\n\n  actFieldIndex: number;\n  fieldCount: FieldValue[];\n\n  constructor() {\n    super();\n    this.fieldCount = [];\n    this.actFieldIndex = 0;\n  }\n\n  getFieldCount(field: number): number {\n    return this.getFieldValue(this.fieldCount, field).value;\n  }\n\n  increaseFieldCount(field: number, value: number) {\n    this.getFieldValue(this.fieldCount, field).value += value;\n  }\n\n  getActFieldIndex(): number {\n    return this.actFieldIndex;\n  }\n\n  increaseActFieldIndex() {\n    this.actFieldIndex++;\n  }\n\n  clone(): CaptureTheFlagState {\n    const state = new CaptureTheFlagState();\n    state.actFieldIndex = this.actFieldIndex;\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\n    return state;\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {CricketSettings} from './models/cricet.settings.model';\r\nimport {CricketState} from './models/cricet.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './cricket.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class CricketComponent extends Playground<CricketState> {\r\n\r\n  settings: CricketSettings;\r\n  playerToDisplay: Player;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'cricket');\r\n    this.settings = new CricketSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n      if (!this.settings.isBlackOutGame() ||\r\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex ||\r\n        this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n\r\n        if (this.isFieldClosedForOthers(player, fieldIndex) && (playerFieldCount + this.multiplier) > 3) {\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, 3);\r\n        } else {\r\n          let multiplier = this.multiplier;\r\n          if (playerFieldCount < 3 && (playerFieldCount + this.multiplier) >= 3) {\r\n            multiplier = (playerFieldCount + this.multiplier) % 3;\r\n          }\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, playerFieldCount + this.multiplier);\r\n          this.multiplier = multiplier;\r\n        }\r\n      }\r\n\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        if (this.settings.isBlackOutGame()) {\r\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex) {\r\n            this.getPlayerState(player).increaseActFieldIndex();\r\n          }\r\n        }\r\n        this.punishPlayers(fieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.score = this.getPlayerTotal(p));\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    this.game.players.forEach(p => p.setWin(\r\n      this.isPlayerDone(p) &&\r\n      ((!punishStyle && this.game.isTheBestPlayer(p)) || (punishStyle && this.game.isTheWorstPlayer(p)))));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const score = this.getPunishScore(player, fieldIndex);\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n\r\n    let str = '';\r\n    if (punishStyle && score !== 0) {\r\n      str += score;\r\n    }\r\n\r\n    if (playerFieldCount === 0 && str.length === 0) {\r\n      return '○';\r\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\r\n      return this.getFieldScore(player, fieldIndex) + '';\r\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\r\n      str += '●●●';\r\n    } else {\r\n      for (let i = 0; i < playerFieldCount; i++) {\r\n        str += '●';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  isActiveField(player: Player, fieldIndex: number): boolean {\r\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(player: Player, fieldIndex: number): boolean {\r\n    return this.getPlayerState(player).getFieldCount(fieldIndex) >= 3;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.settings.isNoScoreGame()) {\r\n      return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n    }\r\n    return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    if (this.isPrimaryField(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(this.getPlayerToDisplay()).getFieldCount(fieldIndex);\r\n      const remaining = ''.padStart(3 - playerFieldCount, '●');\r\n      return remaining + '\\n' + this.game.players.filter(p => this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      return this.game.players.filter(p => !this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new CricketState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  changePlayerToDisplay(player?: Player) {\r\n    this.playerToDisplay = player;\r\n    setTimeout(() => this.playerToDisplay = null, 1500);\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length+','+this.settings.style;\r\n  }\r\n\r\n  private getPlayerToDisplay(): Player {\r\n    return !!this.playerToDisplay ? this.playerToDisplay : this.game.getActualPlayer();\r\n  }\r\n\r\n  private getPlayerTotal(player: Player) {\r\n    let total = 0;\r\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\r\n      total = this.getPlayerTotalForPunishGame(player);\r\n    } else if (this.settings.isScoreGame()) {\r\n      total = this.getPlayerTotalForScoreGame(player);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForScoreGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        total += (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      }\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForPunishGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      total += this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private punishPlayers(fieldIndex: number) {\r\n    this.game.players.forEach(player => {\r\n      if (!this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        this.getPlayerState(player).setPunishCount(fieldIndex, this.getPlayerState(player).getPunishCount(fieldIndex) + this.multiplier);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  private getFieldScore(player: Player, fieldIndex: number): number {\r\n    if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n      return (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getPunishScore(player: Player, fieldIndex: number): number {\r\n    return this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n  }\r\n\r\n  private isFieldClosed(fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(player => {\r\n      closed = closed && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isFieldClosedForOthers(player: Player, fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(p => {\r\n      if (p.id !== player.id) {\r\n        closed = closed && this.isFieldDoneForPlayer(p, fieldIndex);\r\n      }\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isPlayerDone(player: Player): boolean {\r\n    let done = true;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      done = done && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    });\r\n    return done;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Ultimate Cricket'\" [playground]=\"playground\"\r\n                [rules]=\"'The objective shall be to \\'own\\' or \\'close\\' certain numbers on the board, and to achieve ' +\r\n                'the highest point score. The player or team to do so first, shall be the winner.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\"\r\n            (click)=\"settings.setStyle(2)\">Cut-Throat\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\"\r\n            (click)=\"settings.setStyle(4)\">Black Out\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           (click)=\"changePlayerToDisplay(player)\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div\r\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\r\n                *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class CricketSettings {\r\n\r\n  fields: number[] = [14, 15, 16, 17, 18, 19, 20];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize(maxField: number) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    while(this.numbs.filter(n => !!n).length !== maxField) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.numbs[this.numbs.length - 1] = true;\r\n    this.initFields();\r\n  }\r\n\r\n  all() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  small() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21]);\r\n  }\r\n\r\n  high() {\r\n    this.setAllowedField([11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  star() {\r\n    this.setAllowedField([20, 9, 14, 13, 4, 16, 7, 2, 15, 21]);\r\n  }\r\n\r\n  cross() {\r\n    this.setAllowedField([20, 3, 11, 6, 21]);\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  left() {\r\n    this.setAllowedField([12, 9, 14, 11, 8, 16, 7, 5, 19, 21]);\r\n  }\r\n\r\n  right() {\r\n    this.setAllowedField([1, 18, 4, 13, 6, 10, 15, 2, 17, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  prime() {\r\n    this.setAllowedField([2, 3, 5, 7, 11, 13, 17, 19, 21]);\r\n  }\r\n\r\n  notPrime() {\r\n    this.setAllowedField([1, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.fieldCount, fieldIndex).value;\r\n  }\r\n\r\n  setFieldCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getPunishCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.punishCount, fieldIndex).value;\r\n  }\r\n\r\n  setPunishCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.punishCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state = new CricketState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {DuelSettings} from './models/duel.settings.model';\r\nimport {DuelState} from './models/duel.state.model';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './duel.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class DuelComponent extends Playground<DuelState> {\r\n\r\n  settings: DuelSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'duel', 2);\r\n    this.settings = new DuelSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    const actualScore = score * this.multiplier;\r\n    if (score === 0) {\r\n      player.score -= this.settings.punishment;\r\n    } else if (state.ownFields.some(i => i === fieldIndex)) {\r\n      player.score += actualScore;\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      player.score -= actualScore;\r\n      if (this.settings.handover) {\r\n        const player = this.game.players.find(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n        if (player) {\r\n          player.score += actualScore;\r\n        }\r\n      }\r\n    } else {\r\n      state.ownFields.push(fieldIndex);\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score >= this.settings.targetPoint));\r\n    const activePlayers = this.game.players.filter(p => !this.isInactive(p));\r\n    if (activePlayers.length === 1) {\r\n      activePlayers[0].setWin(true);\r\n    }\r\n    if (!activePlayers) {\r\n      player.setWin(true);\r\n    } else {\r\n      if (this.game.isTheLastThrow()) {\r\n        this.game.nextPlayer();\r\n      }\r\n      while (this.isInactive(this.game.getActualPlayer())) {\r\n        this.game.nextPlayer();\r\n      }\r\n    }\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return player.score <= 0;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    return state.ownFields.some(i => i === fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return !this.settings.isFieldAllowed(fieldIndex) ||\r\n      this.game.players.some(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const player = this.game.players.find(p => this.getPlayerState(p).ownFields.some(i => i === fieldIndex))\r\n    if (player) {\r\n      return player.name.substr(0, 1).toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new DuelState();\r\n      player.score = this.settings.startPoint;\r\n    });\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length+','+this.settings.targetPoint+','+this.settings.startPoint;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Duel'\" [playground]=\"playground\"\r\n                [rules]=\"'....'\">\r\n\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.startPoint\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.targetPoint\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Punishment</mat-label>\r\n        <input [(ngModel)]=\"settings.punishment\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <br/>\r\n\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.handover ? 'primary' : ''\"\r\n            (click)=\"settings.toggleHandOver()\">Hand Over</button>\r\n\r\n    <br/>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {DuelComponent} from './duel.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: DuelComponent}\r\n    ])\r\n  ],\r\n  declarations: [DuelComponent]\r\n})\r\nexport class DuelModule {\r\n}\r\n","import {CricketSettings} from '../../cricket/models/cricet.settings.model';\r\n\r\nexport class DuelSettings extends CricketSettings {\r\n  startPoint: number;\r\n  targetPoint: number;\r\n  punishment: number;\r\n  handover: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.star();\r\n    this.startPoint = 30;\r\n    this.targetPoint = 200;\r\n    this.punishment = 10;\r\n    this.handover = true;\r\n  }\r\n\r\n  star() {\r\n    this.setAllowedField([20, 1, 4, 13, 6, 15, 2, 3, 19, 16, 8, 14, 9]);\r\n  }\r\n\r\n  cross() {\r\n    this.setAllowedField([5, 20, 18, 4, 6, 10, 2, 17, 7, 16, 11, 14]);\r\n  }\r\n\r\n  toggleHandOver() {\r\n    this.handover = !this.handover;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class DuelState extends PlaygroundState {\r\n\r\n  ownFields = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  clone(): DuelState {\r\n    const state = new DuelState();\r\n    state.ownFields = [...this.ownFields];\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {FivesSettings} from './models/fives.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './fives.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class FivesComponent extends Playground<PlaygroundState> {\r\n\r\n  settings: FivesSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'fives');\r\n    this.settings = new FivesSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.game.isTheLastThrow()) {\r\n      let sum = 0;\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        sum += t.score * t.multi;\r\n      }\r\n      if (sum % this.settings.divider === 0) {\r\n        if (this.settings.noCheat && player.throwsHistory[player.throwsHistory.length - 1].score === 0 && sum !== 0) {\r\n          sum = 0;\r\n        }\r\n        player.score -= (sum / this.settings.divider);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score <= 0));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.actualThrow === 2) {\r\n      const mod = this.settings.divider - (this.game.getActualPlayer().getThrowsTotal() % this.settings.divider);\r\n      let max = mod + this.settings.divider;\r\n      const all = [mod];\r\n      while (max <= 20) {\r\n        all.push(max);\r\n        max += this.settings.divider;\r\n      }\r\n      return all.some(f => f === fieldIndex + 1);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.limit);\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.divider + ',' + this.settings.limit;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Fives'\" [playground]=\"playground\"\r\n                [rules]=\"'The idea of the game to throw three darts into the board, in turn, to score a number that ' +\r\n                 'is divisible by five. The higher the number you score, the more points you can score. For every five ' +\r\n                  'scored, one point is awarded. E.g. if a player scores fifteen then he or she gains three points.'\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.noCheat?'primary':''\" (click)=\"settings.toggleNoCheat()\">\r\n      No Cheat\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Divider</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.divider === divider?'primary':''\"\r\n            *ngFor=\"let divider of settings.getSelectableDividers()\"\r\n            (click)=\"settings.setDivider(divider)\">{{divider}}</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Limit</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.limit === limit?'primary':''\"\r\n            *ngFor=\"let limit of settings.getSelectableLimits()\"\r\n            (click)=\"settings.setLimit(limit)\">{{limit}}</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FivesComponent} from './fives.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: FivesComponent}\r\n    ])\r\n  ],\r\n  declarations: [FivesComponent]\r\n})\r\nexport class FivesModule {\r\n}\r\n","export class FivesSettings {\r\n  divider: number;\r\n  limit: number;\r\n  noCheat: boolean;\r\n\r\n  constructor() {\r\n    this.divider = 5;\r\n    this.limit = 20;\r\n    this.noCheat = true;\r\n  }\r\n\r\n  getSelectableDividers(): number[] {\r\n    return [3, 4, 5, 6, 7, 8, 10];\r\n  }\r\n\r\n  getSelectableLimits(): number[] {\r\n    return [10, 20, 30, 50, 100];\r\n  }\r\n\r\n  setDivider(value: number) {\r\n    this.divider = value;\r\n  }\r\n\r\n  setLimit(value: number) {\r\n    this.limit = value;\r\n  }\r\n\r\n  toggleNoCheat() {\r\n    this.noCheat = !this.noCheat;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {HareAndHoundSettings} from './models/hare-and-hound.settings.model';\r\nimport {HareAndHoundState} from './models/hare-and-hound.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './hare-and-hound.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class HareAndHoundComponent extends Playground<HareAndHoundState> {\r\n\r\n  settings: HareAndHoundSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'hare-hound', 2, 2);\r\n    this.settings = new HareAndHoundSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isFieldEnabled(fieldIndex, state.actFieldIndex)) {\r\n      state.increaseActFieldIndex(this.multiplier);\r\n      if (state.actFieldIndex >= (FIELDS_COUNT - 1)) {\r\n        state.actFieldIndex = state.actFieldIndex - (FIELDS_COUNT - 1);\r\n      }\r\n      player.score -= this.multiplier;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    player.setWin((this.isHare() && player.score <= 0) ||\r\n      (!this.isHare() &&\r\n        (player.score + this.settings.getHareStartIndex()) <= this.game.players.find(p => this.isHare(p)).score));\r\n\r\n    if (!player.win && this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number, actFieldIndex?: number): boolean {\r\n    if (!actFieldIndex) {\r\n      actFieldIndex = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\r\n    }\r\n    return fieldIndex === this.getFieldIndex(actFieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    if (!this.isFieldEnabled(fieldIndex)) {\r\n      return this.game.players.some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players\r\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex)\r\n      .map(p => p.name);\r\n    return !!owners.length ? owners.join(' ') : '';\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (!this.isPrimaryField(fieldIndex) && !this.isSecondaryField(fieldIndex)) {\r\n      return '';\r\n    }\r\n    return (this.isHare() && this.isPrimaryField(fieldIndex) || (this.isSecondaryField(fieldIndex) && !this.isHare())) ? 'favorite' : 'directions_run';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach((player, index) => {\r\n      player.score = FIELDS_COUNT - 1;\r\n      if (index === 0) {\r\n        player.state = new HareAndHoundState(this.settings.getHareStartIndex());\r\n      } else {\r\n        player.state = new HareAndHoundState(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + `${this.isHare(player) ? '0' : '1'}`;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return (20 - HareAndHoundSettings.getBaseFields().indexOf(this.settings.houndStartIndex)) + '';\r\n  }\r\n\r\n  private getFieldIndex(index: number) {\r\n    return this.settings.getFields()[index];\r\n  }\r\n\r\n  private isHare(player?: Player) {\r\n    if (!player) {\r\n      player = this.game.getActualPlayer();\r\n    }\r\n    return this.game.players.map(p => p.id).indexOf(player.id) === 0;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Hare and Hound'\" [playground]=\"playground\"\r\n                [rules]=\"'The frist player is the hare, and his opponent is the hound in pursuit. The hare must travel ' +\r\n                 'clockwise around the board starting at 20. The hare wins by returning to 20 before the hound catches ' +\r\n                  'up with him. The hound usually starts from either 12 or 5, depending on the preference of the ' +\r\n                   'players. The hound wins by overtaking the hare.'\">\r\n\r\n    <h2>Hound start position</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"(settings.houndStartIndex+1) === start?'primary':''\"\r\n            *ngFor=\"let start of settings.getSelectableHoundStart()\"\r\n            (click)=\"settings.setHoundStart(start - 1)\">{{start}}</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {HareAndHoundComponent} from './hare-and-hound.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: HareAndHoundComponent}\r\n    ])\r\n  ],\r\n  declarations: [HareAndHoundComponent]\r\n})\r\nexport class HareAndHoundModule {\r\n}\r\n","export class HareAndHoundSettings {\r\n  houndStartIndex: number;\r\n  hareStartIndex: number;\r\n\r\n  constructor() {\r\n    this.houndStartIndex = 13;\r\n    this.hareStartIndex = 19;\r\n  }\r\n\r\n  getSelectableHoundStart(): number[] {\r\n    return [7, 16, 8, 11, 14, 9, 12, 5];\r\n  }\r\n\r\n  setHoundStart(value: number) {\r\n    this.houndStartIndex = value;\r\n  }\r\n\r\n  getFields(): number[] {\r\n    const index = HareAndHoundSettings.getBaseFields().indexOf(this.houndStartIndex);\r\n    return [...HareAndHoundSettings.getBaseFields().slice(index), ...HareAndHoundSettings.getBaseFields().slice(0, index)];\r\n  }\r\n\r\n  getHareStartIndex(): number {\r\n    return this.getFields().indexOf(this.hareStartIndex);\r\n  }\r\n\r\n  static getBaseFields(): number[] {\r\n    return [19, 0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4];\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class HareAndHoundState extends PlaygroundState {\r\n\r\n  constructor(public actFieldIndex: number) {\r\n    super();\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): HareAndHoundState {\r\n    return new HareAndHoundState(this.actFieldIndex);\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ImitatorSettings} from './models/imitator.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {ImitatorState} from './models/imitator.state.model';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './imitator.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ImitatorComponent extends Playground<ImitatorState> {\r\n\r\n  settings: ImitatorSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'imitator');\r\n    this.nextEnabled = false;\r\n    this.settings = new ImitatorSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.actualThrow === 1) {\r\n      state.punished = fieldIndex !== state.actFieldIndex;\r\n    } else if (this.game.actualThrow === 2) {\r\n      const newScore = state.punished && score === 0 ? 25 : score;\r\n      player.score += (state.punished ? newScore * -1 : newScore) * this.multiplier;\r\n    } else {\r\n      this.game.nextPlayer();\r\n      const newFieldIndex = score === 0 ? Math.floor(Math.random() * 20) : fieldIndex;\r\n      this.getPlayerState(this.game.getActualPlayer()).actFieldIndex = newFieldIndex;\r\n    }\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.game.actualThrow === 0 && this.getPlayerState(this.game.getActualPlayer()).actFieldIndex === fieldIndex;\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastPlayer(player) && (this.game.round + 1) === this.settings.round && this.game.actualThrow === 2) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ImitatorState());\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.round + '';\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Imitator'\" [playground]=\"playground\"\r\n                [rules]=\"'...'\">\r\n\r\n    <h2>Number of Round</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===3?'primary':''\" (click)=\"settings.setRound(3)\">\r\n      3\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===5?'primary':''\" (click)=\"settings.setRound(5)\">\r\n      5\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===10?'primary':''\" (click)=\"settings.setRound(10)\">\r\n      10\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===15?'primary':''\" (click)=\"settings.setRound(15)\">\r\n      15\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===20?'primary':''\" (click)=\"settings.setRound(20)\">\r\n      20\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" [reversRound]=\"settings.round\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ImitatorComponent} from './imitator.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ImitatorComponent}\r\n    ])\r\n  ],\r\n  declarations: [ImitatorComponent]\r\n})\r\nexport class ImitatorModule {\r\n}\r\n","export class ImitatorSettings {\n\n  round = 5;\n\n  setRound(r: number) {\n    this.round = r;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class ImitatorState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n  punished: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = Math.floor(Math.random() * 20);\r\n    this.punished = false;\r\n  }\r\n\r\n  clone(): ImitatorState {\r\n    const state = new ImitatorState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    state.punished = this.punished;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KillerState} from './models/killer.state.model';\r\nimport {KillerSettings} from './models/killer.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\nconst DANGER_ZONE_ICON = 'sentiment_very_dissatisfied';\r\n\r\n@Component({\r\n  templateUrl: './killer.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KillerComponent extends Playground<KillerState> {\r\n\r\n  settings: KillerSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'killer', 2);\r\n    this.settings = new KillerSettings();\r\n    this.nextEnabled = false;\r\n    this.zeroEnabled = false;\r\n    this.multiEnabled = false;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.round === 0) {\r\n      state.actField = fieldIndex;\r\n      player.score = score;\r\n      if (this.game.isActualPlayerTheLast()) {\r\n        this.nextEnabled = true;\r\n        this.zeroEnabled = true;\r\n        this.multiEnabled = true;\r\n      }\r\n    } else {\r\n      if (state.killer) {\r\n        if (this.settings.suicide && fieldIndex === state.actField && this.multiplier > 1) {\r\n          player.life = 0;\r\n          this.extraEndingMsg = 'SUICIDE!!!';\r\n        } else if (fieldIndex === state.actField) {\r\n          player.life = Number(player.life) + Number(this.multiplier);\r\n          if (player.life > this.settings.numberOfLives) {\r\n            player.life = this.settings.numberOfLives;\r\n          }\r\n        } else {\r\n          this.game.players.filter(p => p.id !== player.id && !p.isInactive()).forEach(p => {\r\n            const s = this.getPlayerState(p);\r\n            if (fieldIndex === s.actField) {\r\n              p.life -= this.multiplier;\r\n              this.soundService.no();\r\n              if (p.life < 0) {\r\n                p.life = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (fieldIndex === state.actField) {\r\n        state.boarding -= this.multiplier;\r\n        if (state.boarding <= 0) {\r\n          state.boarding = 0;\r\n        }\r\n        state.killer = state.boarding === 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.round !== 0) {\r\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !p.isInactive()));\r\n    }\r\n    if (this.game.round === 0 || this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.game.getActualPlayer().isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return fieldIndex !== 20 && !this.getAllEnabledFields().some(f => f === fieldIndex);\r\n    }\r\n    return this.getAllEnabledFields().some(f => f === fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return this.isFieldEnabled(fieldIndex);\r\n    }\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return this.isFieldEnabled(fieldIndex) && !this.isSecondaryField(fieldIndex);\r\n    }\r\n    return state.actField === fieldIndex;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return state.actField === fieldIndex;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return !p.isInactive() && p.life <= 3 && state.actField === fieldIndex;\r\n    })) {\r\n      return DANGER_ZONE_ICON;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owner = this.game.players.find(p => (p.state as KillerState).actField === fieldIndex);\r\n    return owner ? `${owner.name}(${owner.life})` : '';\r\n  }\r\n\r\n  getPlayerField(player: Player): string {\r\n    const fieldIndex = this.getPlayerState(player).actField;\r\n    return fieldIndex === 20 ? 'B' : (fieldIndex + 1) + '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new KillerState(this.settings.boardingLimit);\r\n      player.life = this.settings.numberOfLives;\r\n    });\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.boardingLimit + ',' + this.settings.numberOfLives;\r\n  }\r\n\r\n  private getAllEnabledFields(): number[] {\r\n    return this.game.players.filter(p => !p.isInactive())\r\n      .map(p => this.getPlayerState(p).actField);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Killer'\" [playground]=\"playground\"\r\n                [rules]=\"'Firstly each player draws lots i.e. a number between 1 - 20. Each player is then given ' +\r\n                 'between 3 & 5 lives. The objective of this game is for each thrower to first hit their own number ' +\r\n                  'three times to gain status of KILLER. Once they have achieved this they then can throw for their ' +\r\n                  'opponents number in any order they wish. Every time a KILLER status player hits an opponents ' +\r\n                  'number the opponent loses a life. KILLERS can also commit SUICIDE by hitting their own number\\'s ' +\r\n                  'triple. The winner of this game is the player that remains alive.'\">\r\n\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.suicide?'primary':''\"\r\n            (click)=\"settings.toggleSuicide()\">Suicide</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{player.isInactive() ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [highlighted]=\"getPlayerState(player).killer\">\r\n          <ng-container *ngIf=\"getPlayerField(player) !== '0'\">\r\n            <div class=\"score\"><label>Field: </label>{{getPlayerField(player)}}</div>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"score\">\r\n              <label>Life: </label>{{player.life}}\r\n              <ng-container *ngIf=\"!getPlayerState(player).killer\"><label>Boarding: </label>{{getPlayerState(player).boarding}}</ng-container>\r\n            </div>\r\n          </ng-container>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class KillerSettings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n  suicide: boolean;\r\n\r\n  constructor() {\r\n    this.suicide = false;\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n\r\n  toggleSuicide() {\r\n    this.suicide = !this.suicide;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(public boarding = 3) {\r\n    super();\r\n    this.actField = -1;\r\n    this.killer = false;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state = new KillerState(this.boarding);\r\n    state.actField = this.actField;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KnockoutSettings} from './models/knockout.settings.model';\r\nimport {KnockoutState} from './models/knockout.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './knockout.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KnockoutComponent extends Playground<KnockoutState> {\r\n\r\n  settings: KnockoutSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'knockout', 2);\r\n    this.settings = new KnockoutSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    player.score = player.getThrowsTotal();\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastThrow()) {\r\n      const score = this.getPlayerState(player).score;\r\n      if (score > player.getThrowsTotal()) {\r\n        player.life--;\r\n        this.soundService.no();\r\n      } else if (this.settings.killer && score !== 0 && score === player.getThrowsTotal()\r\n        && player.throwsHistory[player.throwsHistory.length - 1].score !== 0) {\r\n        this.game.getPreviousPlayer().life--;\r\n        this.soundService.no();\r\n      }\r\n      this.getPlayerState(this.game.getNextPlayer()).score = player.getThrowsTotal();\r\n      const activePlayers = this.game.getActivePlayers();\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !p.isInactive()));\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.game.getActualPlayer().isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new KnockoutState();\r\n      player.life = this.settings.numberOfLives;\r\n    });\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0;\r\n  }\r\n\r\n  getInfo(): number {\r\n    const player = this.game.getActualPlayer();\r\n    const state = this.getPlayerState(player);\r\n    return (state.score ? state.score : 0) - (this.game.actualThrow === 0 ? 0 : player.score);\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Knockout'\" [playground]=\"playground\"\r\n                [rules]=\"'The player selected to throw first must throw as many points as possible. The player next in ' +\r\n                 'line then must throw a higher score than the player throwing before him, if he fails to throw a ' +\r\n                  'higher score a ring is put around their score, once you have 3 rings next to your name, you drop ' +\r\n                   'out of the game.'\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <br/>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.killer ? 'primary' : ''\" (click)=\"settings.toggleKiller()\">\r\n      Below the belt\r\n    </button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" [info]=\"getInfo()\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{player.isInactive() ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"true\" [lifeDisplayed]=\"true\" [hasContent]=\"false\">\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {KnockoutComponent} from './knockout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KnockoutComponent}\r\n    ])\r\n  ],\r\n  declarations: [KnockoutComponent]\r\n})\r\nexport class KnockoutModule {\r\n}\r\n","export class KnockoutSettings {\r\n  numberOfLives: number;\r\n  killer: boolean;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 5;\r\n    this.killer = true;\r\n  }\r\n\r\n  toggleKiller() {\r\n    this.killer = !this.killer;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KnockoutState extends PlaygroundState {\r\n\r\n  constructor(public score = 0) {\r\n    super();\r\n  }\r\n\r\n  clone(): KnockoutState {\r\n    return new KnockoutState(this.score);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({position: 'relative'}),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({left: '-100%'})\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({left: '100%'}))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({left: '0%'}))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild(), {optional: true}),\r\n    ]),\r\n  ]);\r\n","import {CricketSettings} from '../../cricket/models/cricet.settings.model';\n\nexport class ScamSettings extends CricketSettings {\n\n  stopper = false;\n  punishment = false;\n\n  constructor() {\n   super();\n   this.style = 1;\n   this.all();\n  }\n\n  toggleStopper() {\n    this.stopper = !this.stopper;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n  }\n}\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {PlaygroundState} from '~models/playground-state.model';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {ScamSettings} from './models/scam.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\n\n@Component({\n  templateUrl: './scam.component.html',\n  animations: [slideInAnimation],\n})\nexport class ScamComponent extends Playground<PlaygroundState> {\n\n  settings: ScamSettings;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\n    super(application, game, route, dialogService, soundService, statisticsService, 'scam', 2);\n    this.settings = new ScamSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\n    if (!!this.game.numbs[fieldIndex]) {\n      if (this.settings.stopper && this.game.isTheFirstPlayer(player)) {\n        this.game.numbs[fieldIndex] = 0;\n      } else if(this.settings.stopper) {\n        player.score += (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier;\n      } else {\n        player.score += (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier;\n        this.game.numbs[fieldIndex] = 0;\n      }\n    } else if (this.settings.punishment && ((this.settings.stopper && !this.game.isTheFirstPlayer(player)) || !this.settings.stopper)) {\n      player.score -= (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier;\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    if(!this.game.numbs.find(n => n)) {\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\n    }\n    if (this.game.isTheLastThrow()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  isSecondaryField(fieldIndex: number): boolean {\n    return this.settings.punishment && !this.game.numbs[fieldIndex];\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return this.settings.punishment || !!this.game.numbs[fieldIndex];\n  }\n\n  customReset() {\n    this.game.numbs = this.settings.numbs.map(i => i ? 1 : 0);\n    this.settings.fields.forEach(f => this.settings.numbs[f] = true);\n  }\n\n  getGameConfig(): string {\n    return this.settings.fields.length + '';\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Scam'\" [playground]=\"playground\"\r\n                [rules]=\"'...'\">\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.stopper?'primary':''\"\r\n            (click)=\"settings.toggleStopper()\">Stopper\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.punishment?'primary':''\"\r\n            (click)=\"settings.togglePunishment()\">Punishment\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"\r\n          [highlighted]=\"settings.stopper && game.isTheFirstPlayer(player)\"\r\n          [scoreDisplayed]=\"!settings.stopper || !game.isTheFirstPlayer(player)\">\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ScamComponent} from './scam.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ScamComponent}\r\n    ])\r\n  ],\r\n  declarations: [ScamComponent]\r\n})\r\nexport class ScamModule {\r\n}\r\n","export class ShanghaiSettings {\r\n\r\n  fields: number[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: number): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: number): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: number, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state = new ShanghaiState();\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ShanghaiSettings} from './models/shanghai.settings.model';\r\nimport {ShanghaiState} from './models/shanghai.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './shanghai.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ShanghaiComponent extends Playground<ShanghaiState> {\r\n\r\n  settings: ShanghaiSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'shanghai');\r\n    this.settings = new ShanghaiSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isActiveField(fieldIndex)) {\r\n      state.increaseFieldCount(fieldIndex, 1);\r\n      state.increaseFieldScore(fieldIndex, this.multiplier);\r\n      if (this.settings.noScore) {\r\n        player.score += this.multiplier;\r\n      } else {\r\n        player.score += score * this.multiplier;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    // Shanghai rule\r\n    if (this.game.isTheLastThrow()) {\r\n      let multi = 1;\r\n      const fieldIndex = this.settings.fields[this.game.round];\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        if (t.score === Playground.getFieldValueFromIndex(fieldIndex)) {\r\n          multi *= (t.multi + 1);\r\n        }\r\n      }\r\n      if (multi === 1 && this.settings.halveIt) {\r\n        player.score = Math.round(player.score / 2);\r\n      }\r\n      player.setWin(multi === 24);\r\n      if (player.win) {\r\n        this.extraEndingMsg = 'SHANGHAI!!!';\r\n      }\r\n    }\r\n\r\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\r\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\r\n    if (gameEnded) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    } else if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n    if (fieldCount === 0) {\r\n      return '○○○';\r\n    } else {\r\n      let str = '' + this.getPlayerState(player).getFieldScore(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      for (let i = 0; i < fieldCount; i++) {\r\n        str += '●';\r\n      }\r\n      for (let i = fieldCount; i < 3; i++) {\r\n        str += '○';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ShanghaiState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  isActiveField(fieldIndex: number): boolean {\r\n    return this.settings.fields[this.game.round] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) < this.game.round;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) === this.game.round;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    let max = winners[0].score;\r\n    winners.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\r\n      const c = p.clone();\r\n      c.win = false;\r\n      return c;\r\n    });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + player.score + ((player.win && this.extraEndingMsg) ? ('/s') : '');\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length + ',' + (this.settings.halveIt ? '1' : '0');\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Shanghai / Halve It'\" [playground]=\"playground\"\r\n                [rules]=\"' Players start by throwing at the number 1 on the board. The object is to hit a single,' +\r\n                 'treble and double (in any order). This first player to hit a single, treble and double wins. If no' +\r\n                  'player achieves this on number 1, the play moves to number 2 and so on until someone wins.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.numbs[i]?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize()\">Randomize</button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.noScore?'primary':''\"\r\n            (click)=\"settings.toggleNoScore()\">No score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.halveIt?'primary':''\"\r\n            (click)=\"settings.toggleHalveIt()\">Halve It\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isFieldDoneForPlayer(field) ? '' : 'highlighted'}}\"\r\n                 *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'confirm-dialog.component.html',\r\n  styleUrls: ['confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }) {\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  confirm(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content\">\r\n    <p>{{ data.content }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [color]=\"'primary'\" (click)=\"confirm()\">OK</button>\r\n    <button mat-raised-button [color]=\"'secondary'\" (click)=\"cancel()\">Cancel</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  templateUrl: 'darts-table-dialog.component.html',\r\n  styleUrls: ['darts-table-dialog.component.scss']\r\n})\r\nexport class DartsTableDialogComponent {\r\n\r\n  constructor(protected dialogRef: MatDialogRef<DartsTableDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { field: [], primary: [], secondary: [] }) {\r\n  }\r\n\r\n  isPrimary(index: number): boolean {\r\n    return this.data.primary.some(p => p === index);\r\n  }\r\n\r\n  isSecondary(index: number): boolean {\r\n    return this.data.secondary.some(p => p === index);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container darts-table-container\">\r\n  <mat-dialog-content class=\"body-2\" (click)=\"close()\">\r\n    <svg viewBox=\"0 0 600 600\">\r\n      <g>\r\n        <ellipse stroke=\"#000\" stroke-width=\"28\" ry=\"255.21392\" rx=\"255.21392\" id=\"svg_1\" cy=\"299.99999\" cx=\"300\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n        <ellipse stroke=\"#000\" stroke-width=\"5\" fill-opacity=\"0\" ry=\"234.85655\" rx=\"234.85655\" id=\"svg_44\" cy=\"299.99999\" cx=\"300.00001\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n        <ellipse stroke=\"#000\" stroke-width=\"14\" ry=\"17.42588\" rx=\"17.42588\" id=\"svg_2\" cy=\"300\" cx=\"300\" opacity=\"NaN\" fill=\"#ffffff\"/>\r\n        <line transform=\"rotate(-9 300 300)\" id=\"svg_7\" y2=\"543.61446\" x2=\"300\" y1=\"56.38556\" x1=\"300\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(27 300 300)\" id=\"svg_8\" y2=\"543.61446\" x2=\"300\" y1=\"56.38556\" x1=\"300\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(63 300.741 300)\" id=\"svg_9\" y2=\"543.61443\" x2=\"300.74077\" y1=\"56.38553\" x1=\"300.74077\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(135 300 300)\" id=\"svg_10\" y2=\"543.61445\" x2=\"300.00003\" y1=\"56.38555\" x1=\"300.00003\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(99 300 300)\" id=\"svg_11\" y2=\"543.61444\" x2=\"300.00002\" y1=\"56.38554\" x1=\"300.00002\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(45 300 300)\" stroke=\"#000\" id=\"svg_16\" y2=\"543.61444\" x2=\"300.00002\" y1=\"56.38554\" x1=\"300.00002\" stroke-width=\"5\" fill=\"none\"/>\r\n        <line transform=\"rotate(9 300 300)\" id=\"svg_17\" y2=\"543.61446\" x2=\"300.00001\" y1=\"56.38556\" x1=\"300.00001\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(82 300.741 300)\" id=\"svg_18\" y2=\"543.61443\" x2=\"300.74077\" y1=\"56.38553\" x1=\"300.74077\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(117 300 300)\" id=\"svg_19\" y2=\"543.61444\" x2=\"300.00002\" y1=\"56.38554\" x1=\"300.00002\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(153 300 300)\" id=\"svg_20\" y2=\"543.61445\" x2=\"300.00003\" y1=\"56.38555\" x1=\"300.00003\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_21\" y=\"101.43315\" x=\"282.14266\" stroke=\"#000\" fill=\"#000000\">20</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_22\" y=\"112.14756\" x=\"353.57205\" stroke=\"#000\" fill=\"#000000\">1</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_23\" y=\"142.1479\" x=\"403.57262\" stroke=\"#000\" fill=\"#000000\">18</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_24\" y=\"186.43412\" x=\"459.28754\" stroke=\"#000\" fill=\"#000000\">4</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_25\" y=\"245.72052\" x=\"479.28777\" stroke=\"#000\" fill=\"#000000\">13</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_26\" y=\"312.14984\" x=\"500.71658\" stroke=\"#000\" fill=\"#000000\">6</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_27\" y=\"374.29341\" x=\"480.71635\" stroke=\"#000\" fill=\"#000000\">10</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_28\" y=\"430.72262\" x=\"452.1446\" stroke=\"#000\" fill=\"#000000\">15</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_29\" y=\"477.15173\" x=\"417.1442\" stroke=\"#000\" fill=\"#000000\">2</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_30\" y=\"506.43778\" x=\"347.1434\" stroke=\"#000\" fill=\"#000000\">17</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_31\" y=\"518.58076\" x=\"289.2856\" stroke=\"#000\" fill=\"#000000\">3</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_32\" y=\"508.58065\" x=\"216.42762\" stroke=\"#000\" fill=\"#000000\">19</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_33\" y=\"477.15172\" x=\"169.28422\" stroke=\"#000\" fill=\"#000000\">7</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_34\" y=\"431.43692\" x=\"110.71213\" stroke=\"#000\" fill=\"#000000\">16</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_35\" y=\"372.15053\" x=\"90.71191\" stroke=\"#000\" fill=\"#000000\">8</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_36\" y=\"306.43548\" x=\"72.14025\" stroke=\"#000\" fill=\"#000000\">11</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_37\" y=\"244.29192\" x=\"83.56896\" stroke=\"#000\" fill=\"#000000\">14</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_38\" y=\"185.71982\" x=\"122.14082\" stroke=\"#000\" fill=\"#000000\">9</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_39\" y=\"140.71931\" x=\"162.14128\" stroke=\"#000\" fill=\"#000000\">12</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_40\" y=\"112.14755\" x=\"227.85631\" stroke=\"#000\" fill=\"#000000\">5</text>\r\n        <text stroke-opacity=\"0\" font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_41\" y=\"310.35406\" x=\"289.21193\" stroke=\"#0f0f00\" fill=\"#ffffff\">B</text>\r\n        <ellipse stroke=\"#000\" stroke-width=\"5\" fill-opacity=\"0\" ry=\"148.78414\" rx=\"148.78414\" id=\"svg_46\" cy=\"299.99999\" cx=\"300\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n        <ellipse stroke=\"#000\" stroke-width=\"5\" fill-opacity=\"0\" ry=\"139.85547\" rx=\"139.85547\" id=\"svg_47\" cy=\"299.99998\" cx=\"300.00001\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n      </g>\r\n    </svg>\r\n    <div *ngFor=\"let f of data.field\" class=\"clip darts-table-field-{{f}}\"\r\n         [class.primary]=\"isPrimary(f)\" [class.secondary]=\"isSecondary(f)\"></div>\r\n  </mat-dialog-content>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content || !!data.players.length\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {STAT_NAME_SEPARATOR} from '~services/statistics.service';\r\nimport {environment} from '../../../../environments/environment';\r\n\r\n@Component({\r\n  templateUrl: 'game-history-dialog.component.html',\r\n  styleUrls: ['game-history-dialog.component.scss']\r\n})\r\nexport class GameHistoryDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameHistoryDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: GameStatistics[] }) {\r\n    data.statistics.sort((a, b) => new Date(b.s).getTime() - new Date(a.s).getTime());\r\n  }\r\n\r\n  getDuration(stat: GameStatistics): Date {\r\n    return new Date(new Date(stat.f).getTime() - new Date(stat.s).getTime());\r\n  }\r\n\r\n  getPlayers(players: string[]): string[] {\r\n    return players.map(p => {\r\n      const pna = p.split(STAT_NAME_SEPARATOR);\r\n      let result = pna[0];\r\n      if (pna.length === 2) {\r\n        result += '(' + pna[1] + ')';\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getAppVersion(): string {\r\n    return environment.appVersion ? environment.appVersion : '';\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\">\r\n    <p>History</p>\r\n    <p>v{{ getAppVersion() }}</p>\r\n  </div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Date</th>\r\n        <th>Duration</th>\r\n        <th>Type</th>\r\n        <th>Config</th>\r\n        <th>Round</th>\r\n        <th>Winner(s)</th>\r\n        <th>Loser(s)</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.s | date:'medium' }}</td>\r\n        <td>{{ getDuration(stat) | date: 'mm:ss' }}</td>\r\n        <td>{{ stat.g }}</td>\r\n        <td>{{ stat.c }}</td>\r\n        <td>{{ stat.r + 1 }}</td>\r\n        <td>{{ getPlayers(stat.w) }}</td>\r\n        <td>{{ getPlayers(stat.l) }}</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\n\r\n@Component({\r\n  templateUrl: 'game-statistics-dialog.component.html',\r\n  styleUrls: ['game-statistics-dialog.component.scss']\r\n})\r\nexport class GameStatisticsDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameStatisticsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: PlayerStatistics[] }) {\r\n    data.statistics.sort((a, b) => this.getRatio(b) - this.getRatio(a));\r\n  }\r\n\r\n  getRatio(stat: PlayerStatistics): number {\r\n    return Math.round(stat.w / (stat.w + stat.l) * 100);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>Statistics</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Player</th>\r\n        <th>Wins</th>\r\n        <th>Loses</th>\r\n        <th>All</th>\r\n        <th>Rate</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.n }}</td>\r\n        <td>{{ stat.w }}</td>\r\n        <td>{{ stat.l }}</td>\r\n        <td>{{ stat.l + stat.w }}</td>\r\n        <td>{{ getRatio(stat) }} %</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() reversRound: number;\r\n  @Input() info: number;\r\n\r\n  constructor(public route: Router,\r\n              public application: ApplicationStateService,\r\n              private dialogService: DialogService) {\r\n  }\r\n\r\n  quit() {\r\n    this.showConfirmation('Are you sure you want to navigate away from this page?', () => {\r\n      this.route.navigate(['/']);\r\n      this.playground.game.resetScore();\r\n      this.playground.multiplier = 1;\r\n      this.playground.extraEndingMsg = '';\r\n    });\r\n  }\r\n\r\n  newGame() {\r\n    this.showConfirmation('Are you sure you want to start a new game?', () => {\r\n      this.playground.newGame(true);\r\n    });\r\n  }\r\n\r\n  showSettings() {\r\n    this.showConfirmation('Are you sure you want to navigate to the settings page?', () => {\r\n      this.playground.reset();\r\n      this.playground.settingsOpen = true;\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    this.playground.undo();\r\n  }\r\n\r\n  showTable() {\r\n    const enabledFields: number[] = [];\r\n    const primaryFields: number[] = [];\r\n    const secondaryFields: number[] = [];\r\n    for (let i = 0; i <= 20; i++) {\r\n      if (this.playground.isFieldEnabled(i)) {\r\n        enabledFields.push(i);\r\n      }\r\n      if (this.playground.isPrimaryField(i)) {\r\n        primaryFields.push(i);\r\n      }\r\n      if (this.playground.isSecondaryField(i)) {\r\n        secondaryFields.push(i);\r\n      }\r\n    }\r\n    this.dialogService.openDartsTable(enabledFields, primaryFields, secondaryFields);\r\n  }\r\n\r\n  getInfo(): number {\r\n    return this.info || this.info === 0 ? this.info : this.getRound();\r\n  }\r\n\r\n  private showConfirmation(content: string, callback: () => void) {\r\n    if (this.playground.gameHistory.length) {\r\n      this.dialogService.openConfirmDialog('Confirmation', content)\r\n        .afterClosed().subscribe(data => {\r\n        if (data) {\r\n          callback();\r\n        }\r\n      });\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private getRound(): number {\r\n    const round = this.playground.game.round;\r\n    return this.reversRound ? (this.reversRound - round) : (round + 1);\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <button mat-raised-button (click)=\"newGame()\">\r\n    <mat-icon>refresh</mat-icon>\r\n  </button>\r\n  <button mat-raised-button (click)=\"undo()\">\r\n    <mat-icon>undo</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"round-info\" (click)=\"showTable()\" [class.detailed]=\"application.settings.details\">\r\n  {{getInfo()}}\r\n</div>\r\n\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"quit()\" color=\"primary\"><mat-icon>menu</mat-icon></button>\r\n  <button mat-icon-button (click)=\"showSettings()\" color=\"primary\"><mat-icon>build</mat-icon></button>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\n\r\n@Component({\r\n  templateUrl: 'game-type-statistics-dialog.component.html',\r\n  styleUrls: ['game-type-statistics-dialog.component.scss']\r\n})\r\nexport class GameTypeStatisticsDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameTypeStatisticsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: GameTypeStatistics[] }) {\r\n    data.statistics.sort((a, b) => b.count - a.count);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>Most Popular Games</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Game title</th>\r\n        <th>Count</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.name }}</td>\r\n        <td>{{ stat.count }}</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Router, Routes} from '@angular/router';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {routes} from '../../../app-game-types';\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  constructor(private readonly router: Router,\r\n              private readonly dialog: DialogService,\r\n              private readonly statisticsService: StatisticsService) {\r\n  }\r\n\r\n  randomGame() {\r\n    const random = Math.floor(Math.random() * routes.length);\r\n    this.router.navigate(['/' + routes[random].path]);\r\n  }\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n\r\n  openGameTypeStatistics() {\r\n    this.dialog.openGameTypeStatistics(this.statisticsService.getGameTypeStatistics());\r\n    // this.statisticsService.printStatistics();\r\n  }\r\n\r\n  openGameStatistics() {\r\n    this.dialog.openGameHistory(this.statisticsService.getGameStatistics());\r\n  }\r\n}\r\n","<div id=\"menu_title\">\n  <h1 (click)=\"randomGame()\">Select Game!</h1>\n</div>\n<div id=\"menu\">\n  <div class=\"button-line\" *ngFor=\"let k of [0,1,2,3]\">\n    <button mat-raised-button *ngFor=\"let g of getGameList().slice(k*3,k*3 + 3); let i = index\"\n                     [routerLink]=\"['/' + g.path]\" class=\"gameSelectBox {{'menu-button-' + k + '' + i}}\">\n      <mat-icon>{{g.data.icon}}</mat-icon>\n      <div class=\"title\">{{g.data.name}}</div>\n    </button>\n  </div>\n</div>\n<div class=\"version\">\n  <button mat-icon-button (click)=\"openGameTypeStatistics()\" [color]=\"'primary'\">\n    <mat-icon>stars</mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"openGameStatistics()\" [color]=\"'primary'\">\n    <mat-icon>history</mat-icon>\n  </button>\n</div>\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService,\r\n              public application: ApplicationStateService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isPrimaryField(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondaryField(fieldIndex)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabled(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  throwNumber(fieldIndex: number) {\r\n    this.playground.throwNumber([this.playground.isFieldEnabled(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0,\r\n      Playground.getFieldValueFromIndex(fieldIndex)]);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\" [class.detailed]=\"application.settings.details\">\r\n\r\n  <ng-container *ngFor=\"let i of getNumbers()\">\r\n    <button mat-raised-button class=\"number\" [color]=\"getNumberColor(i-1)\"\r\n            [disabled]=\"isNumberDisabled(i-1)\" (click)=\"throwNumber(i-1)\">\r\n      {{i}}\r\n      <mat-icon *ngIf=\"playground.getFieldIcon(i-1)\">{{ playground.getFieldIcon(i-1)}}</mat-icon>\r\n      <p class=\"field-note\" *ngIf=\"playground.getFieldNote(i-1)\">{{ playground.getFieldNote(i-1)}}</p>\r\n      <p class=\"field-note-bottom\" *ngIf=\"playground.getFieldNoteBottom(i-1)\">{{ playground.getFieldNoteBottom(i-1)}}</p>\r\n    </button>\r\n  </ng-container>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"getNumberColor(20)\" [disabled]=\"isNumberDisabled(20)\"\r\n          (click)=\"throwNumber(20)\">\r\n    Bull\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(20)\">{{ playground.getFieldIcon(20)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(20)\">{{ playground.getFieldNote(20)}}</p>\r\n    <p class=\"field-note-bottom\" *ngIf=\"playground.getFieldNoteBottom(20)\">{{ playground.getFieldNoteBottom(20)}}</p>\r\n  </button>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 2 ? 'primary' : ''\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">2x</button>\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 3 ? 'primary' : ''\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">3x</button>\r\n\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.throwNumber([0,0])\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-player-score',\r\n  templateUrl: './player-score.component.html',\r\n  styleUrls: ['./player-score.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PlayerScoreComponent {\r\n  @Input() player: Player;\r\n  @Input() hasContent = true;\r\n  @Input() scoreDisplayed = true;\r\n  @Input() lifeDisplayed = false;\r\n  @Input() highlighted = false;\r\n\r\n  constructor(public readonly application: ApplicationStateService) {\r\n  }\r\n}\r\n","<div class=\"player_info\">\r\n  <div class=\"name\"><mat-icon *ngIf=\"highlighted\">offline_bolt</mat-icon>{{player.name}}</div>\r\n  <div class=\"shoots\">\r\n    <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\r\n    <div class=\"shoot total\">{{!player.getThrowsTotal() ? '0' : player.getThrowsTotal()}}</div>\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n  <div class=\"line\" *ngIf=\"hasContent && application.settings.details\"></div>\r\n  <ng-content *ngIf=\"application.settings.details\"></ng-content>\r\n  <div class=\"line-space\" *ngIf=\"scoreDisplayed || lifeDisplayed\"></div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed && !lifeDisplayed\">{{player.score}}</div>\r\n  <div class=\"score\" *ngIf=\"!scoreDisplayed && lifeDisplayed\"><label>Life: </label>{{player.life}}</div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed && lifeDisplayed\">\r\n    <label>Life: </label>{{player.life}}\r\n    <label>Score: </label>{{player.score}}\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'app-player-settings',\r\n  templateUrl: './player-settings.component.html',\r\n  styleUrls: ['./player-settings.component.scss']\r\n})\r\nexport class PlayerSettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  storedPlayers = [];\r\n\r\n  constructor(private application: ApplicationStateService) {\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  getOptions() {\r\n    return this.storedPlayers.filter(o => this.playground.game.players\r\n      .map(p => p.name).indexOf(o) === -1);\r\n  }\r\n\r\n  addPlayer(playerNameInput: any) {\r\n    this.playground.addPlayer(playerNameInput);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  playerSelected(event: MatAutocompleteSelectedEvent, playerNameInput: HTMLInputElement) {\r\n    this.playground.addPlayer(event.option);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n    playerNameInput.value = '';\r\n    playerNameInput.blur();\r\n  }\r\n}\r\n","<div class=\"add-player\">\r\n  <mat-form-field appearance=\"outline\" class=\"big\">\r\n    <mat-label>Player name</mat-label>\r\n    <input #playerNameInput type=\"text\" matInput placeholder=\"Enter name\"\r\n      [disabled]=\"!playground.canAddPlayer()\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"playerSelected($event, playerNameInput)\">\r\n      <mat-option *ngFor=\"let option of getOptions()\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button mat-icon-button (click)=\"addPlayer(playerNameInput)\" [disabled]=\"!playground.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button>\r\n</div>\r\n<div class=\"player-table\">\r\n  <div class=\"player-row\" *ngFor=\"let player of playground.game.players; let i = index\">\r\n    <div class=\"player-name\">{{player.name}}</div>\r\n    <button mat-icon-button (click)=\"playground.removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\r\n  </div>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() title: string;\r\n  @Input() rules: string;\r\n\r\n  constructor(private readonly dialogService: DialogService) {\r\n  }\r\n\r\n  openRules() {\r\n    this.dialogService.openDialog(this.title, this.rules);\r\n  }\r\n\r\n  openStatistics() {\r\n    this.dialogService.openGameStatisticsDialog(this.playground.getGameStatistics());\r\n  }\r\n\r\n  openHistory() {\r\n    this.dialogService.openGameHistory(this.playground.getGameHistory());\r\n  }\r\n}\r\n","<div class=\"settings\">\r\n  <h1>{{title}} Settings</h1>\r\n\r\n  <h2>Players</h2>\r\n  <app-player-settings [playground]=\"playground\"></app-player-settings>\r\n  <mat-divider></mat-divider>\r\n\r\n  <ng-content></ng-content>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <br/><br/>\r\n  <button mat-raised-button class=\"button shortmedium\" (click)=\"openStatistics()\">Player rank</button>\r\n  <button mat-raised-button class=\"button shortmedium\" (click)=\"openHistory()\">Game history</button>\r\n  <button mat-raised-button class=\"button shortmedium\" (click)=\"openRules()\">Rules</button>\r\n  <mat-divider></mat-divider>\r\n  <button mat-raised-button class=\"button big\" color=\"primary\" (click)=\"playground.newGame()\">Start</button>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.quit()\">Cancel</button>\r\n\r\n</div>\r\n","export class ApplicationSettings {\r\n  theme = 0;\r\n  details = 0;\r\n}\r\n","export class FieldValue {\n  field: number;\n  value: number;\n\n  constructor(field: number, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","export class GameStatistics {\r\n  g: string;\r\n  w: string[];\r\n  l: string[];\r\n  r: number;\r\n  s: string;\r\n  f: string;\r\n  c?: string;\r\n}\r\n","import {Throw} from './throw.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class Player {\r\n  score = 0;\r\n  throws: number[] = [];\r\n  throwsHistory: Throw[];\r\n  win = false;\r\n  winDateTime = 0;\r\n  first = true;\r\n  state: PlaygroundState;\r\n  life = 1;\r\n\r\n  constructor(public id: number, public name = '') {\r\n  }\r\n\r\n  setWin(win = true) {\r\n    this.win = win;\r\n    this.winDateTime = win ? new Date().getTime() : 0;\r\n  }\r\n\r\n  getThrowsTotal(): number {\r\n    return this.throws.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  addThrowHistory(thr: Throw) {\r\n    this.throwsHistory.push(thr);\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n    this.throws = [];\r\n    this.throwsHistory = [];\r\n    this.win = false;\r\n    this.winDateTime = 0;\r\n    this.first = true;\r\n  }\r\n\r\n  clone(): Player {\r\n    const player = new Player(this.id, this.name);\r\n    player.score = this.score;\r\n    player.life = this.life;\r\n    player.throws = [];\r\n    this.throws.forEach(t => {\r\n      player.throws.push(t);\r\n    });\r\n    player.throwsHistory = this.throwsHistory;\r\n    player.win = this.win;\r\n    player.winDateTime = this.winDateTime;\r\n    player.first = this.first;\r\n    player.throwsHistory = [];\r\n    this.throwsHistory.forEach(throws => {\r\n      player.throwsHistory.push(throws.clone());\r\n    });\r\n    if (this.state) {\r\n      player.state = this.state.clone();\r\n    }\r\n    return player;\r\n  }\r\n}\r\n","import {FieldValue} from './field-value.model';\r\n\r\nexport abstract class PlaygroundState {\r\n\r\n  getFieldValue(list: FieldValue[], fieldIndex: number): FieldValue {\r\n    const filtered = list.filter(f => f.field === fieldIndex);\r\n    if (filtered.length === 0) {\r\n      list.push(new FieldValue(fieldIndex, 0));\r\n    }\r\n    return list.filter(f => f.field === fieldIndex)[0];\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return false;\r\n  }\r\n\r\n  abstract clone(): PlaygroundState;\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {Player} from './player.model';\r\nimport {Throw} from './throw.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {GameService} from '~services/game.service';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\n\r\nexport const FIELDS_COUNT = 21;\r\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\r\n\r\nexport abstract class Playground<T extends PlaygroundState> implements OnInit {\r\n\r\n  throwEnabled = true;\r\n  settingsOpen = true;\r\n  gameHistory: GameService[];\r\n  nextEnabled = true;\r\n  zeroEnabled = true;\r\n  multiEnabled = true;\r\n  playground = this;\r\n  multiplier: number;\r\n  extraEndingMsg: string;\r\n  gameStatistics: GameStatistics;\r\n\r\n  protected constructor(public application: ApplicationStateService,\r\n                        public game: GameService,\r\n                        public route: Router,\r\n                        public dialogService: DialogService,\r\n                        public soundService: SoundService,\r\n                        public statisticsService: StatisticsService,\r\n                        public gameName: string,\r\n                        public minimumNumberOfPlayers = 1,\r\n                        public maximumNumberOfPlayers?: number) {\r\n  }\r\n\r\n  static getFieldValueFromIndex(fieldIndex: number): number {\r\n    return fieldIndex === 20 ? 25 : fieldIndex + 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.settingsOpen = true;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  throwNumber(args: number[]) {\r\n    const score = args[0];\r\n    const scoreReal = args[1];\r\n    if (this.throwEnabled) {\r\n      this.saveGameInHistory();\r\n      this.throwEnabled = false;\r\n      if (score === 25 && this.multiplier === 3) {\r\n        this.multiplier = 1;\r\n      }\r\n\r\n      const actualPlayer = this.game.getActualPlayer();\r\n      const fieldIndex = score === 25 ? 20 : score - 1;\r\n\r\n      actualPlayer.addThrowHistory(new Throw(score, this.multiplier, this.game.actualThrow));\r\n      if (this.game.actualThrow === 0) {\r\n        actualPlayer.throws = [];\r\n      }\r\n      actualPlayer.throws[this.game.actualThrow] = score * this.multiplier;\r\n      this.game.actualThrow++;\r\n\r\n      this.calculatePoints(actualPlayer, fieldIndex, score, scoreReal);\r\n      this.checkPlayerState(actualPlayer);\r\n\r\n      this.multiplier = 1;\r\n      const winners = this.game.players.filter(p => p.win);\r\n      if (winners.length > 0) {\r\n        if ((this.game.victoryFirst || this.game.getNumberOfPlayers() - winners.length <= 1) || !this.game.victoryFirst) {\r\n          const content = this.extraEndingMsg ? this.extraEndingMsg : 'Round: #' + (this.game.round + 1);\r\n          this.finishStatistics();\r\n          this.dialogService.openDialog('Game Over!', content, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else {\r\n          while (this.game.getActualPlayer().win) {\r\n            this.game.nextPlayer();\r\n          }\r\n        }\r\n      }\r\n\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p) || !this.getPlayerState(p).isInactive());\r\n      if (!activePlayers.length) {\r\n        const content = this.extraEndingMsg ? this.extraEndingMsg : 'Round: #' + (this.game.round + 1);\r\n        this.finishStatistics();\r\n        this.dialogService.openDialog('Game Over!', content, this.getTheFinalResult());\r\n        this.newGame(true);\r\n      }\r\n\r\n      this.throwEnabled = true;\r\n    }\r\n  }\r\n\r\n  getPlayerState(player: Player): T {\r\n    return player.state as T;\r\n  }\r\n\r\n  canAddPlayer(): boolean {\r\n    return this.game.getNumberOfPlayers() < MAXIMUM_NUMBER_OF_PLAYERS;\r\n  }\r\n\r\n  addPlayer(name: any) {\r\n    if (!!name.value.trim().length && !this.game.players.some(p => p.name === name.value)) {\r\n      this.game.players.push(new Player(uuid(), name.value));\r\n      this.application.storePlayer(name.value);\r\n    }\r\n    name.value = '';\r\n  }\r\n\r\n  removePlayer(player: Player) {\r\n    this.game.players = this.game.players.filter(p => p !== player);\r\n  }\r\n\r\n  newGame(rotate = false) {\r\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\r\n    if (!this.playerSettingsValidation()) {\r\n      let msg = 'Number of players are incorrect.';\r\n      if (this.minimumNumberOfPlayers) {\r\n        msg += ` (minimum: ${this.minimumNumberOfPlayers}`;\r\n      }\r\n      if (this.maximumNumberOfPlayers) {\r\n        msg += (this.minimumNumberOfPlayers ? ', ' : ' (') + `maximum: ${this.maximumNumberOfPlayers}).`;\r\n      } else {\r\n        msg += this.minimumNumberOfPlayers ? ').' : '.';\r\n      }\r\n      this.dialogService.openErrorDialog('Error!', msg);\r\n    } else if (this.settingsOpen) {\r\n      this.dialogService.openErrorDialog('Error!', 'Settings is incorrect.');\r\n    }\r\n    if (rotate) {\r\n      this.game.rotatePlayers();\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  triplePoint() {\r\n    this.multiplier = this.multiplier === 3 ? 1 : 3;\r\n  }\r\n\r\n  doublePoint() {\r\n    this.multiplier = this.multiplier === 2 ? 1 : 2;\r\n  }\r\n\r\n  undo() {\r\n    if (this.gameHistory.length > 0) {\r\n      this.game = this.gameHistory.pop();\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    const actThrow = this.game.actualThrow;\r\n    this.throwNumber([0, 0]);\r\n    if (actThrow !== 2) {\r\n      this.skip();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.gameHistory = [];\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n    this.game.actualFieldIndex = 0;\r\n    this.customReset();\r\n    this.startStatistics();\r\n  }\r\n\r\n  quit() {\r\n    this.reset();\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNoteBottom(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + player.score;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return '';\r\n  }\r\n\r\n  getGameStatistics(): PlayerStatistics[] {\r\n    const statistics = this.statisticsService.getGameStatistics(this.playground.gameName);\r\n    const players: PlayerStatistics[] = [];\r\n    statistics.forEach(stat => {\r\n      this.parseStatistics(stat, 'l', players);\r\n      this.parseStatistics(stat, 'w', players);\r\n    });\r\n    return players;\r\n  }\r\n\r\n  getGameHistory(): GameStatistics[] {\r\n    return this.statisticsService.getGameStatistics(this.playground.gameName);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    winners = winners.sort((p1, p2) => p1.winDateTime < p2.winDateTime ? -1 : 1)\r\n      .slice(0, 1).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id))\r\n      .map(p => {\r\n        const c = p.clone();\r\n        c.win = false;\r\n        return c;\r\n      });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  private startStatistics() {\r\n    this.gameStatistics = new GameStatistics();\r\n    this.gameStatistics.s = new Date().toISOString();\r\n    this.gameStatistics.g = this.gameName;\r\n  }\r\n\r\n  private finishStatistics() {\r\n    this.gameStatistics.f = new Date().toISOString();\r\n    this.gameStatistics.w = this.game.players.filter(p => p.win).map(p => this.decoratePlayerStat(p));\r\n    this.gameStatistics.l = this.game.players.filter(p => !p.win).map(p => this.decoratePlayerStat(p));\r\n    this.gameStatistics.r = this.game.round;\r\n    this.gameStatistics.c = this.getGameConfig();\r\n    this.statisticsService.saveStatistics(this.gameStatistics);\r\n  }\r\n\r\n  private parseStatistics(stat: GameStatistics, field: 'w' | 'l', players: PlayerStatistics[]) {\r\n    stat[field].forEach(p => {\r\n      const name = p.split(STAT_NAME_SEPARATOR)[0];\r\n      let player = players.find(pl => pl.n === name);\r\n      if (!player) {\r\n        player = {n: name, w: 0, l: 0};\r\n        players.push(player);\r\n      }\r\n      player[field]++;\r\n    });\r\n  }\r\n\r\n  private playerSettingsValidation(): boolean {\r\n    const players: Player[] = [];\r\n    this.game.players.forEach(player => {\r\n      if (player.name.length !== 0) {\r\n        players.push(player);\r\n      }\r\n    });\r\n    this.game.players = players;\r\n    return players.length >= this.minimumNumberOfPlayers &&\r\n      (!this.maximumNumberOfPlayers || players.length <= this.maximumNumberOfPlayers);\r\n  }\r\n\r\n  private saveGameInHistory() {\r\n    this.gameHistory.push(this.game.clone());\r\n  }\r\n\r\n  abstract customReset(): void;\r\n\r\n  abstract calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal?: number);\r\n\r\n  abstract checkPlayerState(player: Player);\r\n}\r\n","export class Throw {\n  field: string;\n\n  constructor(public score: number, public multi: number, public order: number) {\n    this.field = this.score === 25 ? 'B' :  this.score + '';\n  }\n\n  clone(): Throw {\n    return new Throw(this.score, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {ApplicationSettings} from '~models/application-settings.model';\r\n\r\nconst APPLICATION_KEY = 'ApplicationSettings';\r\nconst PLAYER_KEY = 'Players';\r\nconst THEMES = ['light-theme', 'light-theme-blue', 'dark-theme', 'dark-red'];\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApplicationStateService {\r\n\r\n  settings = new ApplicationSettings();\r\n\r\n  constructor() {\r\n    const data = localStorage.getItem(APPLICATION_KEY);\r\n    if (data) {\r\n      this.settings = JSON.parse(data);\r\n    }\r\n    this.setTheme();\r\n  }\r\n\r\n  toggleColorTheme() {\r\n    this.settings.theme = (this.settings.theme + 1) % THEMES.length;\r\n    this.setTheme();\r\n    this.saveSettings();\r\n  }\r\n\r\n  toggleDetails() {\r\n    this.settings.details = (this.settings.details + 1) % 2;\r\n    this.saveSettings();\r\n  }\r\n\r\n  getStoredPlayers(): string[] {\r\n    const data = localStorage.getItem(PLAYER_KEY);\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  storePlayer(name: string) {\r\n    const players = [name, ...this.getStoredPlayers()].filter((v, i, a) => a.indexOf(v) === i);\r\n    localStorage.setItem(PLAYER_KEY, JSON.stringify(players));\r\n  }\r\n\r\n  private setTheme() {\r\n    THEMES.forEach(theme => {\r\n      document.body.className = document.body.className.replace(theme, '');\r\n    });\r\n    document.body.classList.add(THEMES[this.settings.theme]);\r\n  }\r\n\r\n  private saveSettings() {\r\n    localStorage.setItem(APPLICATION_KEY, JSON.stringify(this.settings));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\nimport {DartsTableDialogComponent} from '~components/darts-table/darts-table-dialog.component';\r\nimport {ConfirmDialogComponent} from '~components/confirm-dialog/confirm-dialog.component';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\nimport {GameStatisticsDialogComponent} from '~components/game-statistics-dialog/game-statistics-dialog.component';\r\nimport {GameHistoryDialogComponent} from '~components/game-history-dialog/game-history-dialog.component';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\nimport {GameTypeStatisticsDialogComponent} from '~components/game-type-statistics-dialog/game-type-statistics-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n\r\n  openGameStatisticsDialog(statistics: PlayerStatistics[]) {\r\n    return this.dialog.open(GameStatisticsDialogComponent, {\r\n      data: {statistics},\r\n    });\r\n  }\r\n\r\n  openGameHistory(statistics: GameStatistics[]) {\r\n    return this.dialog.open(GameHistoryDialogComponent, {\r\n      data: {statistics},\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n  }\r\n\r\n  openGameTypeStatistics(statistics: GameTypeStatistics[]) {\r\n    return this.dialog.open(GameTypeStatisticsDialogComponent, {\r\n      data: {statistics},\r\n    });\r\n  }\r\n\r\n  openErrorDialog(title = '', content = ''): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'error-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n\r\n  openConfirmDialog(title = '', content = ''): MatDialogRef<ConfirmDialogComponent> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      panelClass: 'confirm-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n\r\n  openDartsTable(fieldIndexes: number[], primaryFieldIndexes: number[], secondaryFields: number[]) {\r\n    return this.dialog.open(DartsTableDialogComponent, {\r\n      data: {field: fieldIndexes, primary: primaryFieldIndexes, secondary: secondaryFields}\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Player} from '../models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GameService {\r\n  players: Player[] = [];\r\n  actualPlayerIndex: number;\r\n  actualThrow: number;\r\n  actualFieldIndex = 0;\r\n  round: number;\r\n  victoryFirst = true;\r\n  numbs: number[] = [];\r\n\r\n  toggleVictoryFirst() {\r\n    this.victoryFirst = !this.victoryFirst;\r\n  }\r\n\r\n  isTheLastThrow(): boolean {\r\n    return this.actualThrow === 3;\r\n  }\r\n\r\n  getActualPlayer(): Player {\r\n    return this.players[this.actualPlayerIndex];\r\n  }\r\n\r\n  getActivePlayers(): Player[] {\r\n    return this.players.filter(p => !p.isInactive());\r\n  }\r\n\r\n  getNextPlayer(): Player {\r\n    let index = this.actualPlayerIndex + 1 === this.players.length ? 0 : this.actualPlayerIndex + 1;\r\n    while (this.players[index].isInactive()) {\r\n      index = index + 1 === this.players.length ? 0 : index + 1;\r\n    }\r\n    return this.players[index];\r\n  }\r\n\r\n  getPreviousPlayer(): Player {\r\n    let index = this.actualPlayerIndex === 0 ? this.players.length - 1 : this.actualPlayerIndex - 1;\r\n    while (this.players[index].isInactive()) {\r\n      index = index === 0 ? this.players.length - 1 : index - 1;\r\n    }\r\n    return this.players[index];\r\n  }\r\n\r\n  nextPlayer(): void {\r\n    if (this.isActualPlayerTheLast()) {\r\n      this.nextRound();\r\n    }\r\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\r\n    this.actualThrow = 0;\r\n  }\r\n\r\n  getNumberOfPlayers(): number {\r\n    return this.players.length;\r\n  }\r\n\r\n  getTheFirstPlayer(): Player {\r\n    return this.players[0];\r\n  }\r\n\r\n  isTheFirstPlayer(player: Player): boolean {\r\n    return player.id === this.getTheFirstPlayer().id;\r\n  }\r\n\r\n  isActualPlayerIsTheFirst(): boolean {\r\n    return this.isTheFirstPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheLastPlayer(): Player {\r\n    return this.players[this.getNumberOfPlayers() - 1];\r\n  }\r\n\r\n  isTheLastPlayer(player: Player): boolean {\r\n    return player.id === this.getTheLastPlayer().id;\r\n  }\r\n\r\n  isActualPlayerTheLast(): boolean {\r\n    return this.isTheLastPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheBestPlayers(): Player[] {\r\n    let max = this.players[0].score;\r\n    const activePlayers = this.getActivePlayers();\r\n    activePlayers.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    return activePlayers.filter(p => p.score === max);\r\n  }\r\n\r\n  isTheBestPlayer(actPlayer: Player): boolean {\r\n    const best = this.getTheBestPlayers();\r\n    return actPlayer.score === ((best && best.length) ? best[0].score : 0);\r\n  }\r\n\r\n  isTheWorstPlayer(actPlayer: Player): boolean {\r\n    let min = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      min = player.score < min ? player.score : min;\r\n    });\r\n    return actPlayer.score === min;\r\n  }\r\n\r\n  nextRound(): void {\r\n    this.round++;\r\n  }\r\n\r\n  resetScore(): void {\r\n    this.players.forEach(player => player.reset());\r\n    this.actualPlayerIndex = 0;\r\n    this.actualThrow = 0;\r\n    this.round = 0;\r\n  }\r\n\r\n  rotatePlayers(): void {\r\n    this.players.push(this.players.shift());\r\n  }\r\n\r\n  clone(): GameService {\r\n    const game = new GameService();\r\n    game.actualPlayerIndex = this.actualPlayerIndex;\r\n    game.actualThrow = this.actualThrow;\r\n    game.actualFieldIndex = this.actualFieldIndex;\r\n    game.round = this.round;\r\n    game.numbs = this.numbs.map(n => n);\r\n    const players: Player[] = [];\r\n    this.players.forEach(player => {\r\n      players.push(player.clone());\r\n    });\r\n    game.players = players;\r\n    return game;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SoundService {\r\n\r\n  audioElement: HTMLAudioElement;\r\n\r\n  no() {\r\n    this.play('oh_no.mp3');\r\n  }\r\n\r\n  private play(soundFileName: string) {\r\n    this.audioElement.src = `assets/sounds/${soundFileName}`;\r\n    this.audioElement.play();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {StorageService} from '~services/storage.service';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\n\r\nexport const STAT_NAME_SEPARATOR = '____';\r\nconst STATISTICS_STORAGE_KEY = 'statistics';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StatisticsService {\r\n\r\n  constructor(private readonly storageService: StorageService) {\r\n  }\r\n\r\n  saveStatistics(statistics: GameStatistics) {\r\n    const stat = this.storageService.getObject(STATISTICS_STORAGE_KEY);\r\n    if (stat) {\r\n      stat.push(statistics);\r\n      this.storageService.setObject(STATISTICS_STORAGE_KEY, stat);\r\n    } else {\r\n      this.storageService.setObject(STATISTICS_STORAGE_KEY, [statistics]);\r\n    }\r\n  }\r\n\r\n  getGameStatistics(gameName?: string): GameStatistics[] {\r\n    const statistics = this.storageService.getObject(STATISTICS_STORAGE_KEY);\r\n    return gameName ? statistics.filter(i => i.g === gameName) : statistics;\r\n  }\r\n\r\n  getPlayerStatistics(playerName: string, gameName?: string): GameStatistics[] {\r\n    const playerStat = this.storageService.getObject(STATISTICS_STORAGE_KEY).filter(i =>\r\n      i.l.some(p => p.indexOf(playerName) !== -1) ||\r\n      i.w.some(p => p.indexOf(playerName) !== -1));\r\n    return gameName ? playerStat.filter(i => i.g === gameName) : playerStat;\r\n  }\r\n\r\n  getGameTypeStatistics(): GameTypeStatistics[] {\r\n    const stat = this.storageService.getObject(STATISTICS_STORAGE_KEY) as GameStatistics[];\r\n    const games: GameTypeStatistics[] = [];\r\n    stat.forEach(s => {\r\n      let type = games.find(g => g.name === s.g);\r\n      if (!type) {\r\n        type = {name: s.g, count: 0};\r\n        games.push(type);\r\n      }\r\n      type.count++;\r\n    });\r\n    return games;\r\n  }\r\n\r\n  printStatistics() {\r\n    console.log(JSON.stringify(this.storageService.getObject(STATISTICS_STORAGE_KEY)));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class StorageService {\n\n  storage: Storage;\n\n  constructor() {\n    this.storage = localStorage;\n  }\n\n  hasItem(key: string): boolean {\n    return !!this.getItem(key);\n  }\n\n  getItem(key: string): string {\n    return this.storage.getItem(key);\n  }\n\n  getObject(key: string): any {\n    return JSON.parse(this.getItem(key));\n  }\n\n  setItem(key: string, value: string) {\n    this.storage.setItem(key, value);\n  }\n\n  setObject(key: string, value: any) {\n    this.setItem(key, JSON.stringify(value));\n  }\n\n  removeItem(key: string) {\n    this.storage.removeItem(key);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from '../material.module';\nimport {DialogComponent} from '~components/dialog/dialog.component';\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\nimport {PlayerSettingsComponent} from '~components/player-settings/player-settings.component';\nimport {SettingsComponent} from '~components/settings/settings.component';\nimport {PlayerScoreComponent} from '~components/player-score/player-score.component';\nimport {DartsTableDialogComponent} from '~components/darts-table/darts-table-dialog.component';\nimport {ConfirmDialogComponent} from '~components/confirm-dialog/confirm-dialog.component';\nimport {GameStatisticsDialogComponent} from '~components/game-statistics-dialog/game-statistics-dialog.component';\nimport {GameHistoryDialogComponent} from '~components/game-history-dialog/game-history-dialog.component';\nimport {GameTypeStatisticsDialogComponent} from '~components/game-type-statistics-dialog/game-type-statistics-dialog.component';\nimport {MenuComponent} from '~components/menu/menu.component';\nimport {RouterModule} from '@angular/router';\n\nconst components = [NumberPlateComponent, GameToolbarComponent, DartsTableDialogComponent, GameStatisticsDialogComponent,\n  DialogComponent, PlayerSettingsComponent, SettingsComponent, PlayerScoreComponent, ConfirmDialogComponent,\n  GameHistoryDialogComponent, GameTypeStatisticsDialogComponent, MenuComponent];\n\n@NgModule({\n  imports: [CommonModule, MaterialModule, RouterModule],\n  declarations: components,\n  exports: [CommonModule, FormsModule, MaterialModule, ...components],\n  entryComponents: [DialogComponent, DartsTableDialogComponent, GameStatisticsDialogComponent,\n    GameHistoryDialogComponent, GameTypeStatisticsDialogComponent]\n})\nexport class SharedModule {\n}\n","export class X01Settings {\n\n  startValue = 201;\n  start = 1;\n  checkout = 2;\n\n  isNormalStart(): boolean {\n    return this.start === 1;\n  }\n\n  isDoubleStart(): boolean {\n    return this.start === 2;\n  }\n\n  isTripleStart(): boolean {\n    return this.start === 3;\n  }\n\n  isNormalCheckout(): boolean {\n    return this.checkout === 1;\n  }\n\n  isDoubleCheckout(): boolean {\n    return this.checkout === 2;\n  }\n\n  isTripleCheckout(): boolean {\n    return this.checkout === 3;\n  }\n\n  isHighScoreGame(): boolean {\n    return this.checkout === 4;\n  }\n\n  setStart(start: number) {\n    this.start = start;\n  }\n\n  setCheckout(checkout: number) {\n    this.checkout = checkout;\n  }\n\n  setStartValue(startValue: number) {\n    this.startValue = startValue;\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {X01Settings} from './models/x01.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './x01.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class X01Component extends Playground<PlaygroundState> {\r\n\r\n  settings: X01Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'x01');\r\n    this.settings = new X01Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const validStart = !player.first || this.settings.isNormalStart()\r\n      || (player.first\r\n        && ((this.settings.isDoubleStart() && this.multiplier === 2)\r\n          || (this.settings.isTripleStart() && this.multiplier === 3)));\r\n    if (validStart) {\r\n      const actualScore = score * this.multiplier;\r\n      player.first = false;\r\n      player.score -= actualScore;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    let next = false;\r\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\r\n      ((player.score === 0 && (this.settings.isNormalCheckout()\r\n        || (this.settings.isDoubleCheckout() && this.multiplier === 2)\r\n        || (this.settings.isTripleCheckout() && this.multiplier === 3))))) {\r\n      player.setWin();\r\n      next = true;\r\n    } else if (player.score <= 0\r\n      || (this.settings.isDoubleCheckout() && player.score < 2)\r\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\r\n      player.throws.forEach(t => player.score += t);\r\n      next = true;\r\n      this.dialogService.openErrorDialog(`${this.game.getActualPlayer().name} busted!`);\r\n    }\r\n    if (this.game.isTheLastThrow() || next) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.startValue);\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.startValue + '';\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'X01'\" [playground]=\"playground\"\r\n                [rules]=\"'All players start with 301/501 points and attempt to reach zero. If a player scores more ' +\r\n                 'than the total required to reach zero, the player “busts” and the score returns to the score that ' +\r\n                  'was existing at the start of the turn.'\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===101?'primary':''\"\r\n            (click)=\"settings.setStartValue(101)\">101\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===201?'primary':''\"\r\n            (click)=\"settings.setStartValue(201)\">201\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===301?'primary':''\"\r\n            (click)=\"settings.setStartValue(301)\">301\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===501?'primary':''\"\r\n            (click)=\"settings.setStartValue(501)\">501\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===701?'primary':''\"\r\n            (click)=\"settings.setStartValue(701)\">701\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===901?'primary':''\"\r\n            (click)=\"settings.setStartValue(901)\">901\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check In</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===1?'primary':''\"\r\n            (click)=\"settings.setStart(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===2?'primary':''\"\r\n            (click)=\"settings.setStart(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===3?'primary':''\"\r\n            (click)=\"settings.setStart(3)\">Triple\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check Out</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===1?'primary':''\"\r\n            (click)=\"settings.setCheckout(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===2?'primary':''\"\r\n            (click)=\"settings.setCheckout(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===3?'primary':''\"\r\n            (click)=\"settings.setCheckout(3)\">Triple\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===4?'primary':''\"\r\n            (click)=\"settings.setCheckout(4)\">None\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  appVersion: require('../../package.json').version,\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}