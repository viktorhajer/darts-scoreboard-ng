{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/aroundclock/around-clock.component.ts","webpack:///src/app/aroundclock/around-clock.component.html","webpack:///src/app/aroundclock/around-clock.module.ts","webpack:///src/app/aroundclock/models/settings.model.ts","webpack:///src/app/aroundclock/models/state.model.ts","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/cricket/cricket.component.ts","webpack:///src/app/cricket/cricket.component.html","webpack:///src/app/cricket/cricket.module.ts","webpack:///src/app/cricket/models/settings.model.ts","webpack:///src/app/cricket/models/state.model.ts","webpack:///src/app/killer/killer.component.ts","webpack:///src/app/killer/killer.component.html","webpack:///src/app/killer/killer.module.ts","webpack:///src/app/killer/models/settings.model.ts","webpack:///src/app/killer/models/state.model.ts","webpack:///src/app/material.module.ts","webpack:///src/app/route-animation.ts","webpack:///src/app/shanghai/models/settings.model.ts","webpack:///src/app/shanghai/models/state.model.ts","webpack:///src/app/shanghai/shanghai.component.ts","webpack:///src/app/shanghai/shanghai.component.html","webpack:///src/app/shanghai/shanghai.module.ts","webpack:///src/app/shared/components/dialog/dialog.component.ts","webpack:///src/app/shared/components/dialog/dialog.component.html","webpack:///src/app/shared/components/game-toolbar/game-toolbar.component.ts","webpack:///src/app/shared/components/game-toolbar/game-toolbar.component.html","webpack:///src/app/shared/components/number-plate/number-plate.component.ts","webpack:///src/app/shared/components/number-plate/number-plate.component.html","webpack:///src/app/shared/components/player-score/player-score.component.ts","webpack:///src/app/shared/components/player-score/player-score.component.html","webpack:///src/app/shared/components/player-settings/player-settings.component.ts","webpack:///src/app/shared/components/player-settings/player-settings.component.html","webpack:///src/app/shared/components/settings/settings.component.ts","webpack:///src/app/shared/components/settings/settings.component.html","webpack:///src/app/shared/models/application-settings.model.ts","webpack:///src/app/shared/models/field-value.model.ts","webpack:///src/app/shared/models/player.model.ts","webpack:///src/app/shared/models/playground-state.model.ts","webpack:///src/app/shared/models/playground.model.ts","webpack:///src/app/shared/models/throw.model.ts","webpack:///src/app/shared/services/application-state.service.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/services/game.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/x01/models/settings.model.ts","webpack:///src/app/x01/x01.component.ts","webpack:///src/app/x01/x01.component.html","webpack:///src/app/x01/x01.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","data","name","loadChildren","redirectTo","AppComponent","applicationStateService","document","addEventListener","event","scale","preventDefault","passive","selector","templateUrl","styleUrls","animations","AppModule","forRoot","imports","declarations","bootstrap","settings","game","AroundClockComponent","application","route","dialogService","players","forEach","player","state","fieldIndex","score","getPlayerState","getActFieldIndex","actFieldIndex","multiplier","increaseActFieldIndex","jump","setWin","actualThrow","punishment","multi","i","t","throwsHistory","length","decreaseActFieldIndex","nextPlayer","getActualPlayer","isFieldEnabledToThrow","ret","filter","p","some","owners","map","join","AroundClockModule","forChild","Settings","AroundClockState","value","MenuComponent","r","CricketComponent","fields","indexOf","isFieldClosed","playerFieldCount","getFieldCount","isBlackOutGame","isFieldDoneForPlayer","isFieldClosedForOthers","setFieldCount","punishPlayers","getPlayerTotal","punishStyle","isPunishGame","isPlayerDone","isTheBestPlayer","isTheWorstPlayer","getPunishScore","str","isNoScoreGame","getFieldScore","isHighlighted","padStart","total","getPlayerTotalForPunishGame","isScoreGame","getPlayerTotalForScoreGame","getFieldValueFromIndex","getPunishCount","setPunishCount","closed","done","CricketModule","numbs","style","defaultSet","initFields","Math","floor","random","setAllowedField","numbers","field","push","f","CricketState","fieldCount","punishCount","getFieldValue","fv","clone","KillerComponent","nextEnabled","zeroEnabled","multiEnabled","numberOfLives","boardingLimit","isInactive","round","actField","isActualPlayerTheLast","killer","life","Number","s","boarding","getAllEnabledFields","isSecondHighlighted","owner","find","KillerModule","KillerState","materialImports","MaterialModule","slideInAnimation","position","top","left","width","optional","noScore","halveIt","rand","ShanghaiState","fieldScore","ShanghaiComponent","isActiveField","increaseFieldCount","increaseFieldScore","win","extraEndingMsg","gameEnded","isTheLastThrow","winners","max","losers","w","c","ShanghaiModule","DialogComponent","dialogRef","close","GameToolbarComponent","navigate","playground","resetScore","reset","settingsOpen","quit","showSettings","NumberPlateComponent","getNumberColor","throwNumber","PlayerScoreComponent","hasContent","scoreDisplayed","encapsulation","None","PlayerSettingsComponent","storedPlayers","getStoredPlayers","o","playerNameInput","addPlayer","option","blur","playerSelected","SettingsComponent","ApplicationSettings","darkTheme","FieldValue","Player","throws","winDateTime","first","Date","getTime","reduce","a","b","thr","PlaygroundState","list","filtered","FIELDS_COUNT","MAXIMUM_NUMBER_OF_PLAYERS","Playground","minimumNumberOfPlayers","throwEnabled","save","actualPlayer","addThrowHistory","calculatePoints","checkPlayerState","victoryFirst","openDialog","getTheFinalResult","newGame","rotate","playerSettingsValidation","customSettingsValidation","openErrorDialog","rotatePlayers","trim","storePlayer","gameHistory","customReset","pop","actThrow","skip","sort","p1","p2","slice","Throw","order","APPLICATION_KEY","PLAYER_KEY","ApplicationStateService","localStorage","getItem","JSON","parse","setTheme","saveSettings","v","setItem","stringify","body","classList","add","className","replace","providedIn","DialogService","dialog","title","content","open","panelClass","GameService","actualPlayerIndex","nextRound","getNumberOfPlayers","getTheFirstPlayer","isTheFirstPlayer","getTheLastPlayer","isTheLastPlayer","actPlayer","min","shift","components","SharedModule","entryComponents","startValue","start","checkout","X01Component","validStart","isNormalStart","isDoubleStart","isTripleStart","actualScore","next","isHighScoreGame","isNormalCheckout","isDoubleCheckout","isTripleCheckout","X01Module","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\n\nexport const routes: Routes = [\n  {path: '', component: MenuComponent},\n  {\n    path: 'x01',\n    data: {name: 'Classic X01'},\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    data: {name: 'Ultimate Cricket'},\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    data: {name: 'Around The Clock'},\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    data: {name: 'Shanghai / Halve It'},\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'killer',\n    data: {name: 'Killer'},\n    loadChildren: () => KillerModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {Component} from '@angular/core';\nimport {slideInAnimation} from './route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent {\n\n  constructor(public applicationStateService: ApplicationStateService) {\n    document.addEventListener('touchmove',  (event: any) => {\n      if (event.scale !== 1) { event.preventDefault(); }\n    }, { passive: false });\n  }\n}\n","<div [@routeAnimations]=\"outlet && outlet.isActivated && outlet.activatedRoute\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleDarkTheme()\" color=\"primary\"><mat-icon>brightness_1</mat-icon></button>\r\n</div>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent, MenuComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\r\nimport {AroundClockState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: './around-clock.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class AroundClockComponent extends Playground<AroundClockState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new AroundClockState());\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state: AroundClockState = this.getPlayerState(player);\r\n    if (state.getActFieldIndex() === fieldIndex) {\r\n      // last throw\r\n      if (state.actFieldIndex >= FIELDS_COUNT - this.multiplier) {\r\n        this.multiplier = this.multiplier === 1 ? 1 : FIELDS_COUNT - (state.actFieldIndex + 1);\r\n      }\r\n      state.increaseActFieldIndex(this.settings.jump ? this.multiplier : 1);\r\n      if (state.actFieldIndex >= FIELDS_COUNT) {\r\n        state.actFieldIndex = FIELDS_COUNT;\r\n      }\r\n    }\r\n    player.score++;\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if ((FIELDS_COUNT - 1) < this.getPlayerState(player).getActFieldIndex()) {\r\n      player.setWin();\r\n    } else if (this.game.actualThrow === 3) {\r\n      if (this.settings.punishment) {\r\n        let multi = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n          const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n          multi += t.score;\r\n        }\r\n        if (multi === 0) {\r\n          this.getPlayerState(player).decreaseActFieldIndex();\r\n        }\r\n      }\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabledToThrow(fieldIndex: number): boolean {\r\n    return fieldIndex === this.getPlayerState(this.game.getActualPlayer()).getActFieldIndex();\r\n  }\r\n\r\n  isHighlighted(fieldIndex: number): boolean {\r\n    return this.isFieldEnabledToThrow(fieldIndex);\r\n  }\r\n\r\n  isSecondHighlighted(fieldIndex: number): boolean {\r\n    let ret = false;\r\n    if (!this.isFieldEnabledToThrow(fieldIndex)) {\r\n      ret = this.game.players.filter(p => p !== this.game.getActualPlayer())\r\n        .some(p => fieldIndex === this.getPlayerState(p).getActFieldIndex());\r\n    }\r\n    return ret;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players.filter(p => (p.state as AroundClockState).actFieldIndex === fieldIndex).map(p => p.name);\r\n    return !!owners.length ? owners.join(' ') : '';\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Around The Clock'\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.jump?'primary':''\" (click)=\"settings.toggleJump()\">\r\n      Enable Jump\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">\r\n      Victory First\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.punishment?'primary':''\" (click)=\"settings.togglePunishment()\">\r\n      Enable Punishment\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","export class Settings {\r\n  jump: boolean;\r\n  punishment: boolean;\r\n\r\n  constructor() {\r\n    this.jump = true;\r\n    this.punishment = false;\r\n  }\r\n\r\n  toggleJump() {\r\n    this.jump = !this.jump;\r\n  }\r\n\r\n  togglePunishment() {\r\n    this.punishment = !this.punishment;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state: AroundClockState = new AroundClockState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01'}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock'}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai / Halve It'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer'}\r\n  }\r\n];\r\n\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n}\r\n","<div id=\"menu\">\r\n  <h1>Select Game!</h1>\r\n  <button mat-raised-button class=\"gameSelectBox\" *ngFor=\"let g of getGameList()\"  [routerLink]=\"['/' + g.path]\">\r\n    {{g.data.name}}\r\n  </button>\r\n</div>","import {Component} from '@angular/core';\r\nimport {CricketState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './cricket.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class CricketComponent extends Playground<CricketState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new CricketState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n      if (!this.settings.isBlackOutGame() ||\r\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex ||\r\n        this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n\r\n        if (this.isFieldClosedForOthers(player, fieldIndex) && (playerFieldCount + this.multiplier) > 3) {\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, 3);\r\n        } else {\r\n          let multiplier = this.multiplier + 0;\r\n          if (playerFieldCount < 3 && (playerFieldCount + this.multiplier) >= 3) {\r\n            multiplier = (playerFieldCount + this.multiplier) % 3;\r\n          }\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, playerFieldCount + this.multiplier);\r\n          this.multiplier = multiplier;\r\n        }\r\n      }\r\n\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        if (this.settings.isBlackOutGame()) {\r\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex) {\r\n            this.getPlayerState(player).increaseActFieldIndex();\r\n          }\r\n        }\r\n        this.punishPlayers(fieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.score = this.getPlayerTotal(p));\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    this.game.players.forEach(p => p.setWin(\r\n      this.isPlayerDone(p) &&\r\n      ((!punishStyle && this.game.isTheBestPlayer(p)) || (punishStyle && this.game.isTheWorstPlayer(p)))));\r\n    if (this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const score = this.getPunishScore(player, fieldIndex);\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n\r\n    let str = '';\r\n    if (punishStyle && score !== 0) {\r\n      str += score;\r\n    }\r\n\r\n    if (playerFieldCount === 0 && str.length === 0) {\r\n      return '○';\r\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\r\n      return this.getFieldScore(player, fieldIndex) + '';\r\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\r\n      str += '●●●';\r\n    } else {\r\n      for (let i = 0; i < playerFieldCount; i++) {\r\n        str += '●';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  isActiveField(player: Player, fieldIndex: number): boolean {\r\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(player: Player, fieldIndex: number): boolean {\r\n    return this.getPlayerState(player).getFieldCount(fieldIndex) >= 3;\r\n  }\r\n\r\n  isFieldEnabledToThrow(fieldIndex: number): boolean {\r\n    if (this.settings.isNoScoreGame()) {\r\n      return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldDoneForPlayer(this.game.getActualPlayer(), fieldIndex);\r\n    }\r\n    return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex);\r\n  }\r\n\r\n  isHighlighted(fieldIndex: number): boolean {\r\n    return this.isFieldEnabledToThrow(fieldIndex) &&\r\n      !this.isFieldDoneForPlayer(this.game.getActualPlayer(), fieldIndex);\r\n  }\r\n\r\n  isSecondHighlighted(fieldIndex: number): boolean {\r\n    return this.isFieldEnabledToThrow(fieldIndex) &&\r\n      this.isFieldDoneForPlayer(this.game.getActualPlayer(), fieldIndex);\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    if (this.isHighlighted(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(this.game.getActualPlayer()).getFieldCount(fieldIndex);\r\n      return ''.padStart(3 - playerFieldCount, '●');\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private getPlayerTotal(player: Player) {\r\n    let total = 0;\r\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\r\n      total = this.getPlayerTotalForPunishGame(player);\r\n    } else if (this.settings.isScoreGame()) {\r\n      total = this.getPlayerTotalForScoreGame(player);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForScoreGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        total += (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      }\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForPunishGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      total += this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private punishPlayers(fieldIndex: number) {\r\n    this.game.players.forEach(player => {\r\n      if (!this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        this.getPlayerState(player).setPunishCount(fieldIndex, this.getPlayerState(player).getPunishCount(fieldIndex) + this.multiplier);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  private getFieldScore(player: Player, fieldIndex: number): number {\r\n    if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n      return (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getPunishScore(player: Player, fieldIndex: number): number {\r\n    return this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n  }\r\n\r\n  private isFieldClosed(fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(player => {\r\n      closed = closed && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isFieldClosedForOthers(player: Player, fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(p => {\r\n      if (p.id !== player.id) {\r\n        closed = closed && this.isFieldDoneForPlayer(p, fieldIndex);\r\n      }\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isPlayerDone(player: Player): boolean {\r\n    let done = true;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      done = done && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    });\r\n    return done;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Ultimate Cricket'\" [playground]=\"playground\">\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize()\">Random</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\"\r\n            (click)=\"settings.setStyle(2)\">Cut-Throat\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\"\r\n            (click)=\"settings.setStyle(4)\">Black Out\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">\r\n      Victory First\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div\r\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\r\n                *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class Settings {\r\n\r\n  fields: number[] = [14, 15, 16, 17, 18, 19, 20];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 7; i++) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.numbs[this.numbs.length - 1] = true;\r\n    this.initFields();\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  private setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.fieldCount, fieldIndex).value;\r\n  }\r\n\r\n  setFieldCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getPunishCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.punishCount, fieldIndex).value;\r\n  }\r\n\r\n  setPunishCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.punishCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state: CricketState = new CricketState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {KillerState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './killer.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KillerComponent extends Playground<KillerState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService, 2);\r\n    this.settings = new Settings();\r\n    this.nextEnabled = false;\r\n    this.zeroEnabled = false;\r\n    this.multiEnabled = false;\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player =>\r\n      player.state = new KillerState(this.settings.numberOfLives, this.settings.boardingLimit));\r\n  }\r\n\r\n  customNext() {\r\n    while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state: KillerState = this.getPlayerState(player);\r\n    if (this.game.round === 0) {\r\n      state.actField = fieldIndex;\r\n      player.score = score;\r\n      if (this.game.isActualPlayerTheLast()) {\r\n        this.nextEnabled = true;\r\n        this.zeroEnabled = true;\r\n        this.multiEnabled = true;\r\n      }\r\n    } else {\r\n      if (state.killer) {\r\n        if (fieldIndex === state.actField) {\r\n          state.life = Number(state.life) + Number(this.multiplier);\r\n          if (state.life > this.settings.numberOfLives) {\r\n            state.life = this.settings.numberOfLives;\r\n          }\r\n        } else {\r\n          this.game.players.filter(p => p.id !== player.id && !this.getPlayerState(p).isInactive()).forEach(p => {\r\n            const s = this.getPlayerState(p);\r\n            if (fieldIndex === s.actField) {\r\n              s.life -= this.multiplier;\r\n              if (s.life < 0) {\r\n                s.life = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (fieldIndex === state.actField) {\r\n        state.boarding -= this.multiplier;\r\n        if (state.boarding <= 0) {\r\n          state.boarding = 0;\r\n        }\r\n        state.killer = state.boarding === 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.round !== 0) {\r\n      player.setWin(!this.game.players.some(p =>\r\n        p.id !== player.id && !this.getPlayerState(p).isInactive()));\r\n    }\r\n    if (this.game.round === 0 || this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabledToThrow(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return fieldIndex !== 20 && !this.getAllEnabledFields().some(f => f === fieldIndex);\r\n    }\r\n    return this.getAllEnabledFields().some(f => f === fieldIndex);\r\n  }\r\n\r\n  isHighlighted(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return this.isFieldEnabledToThrow(fieldIndex);\r\n    }\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return this.isFieldEnabledToThrow(fieldIndex) && !this.isSecondHighlighted(fieldIndex);\r\n    }\r\n    return state.actField === fieldIndex;\r\n  }\r\n\r\n  isSecondHighlighted(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return state.actField === fieldIndex;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return !state.isInactive() && state.life <= 3 && state.actField === fieldIndex;\r\n    })) {\r\n      return 'sentiment_very_dissatisfied';\r\n    } else if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return state.isInactive() && state.actField === fieldIndex;\r\n    })) {\r\n      return 'highlight_off';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owner = this.game.players.find(p => (p.state as KillerState).actField === fieldIndex);\r\n    return owner ? `${owner.name}(${(owner.state as KillerState).life})` : '';\r\n  }\r\n\r\n  getPlayerField(player: Player): string {\r\n    const fieldIndex = this.getPlayerState(player).actField;\r\n    return fieldIndex === 20 ? 'B' : (fieldIndex + 1) + '';\r\n  }\r\n\r\n  getLife(player: Player): number {\r\n    return this.getPlayerState(player).life;\r\n  }\r\n\r\n  getBoarding(player: Player): number {\r\n    return this.getPlayerState(player).boarding;\r\n  }\r\n\r\n  isKiller(player: Player): boolean {\r\n    return this.getPlayerState(player).killer;\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return this.getPlayerState(player).isInactive();\r\n  }\r\n\r\n  private getAllEnabledFields(): number[] {\r\n    return this.game.players.filter(p => !this.getPlayerState(p).isInactive())\r\n      .map(p => this.getPlayerState(p).actField);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Killer'\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}} {{isKiller(player) ? 'highlighted2' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\">\r\n          <ng-container *ngIf=\"getPlayerField(player) !== '0'\">\r\n            <div class=\"score\"><label>Field: </label>{{getPlayerField(player)}}</div>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"score\">\r\n              <label>Life: </label>{{getLife(player)}}\r\n              <ng-container *ngIf=\"!isKiller(player)\"><label>Boarding: </label>{{getBoarding(player)}}</ng-container>\r\n            </div>\r\n          </ng-container>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class Settings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(public life = 5, public boarding = 3) {\r\n    super();\r\n    this.actField = -1;\r\n    this.killer = false;\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state: KillerState = new KillerState();\r\n    state.actField = this.actField;\r\n    state.life = this.life;\r\n    state.boarding = this.boarding;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({position: 'relative'}),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({left: '-100%'})\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({left: '100%'}))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({left: '0%'}))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild(), {optional: true}),\r\n    ]),\r\n  ]);\r\n","export class Settings {\r\n\r\n  fields: number[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: number): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: number): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: number, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state: ShanghaiState = new ShanghaiState();\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {ShanghaiState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './shanghai.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ShanghaiComponent extends Playground<ShanghaiState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ShanghaiState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isActiveField(fieldIndex)) {\r\n      state.increaseFieldCount(fieldIndex, 1);\r\n      state.increaseFieldScore(fieldIndex, this.multiplier);\r\n      if (this.settings.noScore) {\r\n        player.score += this.multiplier;\r\n      } else {\r\n        player.score += score * this.multiplier;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    // Shanghai rule\r\n    if (this.game.actualThrow === 3) {\r\n      let multi = 1;\r\n      const fieldIndex = this.settings.fields[this.game.round];\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        if (t.score === Playground.getFieldValueFromIndex(fieldIndex)) {\r\n          multi *= (t.multi + 1);\r\n        }\r\n      }\r\n      if (multi === 1 && this.settings.halveIt) {\r\n        player.score = Math.round(player.score / 2);\r\n      }\r\n      player.setWin(multi === 24);\r\n      if (player.win) {\r\n        this.extraEndingMsg = 'SHANGHAI!!!';\r\n      }\r\n    }\r\n\r\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\r\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\r\n    if (gameEnded) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    } else if (this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n    if (fieldCount === 0) {\r\n      return '○○○';\r\n    } else {\r\n      let str = '' + this.getPlayerState(player).getFieldScore(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      for (let i = 0; i < fieldCount; i++) {\r\n        str += '●';\r\n      }\r\n      for (let i = fieldCount; i < 3; i++) {\r\n        str += '○';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  isActiveField(fieldIndex: number): boolean {\r\n    return this.settings.fields[this.game.round] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) < this.game.round;\r\n  }\r\n\r\n  isFieldEnabledToThrow(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) === this.game.round;\r\n  }\r\n\r\n  isHighlighted(fieldIndex: number): boolean {\r\n    return this.isFieldEnabledToThrow(fieldIndex);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    let max = winners[0].score;\r\n    winners.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\r\n    const losers  = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\r\n      const c = p.clone();\r\n      c.win = false;\r\n      return c;\r\n    });\r\n    return [...winners, ...losers];\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Shanghai / Halve It'\" [playground]=\"playground\">\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.numbs[i]?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-raised-button class=\"button big capitalize\" (click)=\"settings.randomize()\">Randomize</button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.noScore?'primary':''\"\r\n            (click)=\"settings.toggleNoScore()\">No score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.halveIt?'primary':''\"\r\n            (click)=\"settings.toggleHalveIt()\">Halve It\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isFieldDoneForPlayer(field) ? '' : 'highlighted'}}\"\r\n                 *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container evo-typography\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content || !!data.players.length\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"true\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: Playground<PlaygroundState>;\r\n\r\n  constructor(public route: Router) {\r\n  }\r\n\r\n  quit() {\r\n    this.route.navigate(['/']);\r\n    this.playground.game.resetScore();\r\n    this.playground.multiplier = 1;\r\n    this.playground.extraEndingMsg = '';\r\n  }\r\n\r\n  showSettings() {\r\n    this.playground.reset();\r\n    this.playground.settingsOpen = true;\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <div class=\"buttons\">\r\n    <button mat-raised-button (click)=\"quit()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.newGame(true)\">\r\n      <mat-icon>refresh</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"showSettings()\">\r\n      <mat-icon>build</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.undo()\">\r\n      <mat-icon>undo</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"round-info\">{{playground.game.round+1}}.</div>\r\n</div>\r\n<div class=\"clear\"></div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isHighlighted(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondHighlighted(fieldIndex)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabledToThrow(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  throwNumber(fieldIndex: number) {\r\n    this.playground.throwNumber(this.playground.isFieldEnabledToThrow(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\">\r\n\r\n  <button mat-raised-button *ngFor=\"let i of getNumbers()\" class=\"number\" [color]=\"getNumberColor(i-1)\"\r\n          [disabled]=\"isNumberDisabled(i-1)\" (click)=\"throwNumber(i-1)\">\r\n    {{i}}\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(i-1)\">{{ playground.getFieldIcon(i-1)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(i-1)\">{{ playground.getFieldNote(i-1)}}</p>\r\n  </button>\r\n  <button mat-raised-button class=\"number\" [color]=\"getNumberColor(20)\" [disabled]=\"isNumberDisabled(20)\"\r\n          (click)=\"throwNumber(20)\">\r\n    Bull\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(20)\">{{ playground.getFieldIcon(20)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(20)\">{{ playground.getFieldNote(20)}}</p>\r\n  </button>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 2 ? 'primary' : ''\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">Double</button>\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 3 ? 'primary' : ''\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">Triple</button>\r\n\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.throwNumber(0)\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  selector: 'app-player-score',\r\n  templateUrl: './player-score.component.html',\r\n  styleUrls: ['./player-score.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PlayerScoreComponent {\r\n  @Input() player: Player;\r\n  @Input() hasContent = true;\r\n  @Input() scoreDisplayed = true;\r\n}\r\n","<div class=\"player_info\">\r\n  <div class=\"name\">{{player.name}}</div>\r\n  <div class=\"shoots\">\r\n    <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\r\n    <div class=\"shoot total\">{{!player.getThrowsTotal() ? '0' : player.getThrowsTotal()}}</div>\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n  <div class=\"line\" *ngIf=\"hasContent\"></div>\r\n  <ng-content></ng-content>\r\n  <div class=\"line\" *ngIf=\"scoreDisplayed\"></div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed\">{{player.score}}</div>\r\n  <div class=\"clear\"></div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'app-player-settings',\r\n  templateUrl: './player-settings.component.html',\r\n  styleUrls: ['./player-settings.component.scss']\r\n})\r\nexport class PlayerSettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  storedPlayers = [];\r\n\r\n  constructor(private application: ApplicationStateService) {\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  getOptions() {\r\n    return this.storedPlayers.filter(o => this.playground.game.players\r\n      .map(p => p.name).indexOf(o) === -1);\r\n  }\r\n\r\n  playerSelected(event: MatAutocompleteSelectedEvent, playerNameInput: HTMLInputElement) {\r\n    this.playground.addPlayer(event.option);\r\n    playerNameInput.value = '';\r\n    playerNameInput.blur();\r\n  }\r\n}\r\n","<div class=\"add-player\">\r\n  <mat-form-field appearance=\"outline\" class=\"big\">\r\n    <mat-label>Player name</mat-label>\r\n    <input #playerNameInput type=\"text\" matInput placeholder=\"Enter name\"\r\n      [disabled]=\"!playground.canAddPlayer()\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"playerSelected($event, playerNameInput)\">\r\n      <mat-option *ngFor=\"let option of getOptions()\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button mat-icon-button (click)=\"playground.addPlayer(playerNameInput)\" [disabled]=\"!playground.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button>\r\n</div>\r\n<div class=\"player-table\">\r\n  <div class=\"player-row\" *ngFor=\"let player of playground.game.players; let i = index\">\r\n    <div class=\"player-name\">{{player.name}}</div>\r\n    <button mat-icon-button (click)=\"playground.removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\r\n  </div>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() title: string;\r\n}\r\n","<div class=\"settings\">\r\n  <h1>{{title}} Settings</h1>\r\n\r\n  <h2>Players</h2>\r\n  <app-player-settings [playground]=\"playground\"></app-player-settings>\r\n  <mat-divider></mat-divider>\r\n\r\n  <ng-content></ng-content>\r\n\r\n  <mat-divider></mat-divider>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.newGame()\">Start</button>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.quit()\">Cancel</button>\r\n</div>\r\n","export class ApplicationSettings {\r\n  darkTheme = false;\r\n}\r\n","export class FieldValue {\n  field: number;\n  value: number;\n\n  constructor(field: number, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","import {Throw} from './throw.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class Player {\r\n  score = 0;\r\n  throws: number[] = [];\r\n  throwsHistory: Throw[];\r\n  win = false;\r\n  winDateTime = 0;\r\n  first = true;\r\n  state: PlaygroundState;\r\n\r\n  constructor(public id: number, public name = '') {\r\n  }\r\n\r\n  setWin(win = true) {\r\n    this.win = win;\r\n    this.winDateTime = win ? new Date().getTime() : 0;\r\n  }\r\n\r\n  getThrowsTotal(): number {\r\n    return this.throws.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  addThrowHistory(thr: Throw) {\r\n    this.throwsHistory.push(thr);\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n    this.throws = [];\r\n    this.throwsHistory = [];\r\n    this.win = false;\r\n    this.winDateTime = 0;\r\n    this.first = true;\r\n  }\r\n\r\n  clone(): Player {\r\n    const player = new Player(this.id, this.name);\r\n    player.score = this.score;\r\n    player.throws = [];\r\n    this.throws.forEach(t => {\r\n      player.throws.push(t);\r\n    });\r\n    player.throwsHistory = this.throwsHistory;\r\n    player.win = this.win;\r\n    player.winDateTime = this.winDateTime;\r\n    player.first = this.first;\r\n    player.throwsHistory = [];\r\n    this.throwsHistory.forEach(throws => {\r\n      player.throwsHistory.push(throws.clone());\r\n    });\r\n    if (this.state) {\r\n      player.state = this.state.clone();\r\n    }\r\n    return player;\r\n  }\r\n}\r\n","import {FieldValue} from './field-value.model';\r\n\r\nexport abstract class PlaygroundState {\r\n\r\n  getFieldValue(list: FieldValue[], fieldIndex: number): FieldValue {\r\n    const filtered = list.filter(f => f.field === fieldIndex);\r\n    if (filtered.length === 0) {\r\n      list.push(new FieldValue(fieldIndex, 0));\r\n    }\r\n    return list.filter(f => f.field === fieldIndex)[0];\r\n  }\r\n\r\n  abstract clone(): PlaygroundState;\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {GameService} from '../services/game.service';\r\nimport {Player} from './player.model';\r\nimport {Throw} from './throw.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\nexport const FIELDS_COUNT = 21;\r\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\r\n\r\nexport abstract class Playground<T extends PlaygroundState> implements OnInit {\r\n\r\n  throwEnabled = true;\r\n  settingsOpen = true;\r\n  gameHistory: GameService[];\r\n  nextEnabled = true;\r\n  zeroEnabled = true;\r\n  multiEnabled = true;\r\n  playground = this;\r\n  multiplier: number;\r\n  extraEndingMsg: string;\r\n\r\n  protected constructor(public application: ApplicationStateService,\r\n                        public game: GameService,\r\n                        public route: Router,\r\n                        public dialogService: DialogService,\r\n                        public minimumNumberOfPlayers = 1) {\r\n  }\r\n\r\n  static getFieldValueFromIndex(fieldIndex: number): number {\r\n    return fieldIndex === 20 ? 25 : fieldIndex + 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.settingsOpen = true;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  throwNumber(score: number) {\r\n    if (this.throwEnabled) {\r\n      this.save();\r\n      this.throwEnabled = false;\r\n      if (score === 25 && this.multiplier === 3) {\r\n        this.multiplier = 1;\r\n      }\r\n\r\n      const actualPlayer = this.game.getActualPlayer();\r\n      const fieldIndex = score === 25 ? 20 : score - 1;\r\n\r\n      actualPlayer.addThrowHistory(new Throw(score, this.multiplier, this.game.actualThrow));\r\n      if (this.game.actualThrow === 0) {\r\n        actualPlayer.throws = [];\r\n      }\r\n      actualPlayer.throws[this.game.actualThrow] = score * this.multiplier;\r\n      this.game.actualThrow++;\r\n\r\n      this.calculatePoints(actualPlayer, fieldIndex, score);\r\n      this.checkPlayerState(actualPlayer);\r\n\r\n      this.multiplier = 1;\r\n      const winners = this.game.players.filter(p => p.win);\r\n      if (winners.length > 0) {\r\n        if (this.game.victoryFirst || this.game.players.length - winners.length <= 1) {\r\n          this.dialogService.openDialog('Game Over!', this.extraEndingMsg, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else if (this.game.victoryFirst) {\r\n          this.dialogService.openDialog('Game Over!', this.extraEndingMsg, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else {\r\n          while (this.game.getActualPlayer().win) {\r\n            this.game.nextPlayer();\r\n          }\r\n        }\r\n      }\r\n      this.throwEnabled = true;\r\n    }\r\n  }\r\n\r\n  newGame(rotate = false) {\r\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\r\n    if (!this.playerSettingsValidation()) {\r\n      this.dialogService.openErrorDialog('Error!', 'Number of players are incorrect.');\r\n    } else if (this.settingsOpen) {\r\n      this.dialogService.openErrorDialog('Error!', 'Settings is incorrect.');\r\n    }\r\n    this.reset();\r\n    if (rotate) {\r\n      this.game.rotatePlayers();\r\n    }\r\n  }\r\n\r\n  canAddPlayer(): boolean {\r\n    return this.game.players.length < MAXIMUM_NUMBER_OF_PLAYERS;\r\n  }\r\n\r\n  addPlayer(name: any) {\r\n    if (!!name.value.trim().length && !this.game.players.some(p => p.name === name.value)) {\r\n      this.game.players.push(new Player(uuid(), name.value));\r\n      this.application.storePlayer(name.value);\r\n    }\r\n    name.value = '';\r\n  }\r\n\r\n  removePlayer(player: Player) {\r\n    this.game.players = this.game.players.filter(p => p !== player);\r\n  }\r\n\r\n  triplePoint() {\r\n    this.multiplier = this.multiplier === 3 ? 1 : 3;\r\n  }\r\n\r\n  doublePoint() {\r\n    this.multiplier = this.multiplier === 2 ? 1 : 2;\r\n  }\r\n\r\n  reset() {\r\n    this.gameHistory = [];\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n    this.customReset();\r\n  }\r\n\r\n  undo() {\r\n    if (this.gameHistory.length > 0) {\r\n      this.game = this.gameHistory.pop();\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    const actThrow = this.game.actualThrow;\r\n    this.throwNumber(0);\r\n    if (actThrow !== 2) {\r\n      this.skip();\r\n    }\r\n  }\r\n\r\n  quit() {\r\n    this.route.navigate(['/']);\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  customNext() {\r\n    return;\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isHighlighted(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isSecondHighlighted(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  isFieldEnabledToThrow(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n\r\n  getPlayerState(player: Player): T {\r\n    return player.state as T;\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    winners = winners.sort((p1, p2) => p1.winDateTime < p2.winDateTime ? -1 : 1)\r\n      .slice(0, 1).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id))\r\n      .map(p => {\r\n        const c = p.clone();\r\n        c.win = false;\r\n        return c;\r\n      });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  private playerSettingsValidation(): boolean {\r\n    const players: Player[] = [];\r\n    this.game.players.forEach(player => {\r\n      if (player.name.length !== 0) {\r\n        players.push(player);\r\n      }\r\n    });\r\n    this.game.players = players;\r\n    return players.length >= this.minimumNumberOfPlayers;\r\n  }\r\n\r\n  private save() {\r\n    this.gameHistory.push(this.game.clone());\r\n  }\r\n\r\n  abstract customReset(): void;\r\n\r\n  abstract calculatePoints(player: Player, fieldIndex: number, score: number);\r\n\r\n  abstract checkPlayerState(player: Player);\r\n}\r\n","export class Throw {\n  field: string;\n\n  constructor(public score: number, public multi: number, public order: number) {\n    this.field = this.score === 25 ? 'B' :  this.score + '';\n  }\n\n  clone(): Throw {\n    return new Throw(this.score, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {ApplicationSettings} from '~models/application-settings.model';\r\n\r\nconst APPLICATION_KEY = 'ApplicationSettings';\r\nconst PLAYER_KEY = 'Players';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApplicationStateService {\r\n\r\n  settings = new ApplicationSettings();\r\n\r\n  constructor() {\r\n    const data = localStorage.getItem(APPLICATION_KEY);\r\n    if (data) {\r\n      this.settings = JSON.parse(data);\r\n    }\r\n    this.setTheme();\r\n  }\r\n\r\n  toggleDarkTheme() {\r\n    this.settings.darkTheme = !this.settings.darkTheme;\r\n    this.setTheme();\r\n    this.saveSettings();\r\n  }\r\n\r\n  getStoredPlayers(): string[] {\r\n    const data = localStorage.getItem(PLAYER_KEY);\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  storePlayer(name: string) {\r\n    const players = [name, ...this.getStoredPlayers()].filter((v, i, a) => a.indexOf(v) === i);\r\n    localStorage.setItem(PLAYER_KEY, JSON.stringify(players));\r\n  }\r\n\r\n  private setTheme() {\r\n    if (this.settings.darkTheme) {\r\n      document.body.classList.add('dark-theme');\r\n    } else {\r\n      document.body.className = document.body.className.replace('dark-theme', '');\r\n    }\r\n  }\r\n\r\n  private saveSettings() {\r\n    localStorage.setItem(APPLICATION_KEY, JSON.stringify(this.settings));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n\r\n  openErrorDialog(title = '', content = ''): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'error-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Player} from '../models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GameService {\r\n  players: Player[] = [];\r\n  actualPlayerIndex: number;\r\n  actualThrow: number;\r\n  round: number;\r\n  victoryFirst = true;\r\n\r\n  toggleVictoryFirst() {\r\n    this.victoryFirst = !this.victoryFirst;\r\n  }\r\n\r\n  isTheFirstThrow(): boolean {\r\n    return this.actualThrow === 1;\r\n  }\r\n\r\n  isTheLastThrow(): boolean {\r\n    return this.actualThrow === 3;\r\n  }\r\n\r\n  getActualPlayer(): Player {\r\n    return this.players[this.actualPlayerIndex];\r\n  }\r\n\r\n  nextPlayer(): void {\r\n    if (this.isActualPlayerTheLast()) {\r\n      this.nextRound();\r\n    }\r\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\r\n    this.actualThrow = 0;\r\n  }\r\n\r\n  getNumberOfPlayers(): number {\r\n    return this.players.length;\r\n  }\r\n\r\n  getTheFirstPlayer(): Player {\r\n    return this.players[0];\r\n  }\r\n\r\n  isTheFirstPlayer(player: Player): boolean {\r\n    return player.id === this.getTheFirstPlayer().id;\r\n  }\r\n\r\n  isActualPlayerIsTheFirst(): boolean {\r\n    return this.isTheFirstPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheLastPlayer(): Player {\r\n    return this.players[this.getNumberOfPlayers() - 1];\r\n  }\r\n\r\n  isTheLastPlayer(player: Player): boolean {\r\n    return player.id === this.getTheLastPlayer().id;\r\n  }\r\n\r\n  isActualPlayerTheLast(): boolean {\r\n    return this.isTheLastPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  isTheBestPlayer(actPlayer: Player): boolean {\r\n    let max = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      max = player.score > max ? player.score : max;\r\n    });\r\n    return actPlayer.score === max;\r\n    // let bestPlayer = true;\r\n    // this.players.filter(p => !p.win).forEach(player => {\r\n    //   bestPlayer = bestPlayer && actPlayer.score >= player.score;\r\n    // });\r\n    // return bestPlayer;\r\n  }\r\n\r\n  isTheWorstPlayer(actPlayer: Player): boolean {\r\n    let min = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      min = player.score < min ? player.score : min;\r\n    });\r\n    return actPlayer.score === min;\r\n    // let lastPlayer = true;\r\n    // this.players.filter(p => !p.win).forEach(player => {\r\n    //   lastPlayer = lastPlayer && actPlayer.score <= player.score;\r\n    // });\r\n    // return lastPlayer;\r\n  }\r\n\r\n  nextRound(): void {\r\n    this.round++;\r\n  }\r\n\r\n  resetScore(): void {\r\n    this.players.forEach(player => player.reset());\r\n    this.actualPlayerIndex = 0;\r\n    this.actualThrow = 0;\r\n    this.round = 0;\r\n  }\r\n\r\n  rotatePlayers(): void {\r\n    this.players.push(this.players.shift());\r\n  }\r\n\r\n  clone(): GameService {\r\n    const game = new GameService();\r\n    game.actualPlayerIndex = this.actualPlayerIndex;\r\n    game.actualThrow = this.actualThrow;\r\n    game.round = this.round;\r\n    const players: Player[] = [];\r\n    this.players.forEach(player => {\r\n      players.push(player.clone());\r\n    });\r\n    game.players = players;\r\n    return game;\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MaterialModule} from '../material.module';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\r\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\r\nimport {PlayerSettingsComponent} from '~components/player-settings/player-settings.component';\r\nimport {SettingsComponent} from '~components/settings/settings.component';\r\nimport {PlayerScoreComponent} from '~components/player-score/player-score.component';\r\n\r\nconst components = [NumberPlateComponent, GameToolbarComponent,\r\n  DialogComponent, PlayerSettingsComponent, SettingsComponent, PlayerScoreComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  declarations: components,\r\n  exports: [CommonModule, FormsModule, MaterialModule, ...components],\r\n  entryComponents: [DialogComponent]\r\n})\r\nexport class SharedModule {\r\n}\r\n","export class Settings {\r\n\r\n  startValue = 301;\r\n  start = 1;\r\n  checkout = 1;\r\n\r\n  isNormalStart(): boolean {\r\n    return this.start === 1;\r\n  }\r\n\r\n  isDoubleStart(): boolean {\r\n    return this.start === 2;\r\n  }\r\n\r\n  isTripleStart(): boolean {\r\n    return this.start === 3;\r\n  }\r\n\r\n  isNormalCheckout(): boolean {\r\n    return this.checkout === 1;\r\n  }\r\n\r\n  isDoubleCheckout(): boolean {\r\n    return this.checkout === 2;\r\n  }\r\n\r\n  isTripleCheckout(): boolean {\r\n    return this.checkout === 3;\r\n  }\r\n\r\n  isHighScoreGame(): boolean {\r\n    return this.checkout === 4;\r\n  }\r\n\r\n  setStart(start: number) {\r\n    this.start = start;\r\n  }\r\n\r\n  setCheckout(checkout: number) {\r\n    this.checkout = checkout;\r\n  }\r\n\r\n  setStartValue(startValue: number) {\r\n    this.startValue = startValue;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './x01.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class X01Component extends Playground<PlaygroundState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.startValue);\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const validStart = !player.first || this.settings.isNormalStart()\r\n      || (player.first\r\n        && ((this.settings.isDoubleStart() && this.multiplier === 2)\r\n          || (this.settings.isTripleStart() && this.multiplier === 3)));\r\n    if (validStart) {\r\n      const actualScore = score * this.multiplier;\r\n      player.first = false;\r\n      player.score -= actualScore;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    let next = false;\r\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\r\n      ((player.score === 0 && (this.settings.isNormalCheckout()\r\n        || (this.settings.isDoubleCheckout() && this.multiplier === 2)\r\n        || (this.settings.isTripleCheckout() && this.multiplier === 3))))) {\r\n      player.setWin();\r\n      next = true;\r\n    } else if (player.score <= 0\r\n      || (this.settings.isDoubleCheckout() && player.score < 2)\r\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\r\n      player.throws.forEach(t => player.score += t);\r\n      next = true;\r\n      this.dialogService.openErrorDialog(`${this.game.getActualPlayer().name} busted!`);\r\n    }\r\n\r\n    if (this.game.actualThrow === 3 || next) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'X01'\" [playground]=\"playground\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===101?'primary':''\"\r\n            (click)=\"settings.setStartValue(101)\">101\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===201?'primary':''\"\r\n            (click)=\"settings.setStartValue(201)\">201\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===301?'primary':''\"\r\n            (click)=\"settings.setStartValue(301)\">301\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===501?'primary':''\"\r\n            (click)=\"settings.setStartValue(501)\">501\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===701?'primary':''\"\r\n            (click)=\"settings.setStartValue(701)\">701\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===901?'primary':''\"\r\n            (click)=\"settings.setStartValue(901)\">901\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check In</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===1?'primary':''\"\r\n            (click)=\"settings.setStart(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===2?'primary':''\"\r\n            (click)=\"settings.setStart(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===3?'primary':''\"\r\n            (click)=\"settings.setStart(3)\">Triple\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check Out</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===1?'primary':''\"\r\n            (click)=\"settings.setCheckout(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===2?'primary':''\"\r\n            (click)=\"settings.setCheckout(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===3?'primary':''\"\r\n            (click)=\"settings.setCheckout(3)\">Triple\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===4?'primary':''\"\r\n            (click)=\"settings.setCheckout(4)\">None\r\n    </button>\r\n\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">\r\n      Victory First\r\n    </button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}