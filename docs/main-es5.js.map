{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/aroundclock/around-clock.component.ts","webpack:///src/app/aroundclock/around-clock.component.html","webpack:///src/app/aroundclock/around-clock.module.ts","webpack:///src/app/aroundclock/models/around-clock.settings.model.ts","webpack:///src/app/aroundclock/models/around-clock.state.model.ts","webpack:///src/app/components/menu/menu.component.ts","webpack:///src/app/components/menu/menu.component.html","webpack:///src/app/cricket/cricket.component.ts","webpack:///src/app/cricket/cricket.component.html","webpack:///src/app/cricket/cricket.module.ts","webpack:///src/app/cricket/models/cricet.settings.model.ts","webpack:///src/app/cricket/models/cricet.state.model.ts","webpack:///src/app/fives/fives.component.ts","webpack:///src/app/fives/fives.component.html","webpack:///src/app/fives/fives.module.ts","webpack:///src/app/fives/models/fives.settings.model.ts","webpack:///src/app/hare-and-hound/hare-and-hound.component.ts","webpack:///src/app/hare-and-hound/hare-and-hound.component.html","webpack:///src/app/hare-and-hound/hare-and-hound.module.ts","webpack:///src/app/hare-and-hound/models/hare-and-hound.settings.model.ts","webpack:///src/app/hare-and-hound/models/hare-and-hound.state.model.ts","webpack:///src/app/killer/killer.component.ts","webpack:///src/app/killer/killer.component.html","webpack:///src/app/killer/killer.module.ts","webpack:///src/app/killer/models/killer.settings.model.ts","webpack:///src/app/killer/models/killer.state.model.ts","webpack:///src/app/knockout/knockout.component.ts","webpack:///src/app/knockout/knockout.component.html","webpack:///src/app/knockout/knockout.module.ts","webpack:///src/app/knockout/models/knockout.settings.model.ts","webpack:///src/app/knockout/models/knockout.state.model.ts","webpack:///src/app/material.module.ts","webpack:///src/app/route-animation.ts","webpack:///src/app/shanghai/models/shanghai.settings.model.ts","webpack:///src/app/shanghai/models/shanghai.state.model.ts","webpack:///src/app/shanghai/shanghai.component.ts","webpack:///src/app/shanghai/shanghai.component.html","webpack:///src/app/shanghai/shanghai.module.ts","webpack:///src/app/shared/components/darts-table/darts-table-dialog.component.ts","webpack:///src/app/shared/components/darts-table/darts-table-dialog.component.html","webpack:///src/app/shared/components/dialog/dialog.component.ts","webpack:///src/app/shared/components/dialog/dialog.component.html","webpack:///src/app/shared/components/game-rules/game-rules.component.ts","webpack:///src/app/shared/components/game-rules/game-rules.component.html","webpack:///src/app/shared/components/game-toolbar/game-toolbar.component.ts","webpack:///src/app/shared/components/game-toolbar/game-toolbar.component.html","webpack:///src/app/shared/components/number-plate/number-plate.component.ts","webpack:///src/app/shared/components/number-plate/number-plate.component.html","webpack:///src/app/shared/components/player-score/player-score.component.ts","webpack:///src/app/shared/components/player-score/player-score.component.html","webpack:///src/app/shared/components/player-settings/player-settings.component.ts","webpack:///src/app/shared/components/player-settings/player-settings.component.html","webpack:///src/app/shared/components/settings/settings.component.ts","webpack:///src/app/shared/components/settings/settings.component.html","webpack:///src/app/shared/models/application-settings.model.ts","webpack:///src/app/shared/models/field-value.model.ts","webpack:///src/app/shared/models/player.model.ts","webpack:///src/app/shared/models/playground-state.model.ts","webpack:///src/app/shared/models/playground.model.ts","webpack:///src/app/shared/models/throw.model.ts","webpack:///src/app/shared/services/application-state.service.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/services/game.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/x01/models/x01.settings.model.ts","webpack:///src/app/x01/x01.component.ts","webpack:///src/app/x01/x01.component.html","webpack:///src/app/x01/x01.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","data","name","loadChildren","redirectTo","AppComponent","applicationStateService","document","addEventListener","event","scale","preventDefault","passive","selector","templateUrl","styleUrls","animations","AppModule","forRoot","imports","declarations","bootstrap","settings","AroundClockComponent","application","game","route","dialogService","hiddenInfo","player","fieldIndex","score","scoreReal","state","getPlayerState","getFieldIndex","actFieldIndex","fields","length","multiplier","increaseActFieldIndex","jump","saboteur","realFieldIndex","players","filter","p","forEach","otherPlayer","otherPlayerState","decreaseActFieldIndex","setWin","isTheLastThrow","punishment","nineLives","multi","i","t","throwsHistory","life","nextPlayer","activePlayers","isInactive","getActualPlayer","style","bullPos","findIndex","f","playerPos","diff","isFieldEnabled","some","owners","map","join","setStyle","getNumberOfPlayers","index","AroundClockModule","forChild","AroundClockSettings","getBaseFields","getClockFields","getAnticlockFields","getRandom","Array","size","randomFields","random","Math","floor","push","slice","AroundClockState","value","color","icon","MenuComponent","r","CricketComponent","indexOf","isFieldClosed","playerFieldCount","getFieldCount","isBlackOutGame","getActFieldIndex","isFieldDoneForPlayer","isFieldClosedForOthers","setFieldCount","punishPlayers","getPlayerTotal","punishStyle","isPunishGame","isPlayerDone","isTheBestPlayer","isTheWorstPlayer","getPunishScore","str","isNoScoreGame","getFieldScore","getPlayerToDisplay","isPrimaryField","remaining","padStart","substr","toUpperCase","isSecondaryField","playerToDisplay","setTimeout","total","getPlayerTotalForPunishGame","isScoreGame","getPlayerTotalForScoreGame","getFieldValueFromIndex","getPunishCount","setPunishCount","closed","done","CricketModule","CricketSettings","numbs","defaultSet","initFields","maxField","n","setAllowedField","numbers","field","CricketState","fieldCount","punishCount","getFieldValue","fv","clone","FivesComponent","limit","sum","divider","FivesModule","FivesSettings","HareAndHoundComponent","isHare","getHareStartIndex","find","win","getFields","HareAndHoundModule","HareAndHoundSettings","houndStartIndex","hareStartIndex","HareAndHoundState","DANGER_ZONE_ICON","KillerComponent","nextEnabled","zeroEnabled","multiEnabled","round","actField","isActualPlayerTheLast","killer","suicide","extraEndingMsg","Number","numberOfLives","s","boarding","getAllEnabledFields","owner","boardingLimit","KillerModule","KillerSettings","KillerState","KnockoutComponent","getThrowsTotal","KnockoutModule","KnockoutSettings","KnockoutState","materialImports","MaterialModule","slideInAnimation","position","top","left","width","optional","ShanghaiSettings","noScore","halveIt","rand","ShanghaiState","fieldScore","ShanghaiComponent","isActiveField","increaseFieldCount","increaseFieldScore","gameEnded","winners","max","losers","w","c","ShanghaiModule","DartsTableDialogComponent","dialogRef","close","DialogComponent","GameRulesComponent","GameToolbarComponent","navigate","playground","resetScore","reset","settingsOpen","enabledFields","openDartsTable","quit","showSettings","showTable","NumberPlateComponent","getNumberColor","throwNumber","PlayerScoreComponent","hasContent","scoreDisplayed","highlighted","encapsulation","None","PlayerSettingsComponent","storedPlayers","getStoredPlayers","o","playerNameInput","addPlayer","option","blur","playerSelected","SettingsComponent","ApplicationSettings","darkTheme","FieldValue","Player","throws","winDateTime","first","Date","getTime","reduce","a","b","thr","PlaygroundState","list","filtered","FIELDS_COUNT","MAXIMUM_NUMBER_OF_PLAYERS","Playground","minimumNumberOfPlayers","maximumNumberOfPlayers","throwEnabled","args","saveGameInHistory","actualPlayer","addThrowHistory","actualThrow","calculatePoints","checkPlayerState","victoryFirst","openDialog","getTheFinalResult","newGame","trim","storePlayer","rotate","playerSettingsValidation","customSettingsValidation","openErrorDialog","rotatePlayers","gameHistory","pop","actThrow","skip","customReset","sort","p1","p2","Throw","order","APPLICATION_KEY","PLAYER_KEY","ApplicationStateService","localStorage","getItem","JSON","parse","setTheme","saveSettings","v","setItem","stringify","body","classList","add","className","replace","providedIn","DialogService","dialog","title","content","open","panelClass","fieldIndexes","GameService","actualPlayerIndex","nextRound","getTheFirstPlayer","isTheFirstPlayer","getTheLastPlayer","isTheLastPlayer","actPlayer","min","shift","components","SharedModule","entryComponents","X01Settings","startValue","start","checkout","X01Component","validStart","isNormalStart","isDoubleStart","isTripleStart","actualScore","next","isHighScoreGame","isNormalCheckout","isDoubleCheckout","isTripleCheckout","X01Module","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\nimport {FivesModule} from './fives/fives.module';\nimport {HareAndHoundModule} from './hare-and-hound/hare-and-hound.module';\nimport {KnockoutModule} from './knockout/knockout.module';\n\nexport const routes: Routes = [\n  {path: '', component: MenuComponent},\n  {\n    path: 'x01',\n    data: {name: 'Classic X01'},\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    data: {name: 'Ultimate Cricket'},\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    data: {name: 'Around The Clock / Nine Lives'},\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    data: {name: 'Shanghai / Halve It'},\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'fives',\n    data: {name: 'Fives'},\n    loadChildren: () => FivesModule\n  },\n  {\n    path: 'hare-and-hound',\n    data: {name: 'Hare and Hound'},\n    loadChildren: () => HareAndHoundModule\n  },\n  {\n    path: 'knockout',\n    data: {name: 'Knockout'},\n    loadChildren: () => KnockoutModule\n  },\n  {\n    path: 'killer',\n    data: {name: 'Killer'},\n    loadChildren: () => KillerModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {Component} from '@angular/core';\nimport {slideInAnimation} from './route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent {\n\n  constructor(public applicationStateService: ApplicationStateService) {\n    document.addEventListener('touchmove',  (event: any) => {\n      if (event.scale !== 1) { event.preventDefault(); }\n    }, { passive: false });\n  }\n}\n","<div [@routeAnimations]=\"outlet && outlet.isActivated && outlet.activatedRoute\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleDarkTheme()\" color=\"primary\"><mat-icon>brightness_1</mat-icon></button>\r\n</div>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent, MenuComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {Player} from '~models/player.model';\nimport {AroundClockState} from './models/around-clock.state.model';\nimport {AroundClockSettings} from './models/around-clock.settings.model';\n\n@Component({\n  templateUrl: './around-clock.component.html',\n  animations: [slideInAnimation],\n})\nexport class AroundClockComponent extends Playground<AroundClockState> {\n\n  settings: AroundClockSettings;\n  hiddenInfo = true;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\n    super(application, game, route, dialogService);\n    this.settings = new AroundClockSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal: number) {\n    const state = this.getPlayerState(player);\n    if (this.getFieldIndex(state.actFieldIndex) === fieldIndex) {\n      // last throw\n      if (state.actFieldIndex >= this.settings.fields.length - this.multiplier) {\n        this.multiplier = this.multiplier === 1 ? 1 : this.settings.fields.length - (state.actFieldIndex + 1);\n      }\n      state.increaseActFieldIndex(this.settings.jump ? this.multiplier : 1);\n      if (state.actFieldIndex >= this.settings.fields.length) {\n        state.actFieldIndex = this.settings.fields.length;\n      }\n    }\n    player.score++;\n\n    if (this.settings.saboteur) {\n      const realFieldIndex = scoreReal === 25 ? 20 : scoreReal - 1;\n      this.game.players.filter(p => p.id !== player.id).forEach(otherPlayer => {\n        const otherPlayerState = this.getPlayerState(otherPlayer);\n        if (this.getFieldIndex(otherPlayerState.actFieldIndex) === realFieldIndex && score === 0) {\n          otherPlayerState.decreaseActFieldIndex();\n        }\n      });\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    const state = this.getPlayerState(player);\n    if ((this.settings.fields.length - 1) < state.actFieldIndex) {\n      player.setWin();\n    } else if (this.game.isTheLastThrow()) {\n      if (this.settings.punishment || this.settings.nineLives) {\n        let multi = 0;\n        for (let i = 0; i < 3; i++) {\n          const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n          multi += t.score;\n        }\n        if (multi === 0) {\n          if (this.settings.punishment) {\n            state.decreaseActFieldIndex();\n          }\n          if (this.settings.nineLives) {\n            state.life--;\n          }\n        }\n      }\n      this.game.nextPlayer();\n    }\n    if (this.settings.nineLives) {\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p).isInactive());\n      if (!!activePlayers.length) {\n        while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\n          this.game.nextPlayer();\n        }\n      }\n    }\n  }\n\n  getDistanceFromRandom(): string {\n    if (this.settings.style === 3) {\n      const bullPos = this.settings.fields.findIndex(f => f === 20);\n      const playerPos = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\n      const diff = bullPos - playerPos;\n      return diff >= 0 ? diff + '' : '';\n    }\n    return '';\n  }\n\n  toggleHiddenInfo() {\n    this.hiddenInfo = !this.hiddenInfo;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return fieldIndex === this.getFieldIndex(this.getPlayerState(this.game.getActualPlayer()).actFieldIndex);\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return this.isFieldEnabled(fieldIndex);\n  }\n\n  isSecondaryField(fieldIndex: number): boolean {\n    if (!this.isFieldEnabled(fieldIndex)) {\n      return this.game.players.filter(p => p !== this.game.getActualPlayer())\n        .some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\n    }\n    return false;\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const owners = this.game.players\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex).map(p => p.name);\n    return !!owners.length ? owners.join(' ') : '';\n  }\n\n  customReset() {\n    this.game.players.forEach(player => player.state = new AroundClockState());\n    this.settings.setStyle();\n  }\n\n  customSettingsValidation(): boolean {\n    return !this.settings.nineLives || this.game.getNumberOfPlayers() >= 2;\n  }\n\n  private getFieldIndex(index: number) {\n    return this.settings.fields[index];\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Around The Clock'\" [playground]=\"playground\"\r\n                [rules]=\"'The object of this popular game is to be the first player to hit every number on the board ' +\r\n                 'from 1-20. The numbers must be hit in order, and players alternate after three throws. The player ' +\r\n                  'must hit each number in turn and cannot proceed until to the next number until the number is hit. ' +\r\n                   'The winner is the player who hist all the numbers in order first.\\n\\nNine Lives: Each player gets three ' +\r\n                   'lives. I do not know why the game is called 9 lives but you only get 3. Maybe it is because if you ' +\r\n                    'miss with three darts you lose a life and 3 x 3 = 9'\">\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.jump?'primary':''\" (click)=\"settings.toggleJump()\">\r\n      Enable Jump\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.punishment?'primary':''\" (click)=\"settings.togglePunishment()\">\r\n      Punishment\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.nineLives?'primary':''\" (click)=\"settings.toggleNineLives()\">\r\n      Nine Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.saboteur?'primary':''\" (click)=\"settings.toggleSaboteur()\">\r\n      Saboteur\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Field's order</h2>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.style==0?'primary':''\" (click)=\"settings.setStyle(0)\">\r\n      Numerical Order\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.style==1?'primary':''\" (click)=\"settings.setStyle(1)\">\r\n      Clockwise\r\n    </button>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.style==2?'primary':''\" (click)=\"settings.setStyle(2)\">\r\n      Anticlockwise\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.style==3?'primary':''\" (click)=\"settings.setStyle(3)\">\r\n      Random\r\n    </button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"hidden-info\" [class.hidden]=\"hiddenInfo\" (click)=\"toggleHiddenInfo()\">{{getDistanceFromRandom()}}</div>\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [hasContent]=\"settings.nineLives\">\r\n          <ng-container *ngIf=\"settings.nineLives\">\r\n            <div class=\"score\"><label>Life: </label>{{getPlayerState(player).life}}</div>\r\n          </ng-container>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class AroundClockSettings {\n  jump: boolean;\n  punishment: boolean;\n  nineLives: boolean;\n  saboteur: boolean;\n  style: number;\n  fields: number[];\n\n  constructor() {\n    this.style = 0;\n    this.jump = true;\n    this.punishment = true;\n    this.nineLives = false;\n    this.saboteur = false;\n    this.fields = AroundClockSettings.getBaseFields();\n  }\n\n  setStyle(style?: number) {\n    if (!!style || style === 0) {\n      this.style = style;\n    }\n    switch (this.style) {\n      case 1:\n        this.fields = AroundClockSettings.getClockFields();\n        break;\n      case 2:\n        this.fields = AroundClockSettings.getAnticlockFields();\n        break;\n      case 3:\n        this.fields = AroundClockSettings.getRandom();\n        break;\n      default:\n        this.fields = AroundClockSettings.getBaseFields();\n    }\n  }\n\n  toggleJump() {\n    this.jump = !this.jump;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n  }\n\n  toggleNineLives() {\n    this.nineLives = !this.nineLives;\n  }\n\n  toggleSaboteur() {\n    this.saboteur = !this.saboteur;\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getClockFields(): number[] {\n    return [0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4, 19, 20];\n  }\n\n  private static getAnticlockFields(): number[] {\n    return [4, 11, 8, 13, 10, 7, 15, 6, 18, 2, 16, 1, 14, 9, 5, 12, 3, 17, 0, 19, 20];\n  }\n\n  private static getRandom(): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    const size = fields.length;\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n      fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n    }\n    return randomFields;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor(public life = 3) {\r\n    super();\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state = new AroundClockState(this.life);\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01', color: '#009688', icon: 'emoji_food_beverage'}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket', color: '#0a756b', icon: 'sports_cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock', color: '#0f5851', icon: 'cached'}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai, Halve It', color: '#0f5851', icon: 'emoji_symbols'}\r\n  },\r\n  {\r\n    path: 'fives',\r\n    data: {name: 'Fives', color: '#009688', icon: 'add_box'}\r\n  },\r\n  {\r\n    path: 'hare-and-hound',\r\n    data: {name: 'Hare and Hound', color: '#0a756b', icon: 'accessible_forward'}\r\n  },\r\n  {\r\n    path: 'knockout',\r\n    data: {name: 'Knockout', color: '#009688', icon: 'sports_mma'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer', color: '#0a756b', icon: 'gps_fixed'}\r\n  }\r\n];\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n}\r\n","<div id=\"menu_title\">\r\n  <h1>Select Game!</h1>\r\n</div>\r\n<div id=\"menu\">\r\n  <button mat-raised-button *ngFor=\"let g of getGameList(); let i = index\"\r\n          [routerLink]=\"['/' + g.path]\" class=\"gameSelectBox {{'menu-button-'+i}}\">\r\n    <mat-icon>{{g.data.icon}}</mat-icon>\r\n    <div class=\"title\">{{g.data.name}}</div>\r\n  </button>\r\n</div>\r\n<div class=\"version\">v1.1</div>\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {CricketSettings} from './models/cricet.settings.model';\r\nimport {CricketState} from './models/cricet.state.model';\r\n\r\n@Component({\r\n  templateUrl: './cricket.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class CricketComponent extends Playground<CricketState> {\r\n\r\n  settings: CricketSettings;\r\n  playerToDisplay: Player;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new CricketSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n      if (!this.settings.isBlackOutGame() ||\r\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex ||\r\n        this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n\r\n        if (this.isFieldClosedForOthers(player, fieldIndex) && (playerFieldCount + this.multiplier) > 3) {\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, 3);\r\n        } else {\r\n          let multiplier = this.multiplier;\r\n          if (playerFieldCount < 3 && (playerFieldCount + this.multiplier) >= 3) {\r\n            multiplier = (playerFieldCount + this.multiplier) % 3;\r\n          }\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, playerFieldCount + this.multiplier);\r\n          this.multiplier = multiplier;\r\n        }\r\n      }\r\n\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        if (this.settings.isBlackOutGame()) {\r\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex) {\r\n            this.getPlayerState(player).increaseActFieldIndex();\r\n          }\r\n        }\r\n        this.punishPlayers(fieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.score = this.getPlayerTotal(p));\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    this.game.players.forEach(p => p.setWin(\r\n      this.isPlayerDone(p) &&\r\n      ((!punishStyle && this.game.isTheBestPlayer(p)) || (punishStyle && this.game.isTheWorstPlayer(p)))));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const score = this.getPunishScore(player, fieldIndex);\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n\r\n    let str = '';\r\n    if (punishStyle && score !== 0) {\r\n      str += score;\r\n    }\r\n\r\n    if (playerFieldCount === 0 && str.length === 0) {\r\n      return '○';\r\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\r\n      return this.getFieldScore(player, fieldIndex) + '';\r\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\r\n      str += '●●●';\r\n    } else {\r\n      for (let i = 0; i < playerFieldCount; i++) {\r\n        str += '●';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  isActiveField(player: Player, fieldIndex: number): boolean {\r\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(player: Player, fieldIndex: number): boolean {\r\n    return this.getPlayerState(player).getFieldCount(fieldIndex) >= 3;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.settings.isNoScoreGame()) {\r\n      return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n    }\r\n    return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    if (this.isPrimaryField(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(this.getPlayerToDisplay()).getFieldCount(fieldIndex);\r\n      const remaining = ''.padStart(3 - playerFieldCount, '●');\r\n      return remaining + '\\n' + this.game.players.filter(p => this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      return this.game.players.filter(p => !this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new CricketState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  changePlayerToDisplay(player?: Player) {\r\n    this.playerToDisplay = player;\r\n    setTimeout(() => this.playerToDisplay = null, 1500);\r\n  }\r\n\r\n  private getPlayerToDisplay(): Player {\r\n    return !!this.playerToDisplay ? this.playerToDisplay : this.game.getActualPlayer();\r\n  }\r\n\r\n  private getPlayerTotal(player: Player) {\r\n    let total = 0;\r\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\r\n      total = this.getPlayerTotalForPunishGame(player);\r\n    } else if (this.settings.isScoreGame()) {\r\n      total = this.getPlayerTotalForScoreGame(player);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForScoreGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        total += (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      }\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForPunishGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      total += this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private punishPlayers(fieldIndex: number) {\r\n    this.game.players.forEach(player => {\r\n      if (!this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        this.getPlayerState(player).setPunishCount(fieldIndex, this.getPlayerState(player).getPunishCount(fieldIndex) + this.multiplier);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  private getFieldScore(player: Player, fieldIndex: number): number {\r\n    if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n      return (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getPunishScore(player: Player, fieldIndex: number): number {\r\n    return this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n  }\r\n\r\n  private isFieldClosed(fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(player => {\r\n      closed = closed && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isFieldClosedForOthers(player: Player, fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(p => {\r\n      if (p.id !== player.id) {\r\n        closed = closed && this.isFieldDoneForPlayer(p, fieldIndex);\r\n      }\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isPlayerDone(player: Player): boolean {\r\n    let done = true;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      done = done && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    });\r\n    return done;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Ultimate Cricket'\" [playground]=\"playground\"\r\n                [rules]=\"'The objective shall be to \\'own\\' or \\'close\\' certain numbers on the board, and to achieve ' +\r\n                'the highest point score. The player or team to do so first, shall be the winner.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\"\r\n            (click)=\"settings.setStyle(2)\">Cut-Throat\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\"\r\n            (click)=\"settings.setStyle(4)\">Black Out\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           (click)=\"changePlayerToDisplay(player)\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div\r\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\r\n                *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class CricketSettings {\r\n\r\n  fields: number[] = [14, 15, 16, 17, 18, 19, 20];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize(maxField: number) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    while(this.numbs.filter(n => !!n).length !== maxField) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.numbs[this.numbs.length - 1] = true;\r\n    this.initFields();\r\n  }\r\n\r\n  all() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  small() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21]);\r\n  }\r\n\r\n  high() {\r\n    this.setAllowedField([11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  star() {\r\n    this.setAllowedField([20, 9, 14, 13, 4, 16, 7, 2, 15, 21]);\r\n  }\r\n\r\n  cross() {\r\n    this.setAllowedField([20, 3, 11, 6, 21]);\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  left() {\r\n    this.setAllowedField([12, 9, 14, 11, 8, 16, 7, 5, 19, 21]);\r\n  }\r\n\r\n  right() {\r\n    this.setAllowedField([1, 18, 4, 13, 6, 10, 15, 2, 17, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  prime() {\r\n    this.setAllowedField([2, 3, 5, 7, 11, 13, 17, 19, 21]);\r\n  }\r\n\r\n  notPrime() {\r\n    this.setAllowedField([1, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  private setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.fieldCount, fieldIndex).value;\r\n  }\r\n\r\n  setFieldCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getPunishCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.punishCount, fieldIndex).value;\r\n  }\r\n\r\n  setPunishCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.punishCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state = new CricketState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {FivesSettings} from './models/fives.settings.model';\r\n\r\n@Component({\r\n  templateUrl: './fives.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class FivesComponent extends Playground<PlaygroundState> {\r\n\r\n  settings: FivesSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new FivesSettings();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.limit);\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.game.isTheLastThrow()) {\r\n      let sum = 0;\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        sum += t.score * t.multi;\r\n      }\r\n      if (sum % this.settings.divider === 0) {\r\n        player.score -= (sum / this.settings.divider);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score <= 0));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Fives'\" [playground]=\"playground\"\r\n                [rules]=\"'The idea of the game to throw three darts into the board, in turn, to score a number that ' +\r\n                 'is divisible by five. The higher the number you score, the more points you can score. For every five ' +\r\n                  'scored, one point is awarded. E.g. if a player scores fifteen then he or she gains three points.'\">\r\n\r\n    <h2>Divider</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.divider === divider?'primary':''\"\r\n            *ngFor=\"let divider of settings.getSelectableDividers()\"\r\n            (click)=\"settings.setDivider(divider)\">{{divider}}</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Limit</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.limit === limit?'primary':''\"\r\n            *ngFor=\"let limit of settings.getSelectableLimits()\"\r\n            (click)=\"settings.setLimit(limit)\">{{limit}}</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FivesComponent} from './fives.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: FivesComponent}\r\n    ])\r\n  ],\r\n  declarations: [FivesComponent]\r\n})\r\nexport class FivesModule {\r\n}\r\n","export class FivesSettings {\r\n  divider: number;\r\n  limit: number;\r\n\r\n  constructor() {\r\n    this.divider = 5;\r\n    this.limit = 30;\r\n  }\r\n\r\n  getSelectableDividers(): number[] {\r\n    return [3, 4, 5, 6, 7, 8, 10];\r\n  }\r\n\r\n  getSelectableLimits(): number[] {\r\n    return [30, 50, 100];\r\n  }\r\n\r\n  setDivider(value: number) {\r\n    this.divider = value;\r\n  }\r\n\r\n  setLimit(value: number) {\r\n    this.limit = value;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {HareAndHoundSettings} from './models/hare-and-hound.settings.model';\r\nimport {HareAndHoundState} from './models/hare-and-hound.state.model';\r\n\r\n@Component({\r\n  templateUrl: './hare-and-hound.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class HareAndHoundComponent extends Playground<HareAndHoundState> {\r\n\r\n  settings: HareAndHoundSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService, 2, 2);\r\n    this.settings = new HareAndHoundSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isFieldEnabled(fieldIndex, state.actFieldIndex)) {\r\n      state.increaseActFieldIndex(this.multiplier);\r\n      if (state.actFieldIndex >= (FIELDS_COUNT - 1)) {\r\n        state.actFieldIndex = state.actFieldIndex - (FIELDS_COUNT - 1);\r\n      }\r\n      player.score -= this.multiplier;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    player.setWin((this.isHare() && player.score <= 0) ||\r\n      (!this.isHare() &&\r\n        (player.score + this.settings.getHareStartIndex()) <= this.game.players.find(p => this.isHare(p)).score));\r\n\r\n    if (!player.win && this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number, actFieldIndex?: number): boolean {\r\n    if (!actFieldIndex) {\r\n      actFieldIndex = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\r\n    }\r\n    return fieldIndex === this.getFieldIndex(actFieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    if (!this.isFieldEnabled(fieldIndex)) {\r\n      return this.game.players.some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players\r\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex)\r\n      .map(p => p.name);\r\n    return !!owners.length ? owners.join(' ') : '';\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (!this.isPrimaryField(fieldIndex) && !this.isSecondaryField(fieldIndex)) {\r\n      return '';\r\n    }\r\n    return (this.isHare() && this.isPrimaryField(fieldIndex) || (this.isSecondaryField(fieldIndex) && !this.isHare())) ? 'favorite' : 'directions_run';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach((player, index) => {\r\n      player.score = FIELDS_COUNT - 1;\r\n      if (index === 0) {\r\n        player.state = new HareAndHoundState(this.settings.getHareStartIndex());\r\n      } else {\r\n        player.state = new HareAndHoundState(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getFieldIndex(index: number) {\r\n    return this.settings.getFields()[index];\r\n  }\r\n\r\n  private isHare(player?: Player) {\r\n    if (!player) {\r\n      player = this.game.getActualPlayer();\r\n    }\r\n    return this.game.players.map(p => p.id).indexOf(player.id) === 0;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Hare and Hound'\" [playground]=\"playground\"\r\n                [rules]=\"'The frist player is the hare, and his opponent is the hound in pursuit. The hare must travel ' +\r\n                 'clockwise around the board starting at 20. The hare wins by returning to 20 before the hound catches ' +\r\n                  'up with him. The hound usually starts from either 12 or 5, depending on the preference of the ' +\r\n                   'players. The hound wins by overtaking the hare.'\">\r\n\r\n    <h2>Hound start position</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"(settings.houndStartIndex+1) === start?'primary':''\"\r\n            *ngFor=\"let start of settings.getSelectableHoundStart()\"\r\n            (click)=\"settings.setHoundStart(start - 1)\">{{start}}</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {HareAndHoundComponent} from './hare-and-hound.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: HareAndHoundComponent}\r\n    ])\r\n  ],\r\n  declarations: [HareAndHoundComponent]\r\n})\r\nexport class HareAndHoundModule {\r\n}\r\n","export class HareAndHoundSettings {\r\n  houndStartIndex: number;\r\n  hareStartIndex: number;\r\n\r\n  constructor() {\r\n    this.houndStartIndex = 11;\r\n    this.hareStartIndex = 19;\r\n  }\r\n\r\n  getSelectableHoundStart(): number[] {\r\n    return [14, 9, 12, 5, 20];\r\n  }\r\n\r\n  setHoundStart(value: number) {\r\n    this.houndStartIndex = value;\r\n  }\r\n\r\n  getFields(): number[] {\r\n    const index = HareAndHoundSettings.getBaseFields().indexOf(this.houndStartIndex);\r\n    return [...HareAndHoundSettings.getBaseFields().slice(index), ...HareAndHoundSettings.getBaseFields().slice(0, index)];\r\n  }\r\n\r\n  getHareStartIndex(): number {\r\n    return this.getFields().indexOf(this.hareStartIndex);\r\n  }\r\n\r\n  private static getBaseFields(): number[] {\r\n    return [19, 0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4];\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class HareAndHoundState extends PlaygroundState {\r\n\r\n  constructor(public actFieldIndex: number) {\r\n    super();\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): HareAndHoundState {\r\n    return new HareAndHoundState(this.actFieldIndex);\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KillerState} from './models/killer.state.model';\r\nimport {KillerSettings} from './models/killer.settings.model';\r\n\r\nconst DANGER_ZONE_ICON = 'sentiment_very_dissatisfied';\r\n\r\n@Component({\r\n  templateUrl: './killer.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KillerComponent extends Playground<KillerState> {\r\n\r\n  settings: KillerSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService, 2);\r\n    this.settings = new KillerSettings();\r\n    this.nextEnabled = false;\r\n    this.zeroEnabled = false;\r\n    this.multiEnabled = false;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.round === 0) {\r\n      state.actField = fieldIndex;\r\n      player.score = score;\r\n      if (this.game.isActualPlayerTheLast()) {\r\n        this.nextEnabled = true;\r\n        this.zeroEnabled = true;\r\n        this.multiEnabled = true;\r\n      }\r\n    } else {\r\n      if (state.killer) {\r\n        if (this.settings.suicide && fieldIndex === state.actField && this.multiplier > 1) {\r\n          state.life = 0;\r\n          this.extraEndingMsg = 'SUICIDE!!!';\r\n        } else if (fieldIndex === state.actField) {\r\n          state.life = Number(state.life) + Number(this.multiplier);\r\n          if (state.life > this.settings.numberOfLives) {\r\n            state.life = this.settings.numberOfLives;\r\n          }\r\n        } else {\r\n          this.game.players.filter(p => p.id !== player.id && !this.getPlayerState(p).isInactive()).forEach(p => {\r\n            const s = this.getPlayerState(p);\r\n            if (fieldIndex === s.actField) {\r\n              s.life -= this.multiplier;\r\n              if (s.life < 0) {\r\n                s.life = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (fieldIndex === state.actField) {\r\n        state.boarding -= this.multiplier;\r\n        if (state.boarding <= 0) {\r\n          state.boarding = 0;\r\n        }\r\n        state.killer = state.boarding === 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.round !== 0) {\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p).isInactive());\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !this.getPlayerState(p).isInactive()));\r\n    }\r\n    if (this.game.round === 0 || this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return fieldIndex !== 20 && !this.getAllEnabledFields().some(f => f === fieldIndex);\r\n    }\r\n    return this.getAllEnabledFields().some(f => f === fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return this.isFieldEnabled(fieldIndex);\r\n    }\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return this.isFieldEnabled(fieldIndex) && !this.isSecondaryField(fieldIndex);\r\n    }\r\n    return state.actField === fieldIndex;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return state.actField === fieldIndex;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return !state.isInactive() && state.life <= 3 && state.actField === fieldIndex;\r\n    })) {\r\n      return DANGER_ZONE_ICON;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owner = this.game.players.find(p => (p.state as KillerState).actField === fieldIndex);\r\n    return owner ? `${owner.name}(${(owner.state as KillerState).life})` : '';\r\n  }\r\n\r\n  getPlayerField(player: Player): string {\r\n    const fieldIndex = this.getPlayerState(player).actField;\r\n    return fieldIndex === 20 ? 'B' : (fieldIndex + 1) + '';\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return this.getPlayerState(player).isInactive();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player =>\r\n      player.state = new KillerState(this.settings.numberOfLives, this.settings.boardingLimit));\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\r\n  }\r\n\r\n  private getAllEnabledFields(): number[] {\r\n    return this.game.players.filter(p => !this.getPlayerState(p).isInactive())\r\n      .map(p => this.getPlayerState(p).actField);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Killer'\" [playground]=\"playground\"\r\n                [rules]=\"'Firstly each player draws lots i.e. a number between 1 - 20. Each player is then given ' +\r\n                 'between 3 & 5 lives. The objective of this game is for each thrower to first hit their own number ' +\r\n                  'three times to gain status of KILLER. Once they have achieved this they then can throw for their ' +\r\n                  'opponents number in any order they wish. Every time a KILLER status player hits an opponents ' +\r\n                  'number the opponent loses a life. KILLERS can also commit SUICIDE by hitting their own number\\'s ' +\r\n                  'triple. The winner of this game is the player that remains alive.'\">\r\n\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.suicide?'primary':''\"\r\n            (click)=\"settings.toggleSuicide()\">Suicide</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [highlighted]=\"getPlayerState(player).killer\">\r\n          <ng-container *ngIf=\"getPlayerField(player) !== '0'\">\r\n            <div class=\"score\"><label>Field: </label>{{getPlayerField(player)}}</div>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"score\">\r\n              <label>Life: </label>{{getPlayerState(player).life}}\r\n              <ng-container *ngIf=\"!getPlayerState(player).killer\"><label>Boarding: </label>{{getPlayerState(player).boarding}}</ng-container>\r\n            </div>\r\n          </ng-container>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class KillerSettings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n  suicide: boolean;\r\n\r\n  constructor() {\r\n    this.suicide = false;\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n\r\n  toggleSuicide() {\r\n    this.suicide = !this.suicide;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(public life = 5, public boarding = 3) {\r\n    super();\r\n    this.actField = -1;\r\n    this.killer = false;\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state = new KillerState(this.life, this.boarding);\r\n    state.actField = this.actField;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KnockoutSettings} from './models/knockout.settings.model';\r\nimport {KnockoutState} from './models/knockout.state.model';\r\n\r\n@Component({\r\n  templateUrl: './knockout.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KnockoutComponent extends Playground<KnockoutState> {\r\n\r\n  settings: KnockoutSettings;\r\n  score = 0;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService, 2);\r\n    this.settings = new KnockoutSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    player.score = player.getThrowsTotal();\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastThrow()) {\r\n      if (this.score > player.getThrowsTotal()) {\r\n        this.getPlayerState(player).life--;\r\n      }\r\n      this.score = player.getThrowsTotal();\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p).isInactive());\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !this.getPlayerState(p).isInactive()));\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return this.getPlayerState(player).isInactive();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player =>\r\n      player.state = new KnockoutState(this.settings.numberOfLives));\r\n    this.score = 0;\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Knockout'\" [playground]=\"playground\"\r\n                [rules]=\"'The player selected to throw first must throw as many points as possible. The player next in ' +\r\n                 'line then must throw a higher score than the player throwing before him, if he fails to throw a ' +\r\n                  'higher score a ring is put around their score, once you have 3 rings next to your name, you drop ' +\r\n                   'out of the game.'\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\">\r\n          <div class=\"clear\"></div>\r\n          <div class=\"score\">\r\n            <label>Life: </label>{{getPlayerState(player).life}}\r\n            <label>Score: </label>{{player.score}}\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {KnockoutComponent} from './knockout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KnockoutComponent}\r\n    ])\r\n  ],\r\n  declarations: [KnockoutComponent]\r\n})\r\nexport class KnockoutModule {\r\n}\r\n","export class KnockoutSettings {\r\n  numberOfLives: number;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 5;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KnockoutState extends PlaygroundState {\r\n\r\n  constructor(public life = 5) {\r\n    super();\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): KnockoutState {\r\n    return new KnockoutState(this.life);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({position: 'relative'}),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({left: '-100%'})\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({left: '100%'}))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({left: '0%'}))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild(), {optional: true}),\r\n    ]),\r\n  ]);\r\n","export class ShanghaiSettings {\r\n\r\n  fields: number[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: number): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: number): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: number, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state = new ShanghaiState();\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ShanghaiSettings} from './models/shanghai.settings.model';\r\nimport {ShanghaiState} from './models/shanghai.state.model';\r\n\r\n@Component({\r\n  templateUrl: './shanghai.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ShanghaiComponent extends Playground<ShanghaiState> {\r\n\r\n  settings: ShanghaiSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new ShanghaiSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isActiveField(fieldIndex)) {\r\n      state.increaseFieldCount(fieldIndex, 1);\r\n      state.increaseFieldScore(fieldIndex, this.multiplier);\r\n      if (this.settings.noScore) {\r\n        player.score += this.multiplier;\r\n      } else {\r\n        player.score += score * this.multiplier;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    // Shanghai rule\r\n    if (this.game.isTheLastThrow()) {\r\n      let multi = 1;\r\n      const fieldIndex = this.settings.fields[this.game.round];\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        if (t.score === Playground.getFieldValueFromIndex(fieldIndex)) {\r\n          multi *= (t.multi + 1);\r\n        }\r\n      }\r\n      if (multi === 1 && this.settings.halveIt) {\r\n        player.score = Math.round(player.score / 2);\r\n      }\r\n      player.setWin(multi === 24);\r\n      if (player.win) {\r\n        this.extraEndingMsg = 'SHANGHAI!!!';\r\n      }\r\n    }\r\n\r\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\r\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\r\n    if (gameEnded) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    } else if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n    if (fieldCount === 0) {\r\n      return '○○○';\r\n    } else {\r\n      let str = '' + this.getPlayerState(player).getFieldScore(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      for (let i = 0; i < fieldCount; i++) {\r\n        str += '●';\r\n      }\r\n      for (let i = fieldCount; i < 3; i++) {\r\n        str += '○';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ShanghaiState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  isActiveField(fieldIndex: number): boolean {\r\n    return this.settings.fields[this.game.round] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) < this.game.round;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) === this.game.round;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    let max = winners[0].score;\r\n    winners.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\r\n      const c = p.clone();\r\n      c.win = false;\r\n      return c;\r\n    });\r\n    return [...winners, ...losers];\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Shanghai / Halve It'\" [playground]=\"playground\"\r\n                [rules]=\"' Players start by throwing at the number 1 on the board. The object is to hit a single,' +\r\n                 'treble and double (in any order). This first player to hit a single, treble and double wins. If no' +\r\n                  'player achieves this on number 1, the play moves to number 2 and so on until someone wins.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.numbs[i]?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-raised-button class=\"button big capitalize\" (click)=\"settings.randomize()\">Randomize</button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.noScore?'primary':''\"\r\n            (click)=\"settings.toggleNoScore()\">No score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.halveIt?'primary':''\"\r\n            (click)=\"settings.toggleHalveIt()\">Halve It\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isFieldDoneForPlayer(field) ? '' : 'highlighted'}}\"\r\n                 *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {Component, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  templateUrl: 'darts-table-dialog.component.html',\r\n  styleUrls: ['darts-table-dialog.component.scss']\r\n})\r\nexport class DartsTableDialogComponent {\r\n\r\n  constructor(protected dialogRef: MatDialogRef<DartsTableDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { fieldIndexes: [] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container darts-table-container\">\r\n  <mat-dialog-content class=\"body-2\" (click)=\"close()\">\r\n    <img src=\"assets/darts_table.png\">\r\n    <div *ngFor=\"let f of data.fieldIndexes\" class=\"clip darts-table-field-{{f}}\"></div>\r\n  </mat-dialog-content>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content || !!data.players.length\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"true\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component} from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-game-rules',\r\n  templateUrl: './game-rules.component.html',\r\n  styleUrls: ['./game-rules.component.scss']\r\n})\r\nexport class GameRulesComponent {\r\n}\r\n","<div id=\"rules\">\r\n  <details>\r\n    <summary>Click here for rules</summary>\r\n    <p><ng-content></ng-content></p>\r\n  </details>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: Playground<PlaygroundState>;\r\n\r\n  constructor(public route: Router, private dialogService: DialogService) {\r\n  }\r\n\r\n  quit() {\r\n    this.route.navigate(['/']);\r\n    this.playground.game.resetScore();\r\n    this.playground.multiplier = 1;\r\n    this.playground.extraEndingMsg = '';\r\n  }\r\n\r\n  showSettings() {\r\n    this.playground.reset();\r\n    this.playground.settingsOpen = true;\r\n  }\r\n\r\n  showTable() {\r\n    const enabledFields: number[] = [];\r\n    for (let i = 0; i <= 20; i++) {\r\n      if (this.playground.isFieldEnabled(i)){\r\n        enabledFields.push(i);\r\n      }\r\n    }\r\n    this.dialogService.openDartsTable(enabledFields);\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <div class=\"buttons\">\r\n    <button mat-raised-button (click)=\"quit()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.newGame(true)\">\r\n      <mat-icon>refresh</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"showSettings()\">\r\n      <mat-icon>build</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.undo()\">\r\n      <mat-icon>undo</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"round-info\" (click)=\"showTable()\">{{playground.game.round+1}}.</div>\r\n</div>\r\n<div class=\"clear\"></div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isPrimaryField(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondaryField(fieldIndex)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabled(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  throwNumber(fieldIndex: number) {\r\n    this.playground.throwNumber([this.playground.isFieldEnabled(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0,\r\n      Playground.getFieldValueFromIndex(fieldIndex)]);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\">\r\n\r\n  <button mat-raised-button *ngFor=\"let i of getNumbers()\" class=\"number\" [color]=\"getNumberColor(i-1)\"\r\n          [disabled]=\"isNumberDisabled(i-1)\" (click)=\"throwNumber(i-1)\">\r\n    {{i}}\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(i-1)\">{{ playground.getFieldIcon(i-1)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(i-1)\">{{ playground.getFieldNote(i-1)}}</p>\r\n  </button>\r\n  <button mat-raised-button class=\"number\" [color]=\"getNumberColor(20)\" [disabled]=\"isNumberDisabled(20)\"\r\n          (click)=\"throwNumber(20)\">\r\n    Bull\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(20)\">{{ playground.getFieldIcon(20)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(20)\">{{ playground.getFieldNote(20)}}</p>\r\n  </button>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 2 ? 'primary' : ''\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">Double</button>\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 3 ? 'primary' : ''\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">Triple</button>\r\n\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.throwNumber([0,0])\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  selector: 'app-player-score',\r\n  templateUrl: './player-score.component.html',\r\n  styleUrls: ['./player-score.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PlayerScoreComponent {\r\n  @Input() player: Player;\r\n  @Input() hasContent = true;\r\n  @Input() scoreDisplayed = true;\r\n  @Input() highlighted = false;\r\n}\r\n","<div class=\"player_info\">\r\n  <div class=\"name\"><mat-icon *ngIf=\"highlighted\">offline_bolt</mat-icon>{{player.name}}</div>\r\n  <div class=\"shoots\">\r\n    <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\r\n    <div class=\"shoot total\">{{!player.getThrowsTotal() ? '0' : player.getThrowsTotal()}}</div>\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n  <div class=\"line\" *ngIf=\"hasContent\"></div>\r\n  <ng-content></ng-content>\r\n  <div class=\"line\" *ngIf=\"scoreDisplayed\"></div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed\">{{player.score}}</div>\r\n  <div class=\"clear\"></div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'app-player-settings',\r\n  templateUrl: './player-settings.component.html',\r\n  styleUrls: ['./player-settings.component.scss']\r\n})\r\nexport class PlayerSettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  storedPlayers = [];\r\n\r\n  constructor(private application: ApplicationStateService) {\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  getOptions() {\r\n    return this.storedPlayers.filter(o => this.playground.game.players\r\n      .map(p => p.name).indexOf(o) === -1);\r\n  }\r\n\r\n  addPlayer(playerNameInput: any) {\r\n    this.playground.addPlayer(playerNameInput);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  playerSelected(event: MatAutocompleteSelectedEvent, playerNameInput: HTMLInputElement) {\r\n    this.playground.addPlayer(event.option);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n    playerNameInput.value = '';\r\n    playerNameInput.blur();\r\n  }\r\n}\r\n","<div class=\"add-player\">\r\n  <mat-form-field appearance=\"outline\" class=\"big\">\r\n    <mat-label>Player name</mat-label>\r\n    <input #playerNameInput type=\"text\" matInput placeholder=\"Enter name\"\r\n      [disabled]=\"!playground.canAddPlayer()\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"playerSelected($event, playerNameInput)\">\r\n      <mat-option *ngFor=\"let option of getOptions()\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button mat-icon-button (click)=\"addPlayer(playerNameInput)\" [disabled]=\"!playground.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button>\r\n</div>\r\n<div class=\"player-table\">\r\n  <div class=\"player-row\" *ngFor=\"let player of playground.game.players; let i = index\">\r\n    <div class=\"player-name\">{{player.name}}</div>\r\n    <button mat-icon-button (click)=\"playground.removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\r\n  </div>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() title: string;\r\n  @Input() rules: string;\r\n}\r\n","<div class=\"settings\">\r\n  <h1>{{title}} Settings</h1>\r\n\r\n  <app-game-rules>{{rules}}</app-game-rules>\r\n\r\n  <h2>Players</h2>\r\n  <app-player-settings [playground]=\"playground\"></app-player-settings>\r\n  <mat-divider></mat-divider>\r\n\r\n  <ng-content></ng-content>\r\n\r\n  <mat-divider></mat-divider>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.newGame()\">Start</button>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.quit()\">Cancel</button>\r\n</div>\r\n","export class ApplicationSettings {\r\n  darkTheme = false;\r\n}\r\n","export class FieldValue {\n  field: number;\n  value: number;\n\n  constructor(field: number, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","import {Throw} from './throw.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class Player {\r\n  score = 0;\r\n  throws: number[] = [];\r\n  throwsHistory: Throw[];\r\n  win = false;\r\n  winDateTime = 0;\r\n  first = true;\r\n  state: PlaygroundState;\r\n\r\n  constructor(public id: number, public name = '') {\r\n  }\r\n\r\n  setWin(win = true) {\r\n    this.win = win;\r\n    this.winDateTime = win ? new Date().getTime() : 0;\r\n  }\r\n\r\n  getThrowsTotal(): number {\r\n    return this.throws.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  addThrowHistory(thr: Throw) {\r\n    this.throwsHistory.push(thr);\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n    this.throws = [];\r\n    this.throwsHistory = [];\r\n    this.win = false;\r\n    this.winDateTime = 0;\r\n    this.first = true;\r\n  }\r\n\r\n  clone(): Player {\r\n    const player = new Player(this.id, this.name);\r\n    player.score = this.score;\r\n    player.throws = [];\r\n    this.throws.forEach(t => {\r\n      player.throws.push(t);\r\n    });\r\n    player.throwsHistory = this.throwsHistory;\r\n    player.win = this.win;\r\n    player.winDateTime = this.winDateTime;\r\n    player.first = this.first;\r\n    player.throwsHistory = [];\r\n    this.throwsHistory.forEach(throws => {\r\n      player.throwsHistory.push(throws.clone());\r\n    });\r\n    if (this.state) {\r\n      player.state = this.state.clone();\r\n    }\r\n    return player;\r\n  }\r\n}\r\n","import {FieldValue} from './field-value.model';\r\n\r\nexport abstract class PlaygroundState {\r\n\r\n  getFieldValue(list: FieldValue[], fieldIndex: number): FieldValue {\r\n    const filtered = list.filter(f => f.field === fieldIndex);\r\n    if (filtered.length === 0) {\r\n      list.push(new FieldValue(fieldIndex, 0));\r\n    }\r\n    return list.filter(f => f.field === fieldIndex)[0];\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return false;\r\n  }\r\n\r\n  abstract clone(): PlaygroundState;\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {Player} from './player.model';\r\nimport {Throw} from './throw.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {GameService} from '~services/game.service';\r\n\r\nexport const FIELDS_COUNT = 21;\r\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\r\n\r\nexport abstract class Playground<T extends PlaygroundState> implements OnInit {\r\n\r\n  throwEnabled = true;\r\n  settingsOpen = true;\r\n  gameHistory: GameService[];\r\n  nextEnabled = true;\r\n  zeroEnabled = true;\r\n  multiEnabled = true;\r\n  playground = this;\r\n  multiplier: number;\r\n  extraEndingMsg: string;\r\n\r\n  protected constructor(public application: ApplicationStateService,\r\n                        public game: GameService,\r\n                        public route: Router,\r\n                        public dialogService: DialogService,\r\n                        public minimumNumberOfPlayers = 1,\r\n                        public maximumNumberOfPlayers?: number) {\r\n  }\r\n\r\n  static getFieldValueFromIndex(fieldIndex: number): number {\r\n    return fieldIndex === 20 ? 25 : fieldIndex + 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.settingsOpen = true;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  throwNumber(args: number[]) {\r\n    const score = args[0];\r\n    const scoreReal = args[1];\r\n    if (this.throwEnabled) {\r\n      this.saveGameInHistory();\r\n      this.throwEnabled = false;\r\n      if (score === 25 && this.multiplier === 3) {\r\n        this.multiplier = 1;\r\n      }\r\n\r\n      const actualPlayer = this.game.getActualPlayer();\r\n      const fieldIndex = score === 25 ? 20 : score - 1;\r\n\r\n      actualPlayer.addThrowHistory(new Throw(score, this.multiplier, this.game.actualThrow));\r\n      if (this.game.actualThrow === 0) {\r\n        actualPlayer.throws = [];\r\n      }\r\n      actualPlayer.throws[this.game.actualThrow] = score * this.multiplier;\r\n      this.game.actualThrow++;\r\n\r\n      this.calculatePoints(actualPlayer, fieldIndex, score, scoreReal);\r\n      this.checkPlayerState(actualPlayer);\r\n\r\n      this.multiplier = 1;\r\n      const winners = this.game.players.filter(p => p.win);\r\n      if (winners.length > 0) {\r\n        if ((this.game.victoryFirst || this.game.getNumberOfPlayers() - winners.length <= 1) || !this.game.victoryFirst) {\r\n          if (!this.extraEndingMsg) {\r\n            this.extraEndingMsg = 'Round: #' + (this.game.round + 1);\r\n          }\r\n          this.dialogService.openDialog('Game Over!', this.extraEndingMsg, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else {\r\n          while (this.game.getActualPlayer().win) {\r\n            this.game.nextPlayer();\r\n          }\r\n        }\r\n      }\r\n\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p).isInactive());\r\n      if (!activePlayers.length) {\r\n        if (!this.extraEndingMsg) {\r\n          this.extraEndingMsg = 'Round: #' + (this.game.round + 1);\r\n        }\r\n        this.dialogService.openDialog('Game Over!', this.extraEndingMsg, this.getTheFinalResult());\r\n        this.newGame(true);\r\n      }\r\n\r\n      this.throwEnabled = true;\r\n    }\r\n  }\r\n\r\n  getPlayerState(player: Player): T {\r\n    return player.state as T;\r\n  }\r\n\r\n  canAddPlayer(): boolean {\r\n    return this.game.getNumberOfPlayers() < MAXIMUM_NUMBER_OF_PLAYERS;\r\n  }\r\n\r\n  addPlayer(name: any) {\r\n    if (!!name.value.trim().length && !this.game.players.some(p => p.name === name.value)) {\r\n      this.game.players.push(new Player(uuid(), name.value));\r\n      this.application.storePlayer(name.value);\r\n    }\r\n    name.value = '';\r\n  }\r\n\r\n  removePlayer(player: Player) {\r\n    this.game.players = this.game.players.filter(p => p !== player);\r\n  }\r\n\r\n  newGame(rotate = false) {\r\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\r\n    if (!this.playerSettingsValidation()) {\r\n      this.dialogService.openErrorDialog('Error!', 'Number of players are incorrect.');\r\n    } else if (this.settingsOpen) {\r\n      this.dialogService.openErrorDialog('Error!', 'Settings is incorrect.');\r\n    }\r\n    if (rotate) {\r\n      this.game.rotatePlayers();\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  triplePoint() {\r\n    this.multiplier = this.multiplier === 3 ? 1 : 3;\r\n  }\r\n\r\n  doublePoint() {\r\n    this.multiplier = this.multiplier === 2 ? 1 : 2;\r\n  }\r\n\r\n  undo() {\r\n    if (this.gameHistory.length > 0) {\r\n      this.game = this.gameHistory.pop();\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    const actThrow = this.game.actualThrow;\r\n    this.throwNumber([0, 0]);\r\n    if (actThrow !== 2) {\r\n      this.skip();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.gameHistory = [];\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n    this.customReset();\r\n  }\r\n\r\n  quit() {\r\n    this.reset();\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    winners = winners.sort((p1, p2) => p1.winDateTime < p2.winDateTime ? -1 : 1)\r\n      .slice(0, 1).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id))\r\n      .map(p => {\r\n        const c = p.clone();\r\n        c.win = false;\r\n        return c;\r\n      });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  private playerSettingsValidation(): boolean {\r\n    const players: Player[] = [];\r\n    this.game.players.forEach(player => {\r\n      if (player.name.length !== 0) {\r\n        players.push(player);\r\n      }\r\n    });\r\n    this.game.players = players;\r\n    return players.length >= this.minimumNumberOfPlayers &&\r\n      (!this.maximumNumberOfPlayers || players.length <= this.maximumNumberOfPlayers);\r\n  }\r\n\r\n  private saveGameInHistory() {\r\n    this.gameHistory.push(this.game.clone());\r\n  }\r\n\r\n  abstract customReset(): void;\r\n\r\n  abstract calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal?: number);\r\n\r\n  abstract checkPlayerState(player: Player);\r\n}\r\n","export class Throw {\n  field: string;\n\n  constructor(public score: number, public multi: number, public order: number) {\n    this.field = this.score === 25 ? 'B' :  this.score + '';\n  }\n\n  clone(): Throw {\n    return new Throw(this.score, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {ApplicationSettings} from '~models/application-settings.model';\r\n\r\nconst APPLICATION_KEY = 'ApplicationSettings';\r\nconst PLAYER_KEY = 'Players';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApplicationStateService {\r\n\r\n  settings = new ApplicationSettings();\r\n\r\n  constructor() {\r\n    const data = localStorage.getItem(APPLICATION_KEY);\r\n    if (data) {\r\n      this.settings = JSON.parse(data);\r\n    }\r\n    this.setTheme();\r\n  }\r\n\r\n  toggleDarkTheme() {\r\n    this.settings.darkTheme = !this.settings.darkTheme;\r\n    this.setTheme();\r\n    this.saveSettings();\r\n  }\r\n\r\n  getStoredPlayers(): string[] {\r\n    const data = localStorage.getItem(PLAYER_KEY);\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  storePlayer(name: string) {\r\n    const players = [name, ...this.getStoredPlayers()].filter((v, i, a) => a.indexOf(v) === i);\r\n    localStorage.setItem(PLAYER_KEY, JSON.stringify(players));\r\n  }\r\n\r\n  private setTheme() {\r\n    if (this.settings.darkTheme) {\r\n      document.body.classList.add('dark-theme');\r\n    } else {\r\n      document.body.className = document.body.className.replace('dark-theme', '');\r\n    }\r\n  }\r\n\r\n  private saveSettings() {\r\n    localStorage.setItem(APPLICATION_KEY, JSON.stringify(this.settings));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\nimport {DartsTableDialogComponent} from '~components/darts-table/darts-table-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n\r\n  openErrorDialog(title = '', content = ''): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'error-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n\r\n  openDartsTable(fieldIndexes: number[]){\r\n    return this.dialog.open(DartsTableDialogComponent, {\r\n      data: {fieldIndexes}\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Player} from '../models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GameService {\r\n  players: Player[] = [];\r\n  actualPlayerIndex: number;\r\n  actualThrow: number;\r\n  round: number;\r\n  victoryFirst = true;\r\n\r\n  toggleVictoryFirst() {\r\n    this.victoryFirst = !this.victoryFirst;\r\n  }\r\n\r\n  isTheLastThrow(): boolean {\r\n    return this.actualThrow === 3;\r\n  }\r\n\r\n  getActualPlayer(): Player {\r\n    return this.players[this.actualPlayerIndex];\r\n  }\r\n\r\n  nextPlayer(): void {\r\n    if (this.isActualPlayerTheLast()) {\r\n      this.nextRound();\r\n    }\r\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\r\n    this.actualThrow = 0;\r\n  }\r\n\r\n  getNumberOfPlayers(): number {\r\n    return this.players.length;\r\n  }\r\n\r\n  getTheFirstPlayer(): Player {\r\n    return this.players[0];\r\n  }\r\n\r\n  isTheFirstPlayer(player: Player): boolean {\r\n    return player.id === this.getTheFirstPlayer().id;\r\n  }\r\n\r\n  isActualPlayerIsTheFirst(): boolean {\r\n    return this.isTheFirstPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheLastPlayer(): Player {\r\n    return this.players[this.getNumberOfPlayers() - 1];\r\n  }\r\n\r\n  isTheLastPlayer(player: Player): boolean {\r\n    return player.id === this.getTheLastPlayer().id;\r\n  }\r\n\r\n  isActualPlayerTheLast(): boolean {\r\n    return this.isTheLastPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  isTheBestPlayer(actPlayer: Player): boolean {\r\n    let max = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      max = player.score > max ? player.score : max;\r\n    });\r\n    return actPlayer.score === max;\r\n  }\r\n\r\n  isTheWorstPlayer(actPlayer: Player): boolean {\r\n    let min = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      min = player.score < min ? player.score : min;\r\n    });\r\n    return actPlayer.score === min;\r\n  }\r\n\r\n  nextRound(): void {\r\n    this.round++;\r\n  }\r\n\r\n  resetScore(): void {\r\n    this.players.forEach(player => player.reset());\r\n    this.actualPlayerIndex = 0;\r\n    this.actualThrow = 0;\r\n    this.round = 0;\r\n  }\r\n\r\n  rotatePlayers(): void {\r\n    this.players.push(this.players.shift());\r\n  }\r\n\r\n  clone(): GameService {\r\n    const game = new GameService();\r\n    game.actualPlayerIndex = this.actualPlayerIndex;\r\n    game.actualThrow = this.actualThrow;\r\n    game.round = this.round;\r\n    const players: Player[] = [];\r\n    this.players.forEach(player => {\r\n      players.push(player.clone());\r\n    });\r\n    game.players = players;\r\n    return game;\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MaterialModule} from '../material.module';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\r\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\r\nimport {PlayerSettingsComponent} from '~components/player-settings/player-settings.component';\r\nimport {SettingsComponent} from '~components/settings/settings.component';\r\nimport {PlayerScoreComponent} from '~components/player-score/player-score.component';\r\nimport {GameRulesComponent} from '~components/game-rules/game-rules.component';\r\nimport {DartsTableDialogComponent} from '~components/darts-table/darts-table-dialog.component';\r\n\r\nconst components = [NumberPlateComponent, GameToolbarComponent, GameRulesComponent, DartsTableDialogComponent,\r\n  DialogComponent, PlayerSettingsComponent, SettingsComponent, PlayerScoreComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  declarations: components,\r\n  exports: [CommonModule, FormsModule, MaterialModule, ...components],\r\n  entryComponents: [DialogComponent, DartsTableDialogComponent]\r\n})\r\nexport class SharedModule {\r\n}\r\n","export class X01Settings {\n\n  startValue = 201;\n  start = 1;\n  checkout = 2;\n\n  isNormalStart(): boolean {\n    return this.start === 1;\n  }\n\n  isDoubleStart(): boolean {\n    return this.start === 2;\n  }\n\n  isTripleStart(): boolean {\n    return this.start === 3;\n  }\n\n  isNormalCheckout(): boolean {\n    return this.checkout === 1;\n  }\n\n  isDoubleCheckout(): boolean {\n    return this.checkout === 2;\n  }\n\n  isTripleCheckout(): boolean {\n    return this.checkout === 3;\n  }\n\n  isHighScoreGame(): boolean {\n    return this.checkout === 4;\n  }\n\n  setStart(start: number) {\n    this.start = start;\n  }\n\n  setCheckout(checkout: number) {\n    this.checkout = checkout;\n  }\n\n  setStartValue(startValue: number) {\n    this.startValue = startValue;\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {X01Settings} from './models/x01.settings.model';\r\n\r\n@Component({\r\n  templateUrl: './x01.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class X01Component extends Playground<PlaygroundState> {\r\n\r\n  settings: X01Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new X01Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const validStart = !player.first || this.settings.isNormalStart()\r\n      || (player.first\r\n        && ((this.settings.isDoubleStart() && this.multiplier === 2)\r\n          || (this.settings.isTripleStart() && this.multiplier === 3)));\r\n    if (validStart) {\r\n      const actualScore = score * this.multiplier;\r\n      player.first = false;\r\n      player.score -= actualScore;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    let next = false;\r\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\r\n      ((player.score === 0 && (this.settings.isNormalCheckout()\r\n        || (this.settings.isDoubleCheckout() && this.multiplier === 2)\r\n        || (this.settings.isTripleCheckout() && this.multiplier === 3))))) {\r\n      player.setWin();\r\n      next = true;\r\n    } else if (player.score <= 0\r\n      || (this.settings.isDoubleCheckout() && player.score < 2)\r\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\r\n      player.throws.forEach(t => player.score += t);\r\n      next = true;\r\n      this.dialogService.openErrorDialog(`${this.game.getActualPlayer().name} busted!`);\r\n    }\r\n    if (this.game.isTheLastThrow() || next) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.startValue);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'X01'\" [playground]=\"playground\"\r\n                [rules]=\"'All players start with 301/501 points and attempt to reach zero. If a player scores more ' +\r\n                 'than the total required to reach zero, the player “busts” and the score returns to the score that ' +\r\n                  'was existing at the start of the turn.'\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===101?'primary':''\"\r\n            (click)=\"settings.setStartValue(101)\">101\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===201?'primary':''\"\r\n            (click)=\"settings.setStartValue(201)\">201\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===301?'primary':''\"\r\n            (click)=\"settings.setStartValue(301)\">301\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===501?'primary':''\"\r\n            (click)=\"settings.setStartValue(501)\">501\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===701?'primary':''\"\r\n            (click)=\"settings.setStartValue(701)\">701\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===901?'primary':''\"\r\n            (click)=\"settings.setStartValue(901)\">901\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check In</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===1?'primary':''\"\r\n            (click)=\"settings.setStart(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===2?'primary':''\"\r\n            (click)=\"settings.setStart(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===3?'primary':''\"\r\n            (click)=\"settings.setStart(3)\">Triple\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check Out</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===1?'primary':''\"\r\n            (click)=\"settings.setCheckout(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===2?'primary':''\"\r\n            (click)=\"settings.setCheckout(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===3?'primary':''\"\r\n            (click)=\"settings.setCheckout(3)\">Triple\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===4?'primary':''\"\r\n            (click)=\"settings.setCheckout(4)\">None\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}