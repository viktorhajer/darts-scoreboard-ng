{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/aroundclock/around-clock.component.ts","webpack:///src/app/aroundclock/around-clock.component.html","webpack:///src/app/aroundclock/around-clock.module.ts","webpack:///src/app/aroundclock/models/settings.model.ts","webpack:///src/app/aroundclock/models/state.model.ts","webpack:///src/app/chase-dragon/chase-dragon.component.ts","webpack:///src/app/chase-dragon/chase-dragon.component.html","webpack:///src/app/chase-dragon/chase-dragon.module.ts","webpack:///src/app/chase-dragon/models/settings.model.ts","webpack:///src/app/chase-dragon/models/state.model.ts","webpack:///src/app/components/menu.component.ts","webpack:///src/app/components/menu.component.html","webpack:///src/app/cricket/cricket.component.ts","webpack:///src/app/cricket/cricket.component.html","webpack:///src/app/cricket/cricket.module.ts","webpack:///src/app/cricket/models/settings.model.ts","webpack:///src/app/cricket/models/state.model.ts","webpack:///src/app/killer/killer.component.ts","webpack:///src/app/killer/killer.component.html","webpack:///src/app/killer/killer.module.ts","webpack:///src/app/killer/models/settings.model.ts","webpack:///src/app/killer/models/state.model.ts","webpack:///src/app/material.module.ts","webpack:///src/app/shanghai/models/settings.model.ts","webpack:///src/app/shanghai/models/state.model.ts","webpack:///src/app/shanghai/shanghai.component.ts","webpack:///src/app/shanghai/shanghai.component.html","webpack:///src/app/shanghai/shanghai.module.ts","webpack:///src/app/shared/components/dialog.component.ts","webpack:///src/app/shared/components/dialog.component.html","webpack:///src/app/shared/components/game-toolbar.component.ts","webpack:///src/app/shared/components/game-toolbar.component.html","webpack:///src/app/shared/components/number-plate.component.ts","webpack:///src/app/shared/components/number-plate.component.html","webpack:///src/app/shared/models/field-value.model.ts","webpack:///src/app/shared/models/player.model.ts","webpack:///src/app/shared/models/playground-state.model.ts","webpack:///src/app/shared/models/playground.model.ts","webpack:///src/app/shared/models/throw.model.ts","webpack:///src/app/shared/services/dialog.service.ts","webpack:///src/app/shared/services/game.service.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/x01/models/settings.model.ts","webpack:///src/app/x01/x01.component.ts","webpack:///src/app/x01/x01.component.html","webpack:///src/app/x01/x01.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","component","data","name","loadChildren","AppComponent","selector","templateUrl","styles","AppModule","forRoot","imports","declarations","bootstrap","settings","AroundClockComponent","game","route","dialogService","state","players","forEach","player","push","fields","length","score","getActualPlayer","field","getPlayerState","getActFieldIndex","actFieldIndex","multiplier","increaseActFieldIndex","jump","win","actualThrow","nextPlayer","fieldStr","indexOf","isFieldEnabledToThrow","ret","filter","s","AroundClockModule","forChild","Settings","i","nm","AroundClockState","value","ChaseDragonComponent","bullCount","ChaseDragonModule","long","setFields","ChaseDragonState","MenuComponent","r","CricketComponent","updateField","p","getPlayerTotal","punishStyle","isPunishGame","isBlackOutGame","isPlayerDone","isTheBestPlayer","isTheWorstPlayer","getPunishScore","playerFieldCount","getFieldCount","str","isNoScoreGame","getFieldScore","isFieldClosed","total","getPlayerTotalForPunishGame","isScoreGame","getPlayerTotalForScoreGame","isFieldDoneForPlayer","getFieldValueAsNumber","getPunishCount","isFieldClosedForOthers","setFieldCount","punishPlayers","setPunishCount","closed","done","CricketModule","numbs","style","defaultSet","initFields","Math","floor","random","setAllowedField","numbers","f","CricketState","fieldCount","punishCount","getFieldValue","fv","clone","KillerComponent","nextEnabled","zeroEnabled","multiEnabled","numberOfLives","boardingLimit","isDead","round","actField","isActualPlayerTheLast","killer","life","Number","boarding","actualPlayer","some","getAllEnabledFields","isSecondHighlighted","map","KillerModule","KillerState","dead","materialImports","MaterialModule","numberOfMaxFields","noScore","halveIt","rand","ShanghaiState","fieldScore","ShanghaiComponent","isActiveField","increaseFieldCount","increaseFieldScore","multi","t","throwsHistory","getPreviousField","extraEndingMsg","gameEnded","isTheLastThrow","ShanghaiModule","DialogComponent","dialogRef","close","styleUrls","GameToolbarComponent","navigate","resetScore","playground","reset","settingsOpen","quit","showSettings","NumberPlateComponent","FieldValue","Player","throws","first","reduce","a","b","thr","PlaygroundState","list","filtered","PlaygroundModel","throwEnabled","stateHistory","addPlayer","save","addThrowHistory","calculatePoints","checkPlayerState","openDialog","canBeDraw","isDraw","newGame","rotate","validatePlayerSettings","validateSettings","rotatePlayers","gameHistory","customReset","parseInt","pop","isLastRound","customNext","Throw","fieldNum","order","DialogService","dialog","title","content","open","panelClass","providedIn","MAXIMUM_NUMBER_OF_PLAYERS","GameService","actualPlayerIndex","nextRound","getNumberOfPlayers","getTheFirstPlayer","isTheFirstPlayer","getTheLastPlayer","isTheLastPlayer","actPlayer","bestPlayer","lastPlayer","winners","shift","SharedModule","entryComponents","startValue","start","checkout","X01Component","actualScore","validStart","isNormalStart","isDoubleStart","isTripleStart","countDown","reject","setInterval","clearInterval","next","isHighScoreGame","isNormalCheckout","isDoubleCheckout","isTripleCheckout","busted","X01Module","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {MenuComponent} from './components/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {ChaseDragonModule} from './chase-dragon/chase-dragon.module';\nimport {KillerModule} from './killer/killer.module';\n\nexport const routes: Routes = [\n  {path: '', component: MenuComponent},\n  {path: 'menu', component: MenuComponent},\n  {\n    path: 'x01',\n    data: {name: 'Classic X01'},\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    data: {name: 'Ultimate Cricket'},\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    data: {name: 'Around The Clock'},\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    data: {name: 'Shanghai / Halve It'},\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'chase-dragon',\n    data: {name: 'Chase the Dragon'},\n    loadChildren: () => ChaseDragonModule\n  },\n  {\n    path: 'killer',\n    data: {name: 'Killer'},\n    loadChildren: () => KillerModule\n  }\n];\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styles: []\n})\nexport class AppComponent {\n}\n","<router-outlet></router-outlet>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MenuComponent} from './components/menu.component';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent, MenuComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\nimport {AroundClockState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './around-clock.component.html'\n})\nexport class AroundClockComponent extends PlaygroundModel<AroundClockState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new AroundClockState(player)), this);\n  }\n\n  validateSettings(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n\n    const player = this.game.getActualPlayer();\n    const field = score === 25 ? 'B' : (score + '');\n    const state: AroundClockState = this.getPlayerState(player);\n    if (this.settings.fields[state.getActFieldIndex()] === field) {\n      // last throw\n      if (state.actFieldIndex >= this.settings.fields.length - this.game.multiplier) {\n        this.game.multiplier = this.game.multiplier === 1 ? 1 : this.settings.fields.length - (state.actFieldIndex + 1);\n      }\n      state.increaseActFieldIndex(this.settings.jump ? this.game.multiplier : 1);\n      if (state.actFieldIndex >= this.settings.fields.length) {\n        state.actFieldIndex = this.settings.fields.length;\n      }\n    }\n    player.score++;\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n    if ((this.settings.fields.length - 1) < this.getPlayerState(player).getActFieldIndex()) {\n      player.win = true;\n    } else if (this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return this.settings.fields.indexOf(fieldStr) === this.getPlayerState(this.game.getActualPlayer()).getActFieldIndex();\n  }\n\n  isHighlighted(field: number): boolean {\n    return this.isFieldEnabledToThrow(field);\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    let ret = false;\n    if (!this.isFieldEnabledToThrow(field)) {\n      let fieldStr = field + '';\n      if (field === 25) {\n        fieldStr = 'B';\n      }\n      this.game.players.forEach(player => {\n        if (player !== this.game.getActualPlayer()) {\n          ret = this.settings.fields.indexOf(fieldStr) === this.getPlayerState(player).getActFieldIndex();\n          if (ret) {\n            return;\n          }\n        }\n      });\n    }\n    return ret;\n  }\n\n  getActualField(player): string {\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()];\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  canBeDraw(): boolean {\n    return false;\n  }\n\n  private getPlayerState(player: Player): AroundClockState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"left side_left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <div class=\"clear\" *ngIf=\"!settingsOpen\"></div>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name left\">{{player.name}}</div>\n          <div class=\"shoots right\">\n            <div class=\"shoot\"><p>{{!player.throws[2] ? '-' : player.throws[2]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[1] ? '-' : player.throws[1]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[0] ? '-' : player.throws[0]}}</p></div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"point right\"><label>Field: </label>{{getActualField(player)}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Around The Clock Settings</h1>\n\n      <h2>Players</h2>\n      <button mat-button class=\"button left big\" (click)=\"addPlayer()\" *ngIf=\"game.canAddPlayer()\">New Player</button>\n      <button mat-button class=\"button left big inactive\" *ngIf=\"!game.canAddPlayer()\">New Player</button>\n      <div class=\"clear\"></div>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <p>\n          Player #{{i + 1}} name: <input [(ngModel)]=\"player.name\" name=\"input\" type=\"text\">\n          <button mat-button class=\"button small\" (click)=\"removePlayer(player)\"> -</button>\n        </p>\n      </div>\n      <div class=\"clear\"></div>\n\n      <button mat-button class=\"button left shortmedium {{settings.jump?'highlighted':''}}\"\n              (click)=\"settings.toggleJump()\">Enable Jump\n      </button>\n      <div class=\"clear\"></div>\n\n      <div class=\"clear space\"></div>\n      <button mat-button class=\"button left big\" (click)=\"newGame()\">Save and Start</button>\n      <button mat-button class=\"button left big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","export class Settings {\r\n  fields: string[];\r\n  jump: boolean;\r\n\r\n  constructor() {\r\n    this.jump = true;\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      const nm = i === 20 ? 'B' : ((i + 1) + '');\r\n      this.fields.push(nm);\r\n    }\r\n  }\r\n\r\n  toggleJump() {\r\n    this.jump = !this.jump;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state: AroundClockState = new AroundClockState(this.player);\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {ChaseDragonState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './chase-dragon.component.html'\n})\nexport class ChaseDragonComponent extends PlaygroundModel<ChaseDragonState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new ChaseDragonState(player)), this);\n  }\n\n  validateSettings(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    const field = score === 25 ? 'B' : (score + '');\n    const state: ChaseDragonState = this.getPlayerState(player);\n\n    if (this.settings.fields[state.getActFieldIndex()] === field) {\n      state.increaseActFieldIndex(1);\n      if (state.actFieldIndex === this.settings.fields.length) {\n        state.actFieldIndex--;\n        state.bullCount++;\n      }\n    }\n    player.score++;\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n    const state = this.getPlayerState(player);\n    if ((this.settings.fields.length - 1) === state.getActFieldIndex() && state.bullCount === 2) {\n      player.win = true;\n    } else if (this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return this.settings.fields.indexOf(fieldStr) === this.getPlayerState(this.game.getActualPlayer()).getActFieldIndex();\n  }\n\n  isHighlighted(field: number): boolean {\n    return this.isFieldEnabledToThrow(field);\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    let ret = false;\n    if (!this.isFieldEnabledToThrow(field)) {\n      let fieldStr = field + '';\n      if (field === 25) {\n        fieldStr = 'B';\n      }\n      this.game.players.forEach(player => {\n        if (player !== this.game.getActualPlayer()) {\n          ret = this.settings.fields.indexOf(fieldStr) === this.getPlayerState(player).getActFieldIndex();\n          if (ret) {\n            return;\n          }\n        }\n      });\n    }\n    return ret;\n  }\n\n  getActualField(player): string {\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()];\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  canBeDraw(): boolean {\n    return false;\n  }\n\n  private getPlayerState(player: Player): ChaseDragonState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"left side_left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <div class=\"clear\" *ngIf=\"!settingsOpen\"></div>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name left\">{{player.name}}</div>\n          <div class=\"shoots right\">\n            <div class=\"shoot\"><p>{{!player.throws[2] ? '-' : player.throws[2]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[1] ? '-' : player.throws[1]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[0] ? '-' : player.throws[0]}}</p></div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"point right\"><label>Field: </label>{{getActualField(player)}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Chase the Dragon Settings</h1>\n\n      <h2>Players</h2>\n      <button mat-button class=\"button left big\" (click)=\"addPlayer()\" *ngIf=\"game.canAddPlayer()\">New Player</button>\n      <button mat-button class=\"button left big inactive\" *ngIf=\"!game.canAddPlayer()\">New Player</button>\n      <div class=\"clear\"></div>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <p>\n          Player #{{i + 1}} name: <input [(ngModel)]=\"player.name\" name=\"input\" type=\"text\">\n          <button mat-button class=\"button small\" (click)=\"removePlayer(player)\"> -</button>\n        </p>\n      </div>\n      <div class=\"clear\"></div>\n\n      <button mat-button class=\"button left medium {{settings.long?'highlighted':''}}\" (click)=\"settings.toggleLong()\">\n        Long Dragon\n      </button>\n      <div class=\"clear\"></div>\n\n      <div class=\"clear space\"></div>\n      <button mat-button class=\"button left big\" (click)=\"newGame()\">Save and Start</button>\n      <button mat-button class=\"button left big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ChaseDragonComponent} from './chase-dragon.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ChaseDragonComponent}\r\n    ])\r\n  ],\r\n  declarations: [ChaseDragonComponent]\r\n})\r\nexport class ChaseDragonModule {\r\n}\r\n","export class Settings {\r\n  fields: string[];\r\n  long = false;\r\n\r\n  constructor() {\r\n    this.setFields();\r\n  }\r\n\r\n  toggleLong() {\r\n    this.long = !this.long;\r\n    this.setFields();\r\n  }\r\n\r\n  setFields() {\r\n    this.fields = [];\r\n    for (let i = (this.long ? 9 : 14); i < 21; i++) {\r\n      this.fields.push(i === 20 ? 'B' : ((i + 1) + ''));\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class ChaseDragonState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n  bullCount: number;\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.actFieldIndex = 0;\r\n    this.bullCount = 0;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  clone(): ChaseDragonState {\r\n    const state: ChaseDragonState = new ChaseDragonState(this.player);\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    state.bullCount = this.bullCount;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Routes} from '@angular/router';\r\nimport {X01Module} from '../x01/x01.module';\r\nimport {CricketModule} from '../cricket/cricket.module';\r\nimport {AroundClockModule} from '../aroundclock/around-clock.module';\r\nimport {ShanghaiModule} from '../shanghai/shanghai.module';\r\nimport {ChaseDragonModule} from '../chase-dragon/chase-dragon.module';\r\nimport {KillerModule} from '../killer/killer.module';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01'},\r\n    loadChildren: () => X01Module\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket'},\r\n    loadChildren: () => CricketModule\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock'},\r\n    loadChildren: () => AroundClockModule\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai / Halve It'},\r\n    loadChildren: () => ShanghaiModule\r\n  },\r\n  {\r\n    path: 'chase-dragon',\r\n    data: {name: 'Chase the Dragon'},\r\n    loadChildren: () => ChaseDragonModule\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer'},\r\n    loadChildren: () => KillerModule\r\n  }\r\n];\r\n\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n})\r\nexport class MenuComponent {\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n}\r\n","<h1 class=\"gameSelectBoxTitle\">Select Game!</h1>\r\n<div id=\"gameSelectContainer\">\r\n  <button mat-button class=\"gameSelectBox\" *ngFor=\"let g of getGameList()\"  [routerLink]=\"['/' + g.path]\">{{g.data.name}}</button>\r\n</div>\r\n","import {Component} from '@angular/core';\nimport {CricketState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './cricket.component.html'\n})\nexport class CricketComponent extends PlaygroundModel<CricketState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new CricketState(player)), this);\n  }\n\n  validateSettings(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    this.updateField(player, score);\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n\n    this.game.players.forEach(p => {\n      p.score = this.getPlayerTotal(p);\n    }, this);\n\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\n    player.win = this.isPlayerDone(player)\n      && ((!punishStyle && this.game.isTheBestPlayer(player)) || (punishStyle && this.game.isTheWorstPlayer(player)));\n\n    if (this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  getFieldValue(player: Player, field: string): string {\n    const score = this.getPunishScore(player, field);\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(field);\n\n    let str = '';\n    if (punishStyle && score !== 0) {\n      str += score;\n    }\n\n    if (playerFieldCount === 0 && str.length === 0) {\n      return '○';\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\n      return this.getFieldScore(player, field) + '';\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\n      str += '●●●';\n    } else {\n      for (let i = 0; i < playerFieldCount; i++) {\n        str += '●';\n      }\n    }\n    return str;\n  }\n\n  isFieldDoneForPlayer(player: Player, field: string): boolean {\n    return this.getPlayerState(player).getFieldCount(field) >= 3;\n  }\n\n  isActiveField(player: Player, field: string): boolean {\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === field;\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return this.settings.fields.indexOf(fieldStr) !== -1 && !this.isFieldClosed(fieldStr);\n  }\n\n  isHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  canBeDraw(): boolean {\n    return false;\n  }\n\n  private getPlayerTotal(player: Player) {\n    let total = 0;\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\n      total = this.getPlayerTotalForPunishGame(player);\n    } else if (this.settings.isScoreGame()) {\n      total = this.getPlayerTotalForScoreGame(player);\n    }\n    return total;\n  }\n\n  private getPlayerTotalForScoreGame(player: Player) {\n    let total = 0;\n    this.settings.fields.forEach(field => {\n      if (this.isFieldDoneForPlayer(player, field)) {\n        total += (this.getPlayerState(player).getFieldCount(field) - 3) * this.getFieldValueAsNumber(field);\n      }\n    }, this);\n    return total;\n  }\n\n  private getPlayerTotalForPunishGame(player: Player) {\n    let total = 0;\n    this.settings.fields.forEach(field => {\n      total += this.getPlayerState(player).getPunishCount(field) * this.getFieldValueAsNumber(field);\n    }, this);\n    return total;\n  }\n\n  private updateField(player: Player, score: number) {\n    const field = score === 25 ? 'B' : (score + '');\n\n    if (this.settings.fields.indexOf(field) !== -1 && !this.isFieldClosed(field)) {\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(field);\n      if (!this.settings.isBlackOutGame() ||\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === field ||\n        this.isFieldDoneForPlayer(player, field)) {\n\n        if (this.isFieldClosedForOthers(player, field) && (playerFieldCount + this.game.multiplier) > 3) {\n          this.getPlayerState(player).setFieldCount(field, 3);\n        } else {\n          let multiplier = this.game.multiplier + 0;\n          if (playerFieldCount < 3 && (playerFieldCount + this.game.multiplier) >= 3) {\n            multiplier = (playerFieldCount + this.game.multiplier) % 3;\n          }\n          this.getPlayerState(player).setFieldCount(field, playerFieldCount + this.game.multiplier);\n          this.game.multiplier = multiplier;\n        }\n      }\n\n      if (this.isFieldDoneForPlayer(player, field)) {\n        if (this.settings.isBlackOutGame()) {\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === field) {\n            this.getPlayerState(player).increaseActFieldIndex();\n          }\n        }\n        this.punishPlayers(field);\n      }\n    }\n  }\n\n  private punishPlayers(field: string) {\n    this.game.players.forEach(player => {\n      if (!this.isFieldDoneForPlayer(player, field)) {\n        this.getPlayerState(player).setPunishCount(field, this.getPlayerState(player).getPunishCount(field) + this.game.multiplier);\n      }\n    }, this);\n  }\n\n  private getFieldScore(player: Player, field: string): number {\n    if (this.isFieldDoneForPlayer(player, field)) {\n      return (this.getPlayerState(player).getFieldCount(field) - 3) * this.getFieldValueAsNumber(field);\n    }\n    return 0;\n  }\n\n  private getPunishScore(player: Player, field: string): number {\n    return this.getPlayerState(player).getPunishCount(field) * this.getFieldValueAsNumber(field);\n  }\n\n  private isFieldClosed(field: string) {\n    let closed = true;\n    this.game.players.forEach(player => {\n      closed = closed && this.isFieldDoneForPlayer(player, field);\n    }, this);\n    return closed;\n  }\n\n  private isFieldClosedForOthers(player: Player, field: string) {\n    let closed = true;\n    this.game.players.forEach(p => {\n      if (p.id !== player.id) {\n        closed = closed && this.isFieldDoneForPlayer(p, field);\n      }\n    }, this);\n    return closed;\n  }\n\n  private isPlayerDone(player: Player): boolean {\n    let done = true;\n    this.settings.fields.forEach(field => {\n      done = done && this.isFieldDoneForPlayer(player, field);\n    });\n    return done;\n  }\n\n  private getPlayerState(player: Player): CricketState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"left side_left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <div class=\"clear\" *ngIf=\"!settingsOpen\"></div>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name left\">{{player.name}}</div>\n          <div class=\"shoots right\">\n            <div class=\"shoot total\"><p>{{player.getThrowsTotal()}}</p></div>\n            <div class=\"shoot\"><p>{{player.throws[2]}}</p></div>\n            <div class=\"shoot\"><p>{{player.throws[1]}}</p></div>\n            <div class=\"shoot\"><p>{{player.throws[0]}}</p></div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div\n              class=\"field left {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\n              *ngFor=\"let field of settings.fields\">\n            {{field}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\n          </div>\n          <div class=\"point right\" *ngIf=\"!settings.isNoScoreGame()\">{{player.score}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Cricket Settings</h1>\n\n      <h2>Players</h2>\n      <button mat-button class=\"button left big\" (click)=\"addPlayer()\" *ngIf=\"game.canAddPlayer()\">New Player</button>\n      <button mat-button class=\"button left big inactive\" *ngIf=\"!game.canAddPlayer()\">New Player</button>\n      <div class=\"clear\"></div>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <p>\n          Player #{{i + 1}} name: <input [(ngModel)]=\"player.name\" name=\"input\" type=\"text\">\n          <button mat-button class=\"button small\" (click)=\"removePlayer(player)\"> -</button>\n        </p>\n      </div>\n      <div class=\"clear\"></div>\n\n      <h2>Fields</h2>\n      <button mat-button class=\"button left {{ settings.numbs[i] ? 'highlighted' : '' }}\"\n              *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\n        {{numb === 21 ? 'B' : numb}}\n      </button>\n      <button mat-button class=\"button left capitalize\" (click)=\"settings.upper()\">Upper</button>\n      <button mat-button class=\"button left capitalize\" (click)=\"settings.lower()\">Lower</button>\n      <button mat-button class=\"button left capitalize\" (click)=\"settings.odd()\">Odd</button>\n      <button mat-button class=\"button left capitalize\" (click)=\"settings.even()\">Even</button>\n      <button mat-button class=\"button left capitalize\" (click)=\"settings.randomize()\">Random</button>\n      <div class=\"clear\"></div>\n\n      <h2>Style</h2>\n      <button mat-button class=\"button left shortmedium {{settings.style==1?'highlighted':''}}\"\n              (click)=\"settings.setStyle(1)\">Classic\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.style==2?'highlighted':''}}\"\n              (click)=\"settings.setStyle(2)\">Cut-Throat\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.style==3?'highlighted':''}}\"\n              (click)=\"settings.setStyle(3)\">No Score\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.style==4?'highlighted':''}}\"\n              (click)=\"settings.setStyle(4)\">Black Out\n      </button>\n\n      <div class=\"clear space\"></div>\n      <button mat-button class=\"button left big\" (click)=\"newGame()\">Save and Start</button>\n      <button mat-button class=\"button left big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class Settings {\r\n\r\n  fields: string[] = ['15', '16', '17', '18', '19', '20', 'B'];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 7; i++) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i === 20 ? 'B' : ((i + 1) + ''));\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  private setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(field: string): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  setFieldCount(field: string, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value = value;\r\n  }\r\n\r\n  getPunishCount(field: string): number {\r\n    return this.getFieldValue(this.punishCount, field).value;\r\n  }\r\n\r\n  setPunishCount(field: string, value: number) {\r\n    this.getFieldValue(this.punishCount, field).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state: CricketState = new CricketState(this.player);\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {KillerState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './killer.component.html'\n})\nexport class KillerComponent extends PlaygroundModel<KillerState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n    this.nextEnabled = false;\n    this.zeroEnabled = false;\n    this.multiEnabled = false;\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => {\n      this.state.push(new KillerState(player, this.settings.numberOfLives, this.settings.boardingLimit));\n    }, this);\n  }\n\n  customNext() {\n    while (this.getPlayerState(this.game.getActualPlayer()).isDead()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  validateSettings(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n\n    const player = this.game.getActualPlayer();\n    const state: KillerState = this.getPlayerState(player);\n\n    if (this.game.round === 0) {\n      state.actField = score;\n      player.score = score;\n      if (this.game.isActualPlayerTheLast()) {\n        this.nextEnabled = true;\n        this.zeroEnabled = true;\n        this.multiEnabled = true;\n      }\n    } else {\n      if (state.killer) {\n        if (score === state.actField) {\n          state.life = Number(state.life) + Number(this.game.multiplier);\n          if (state.life > this.settings.numberOfLives) {\n            state.life = this.settings.numberOfLives;\n          }\n        } else {\n          this.game.players.filter(p => p.id !== player.id && !this.getPlayerState(p).isDead()).forEach(p => {\n            const s = this.getPlayerState(p);\n            if (s.actField === score) {\n              s.life -= this.game.multiplier;\n              if (s.life < 0) {\n                s.life = 0;\n              }\n            }\n          });\n        }\n      } else if (score === state.actField) {\n        state.boarding -= this.game.multiplier;\n        if (state.boarding <= 0) {\n          state.boarding = 0;\n        }\n        state.killer = state.boarding === 0;\n      }\n    }\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    if (this.game.round !== 0) {\n      const actualPlayer = this.game.getActualPlayer();\n      actualPlayer.win = !this.game.players.some(p => p.id !== actualPlayer.id && !this.getPlayerState(p).isDead());\n    }\n    if (this.game.round === 0 || this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n    while (this.getPlayerState(this.game.getActualPlayer()).isDead()) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    if (this.game.round === 0) {\n      return !this.getAllEnabledFields().some(f => f === field);\n    }\n    return this.getAllEnabledFields().some(f => f === field);\n  }\n\n  isHighlighted(field: number): boolean {\n    if (this.game.round === 0) {\n      return this.isFieldEnabledToThrow(field);\n    }\n    const state = this.getPlayerState(this.game.getActualPlayer());\n    if (state.killer) {\n      return this.isFieldEnabledToThrow(field) && !this.isSecondHighlighted(field);\n    }\n    return state.actField === field;\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    const state = this.getPlayerState(this.game.getActualPlayer());\n    if (state.killer) {\n      return state.actField === field;\n    }\n    return false;\n  }\n\n  getPlayerField(player: Player): string {\n    const score = this.getPlayerState(player).actField;\n    return score === 25 ? 'B' : (score + '');\n  }\n\n  getLife(player: Player): number {\n    return this.getPlayerState(player).life;\n  }\n\n  getBoarding(player: Player): number {\n    return this.getPlayerState(player).boarding;\n  }\n\n  isKiller(player: Player): boolean {\n    return this.getPlayerState(player).killer;\n  }\n\n  isDead(player: Player): boolean {\n    return this.getPlayerState(player).isDead();\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  canBeDraw(): boolean {\n    return false;\n  }\n\n  private getAllEnabledFields(): number[] {\n    return this.game.players.filter(p => !this.getPlayerState(p).isDead()).map(p => this.getPlayerState(p).actField);\n  }\n\n  private getPlayerState(player: Player): KillerState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"left side_left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <div class=\"clear\" *ngIf=\"!settingsOpen\"></div>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isDead(player) ? 'inactive' : ''}} {{isKiller(player) ? 'highlighted2' : ''}}\"\n          *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name left\">{{player.name}}</div>\n          <div class=\"shoots right\">\n            <div class=\"shoot\"><p>{{!player.throws[2] ? '-' : player.throws[2]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[1] ? '-' : player.throws[1]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[0] ? '-' : player.throws[0]}}</p></div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"point right\" *ngIf=\"getPlayerField(player) !== '0'\">\n            <label>Field: </label>{{getPlayerField(player)}}</div>\n          <div class=\"clear\" *ngIf=\"getPlayerField(player) !== '0'\"></div>\n          <div class=\"point2 right\"><label>Life: </label>{{getLife(player)}}</div>\n          <div class=\"point2 right\" *ngIf=\"!isKiller(player)\"><label>Boarding: </label>{{getBoarding(player)}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Killer Game Settings</h1>\n\n      <h2>Players</h2>\n      <button mat-button class=\"button left big\" (click)=\"addPlayer()\" *ngIf=\"game.canAddPlayer()\">New Player</button>\n      <button mat-button class=\"button left big inactive\" *ngIf=\"!game.canAddPlayer()\">New Player</button>\n      <div class=\"clear\"></div>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <p>\n          Player #{{i + 1}} name: <input [(ngModel)]=\"player.name\" name=\"input\" type=\"text\">\n          <button mat-button class=\"button small\" (click)=\"removePlayer(player)\"> -</button>\n        </p>\n      </div>\n      <div class=\"clear\"></div>\n      <p>Life limit: <input [(ngModel)]=\"settings.numberOfLives\" name=\"input\" type=\"number\"></p>\n      <p>Boarding: <input [(ngModel)]=\"settings.boardingLimit\" name=\"input\" type=\"number\"></p>\n      <div class=\"clear\"></div>\n\n      <div class=\"clear space\"></div>\n      <button mat-button class=\"button left big\" (click)=\"newGame()\">Save and Start</button>\n      <button mat-button class=\"button left big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class Settings {\r\n  fields: string[];\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      this.fields.push(i === 20 ? 'B' : ((i + 1) + ''));\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n  dead: boolean;\r\n\r\n  constructor(player: Player, public life = 5, public boarding = 3) {\r\n    super(player);\r\n    this.actField = 0;\r\n    this.killer = false;\r\n  }\r\n\r\n  isDead(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state: KillerState = new KillerState(this.player);\r\n    state.actField = this.actField;\r\n    state.life = this.life;\r\n    state.boarding = this.boarding;\r\n    state.killer = this.killer;\r\n    state.dead = this.dead;\r\n    return state;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","export class Settings {\r\n\r\n  fields: string[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n  numberOfMaxFields = 8;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < this.numberOfMaxFields; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i === 20 ? 'B' : ((i + 1) + ''));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: string): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: string, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: string): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: string, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state: ShanghaiState = new ShanghaiState(this.player);\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {ShanghaiState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './shanghai.component.html'\n})\nexport class ShanghaiComponent extends PlaygroundModel<ShanghaiState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n    this.nextEnabled = false;\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new ShanghaiState(player)), this);\n  }\n\n  validateSettings(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    const state = this.getPlayerState(player);\n    const field = score === 25 ? 'B' : (score + '');\n    if (this.isActiveField(field)) {\n      state.increaseFieldCount(field, 1);\n      state.increaseFieldScore(field, this.game.multiplier);\n      if (this.settings.noScore) {\n        player.score++;\n      } else {\n        player.score += this.getFieldValueAsNumber(field) * this.game.multiplier;\n      }\n    }\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n\n    // Shanghai rule\n    if (this.game.actualThrow === 3) {\n      let multi = 1;\n      for (let i = 0; i < 3; i++) {\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n        if (t.field === this.getPreviousField()) {\n          multi *= (t.multi + 1);\n        }\n      }\n      if (multi === 1 && this.settings.halveIt) {\n        player.score = Math.round(player.score / 2);\n      }\n      player.win = multi === 24;\n      if (player.win) {\n        this.game.extraEndingMsg = 'SHANGHAI!!!';\n      }\n    }\n\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\n    if (gameEnded) {\n      this.game.players.forEach(p => {\n        p.win = this.game.isTheBestPlayer(p);\n        if (p.win) {\n          return;\n        }\n      }, this);\n    } else if (this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n\n    return Promise.resolve();\n  }\n\n  getFieldValue(player: Player, field: string): string {\n    const fieldCount = this.getPlayerState(player).getFieldCount(field);\n    if (fieldCount === 0) {\n      return '○○○';\n    } else {\n      let str = '' + this.getPlayerState(player).getFieldScore(field) * this.getFieldValueAsNumber(field);\n      for (let i = 0; i < fieldCount; i++) {\n        str += '●';\n      }\n      for (let i = fieldCount; i < 3; i++) {\n        str += '○';\n      }\n      return str;\n    }\n  }\n\n  isActiveField(field: string): boolean {\n    return this.settings.fields[this.game.round] === field;\n  }\n\n  isDoneField(field: string): boolean {\n    return this.settings.fields.indexOf(field) < this.game.round;\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return this.settings.fields.indexOf(fieldStr) === this.game.round;\n  }\n\n  isHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isLastRound(): boolean {\n    return this.game.round === this.settings.fields.length - 1;\n  }\n\n  canBeDraw(): boolean {\n    return true;\n  }\n\n  private getPreviousField(): string {\n    return this.settings.fields[this.game.round > 0 ? this.game.round : 0];\n  }\n\n  private getPlayerState(player: Player): ShanghaiState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"left side_left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <div class=\"clear\" *ngIf=\"!settingsOpen\"></div>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name left\">{{player.name}}</div>\n          <div class=\"shoots right\">\n            <div class=\"shoot total\"><p>{{!player.getThrowsTotal() ? '-' : player.getThrowsTotal()}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[2] ? '-' : player.throws[2]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[1] ? '-' : player.throws[1]}}</p></div>\n            <div class=\"shoot\"><p>{{!player.throws[0] ? '-' : player.throws[0]}}</p></div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div class=\"field left {{isActiveField(field) ? 'active': ''}} {{isDoneField(field) ? 'highlighted' : ''}}\"\n               *ngFor=\"let field of settings.fields\">\n            {{field}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\n          </div>\n          <div class=\"point right\">{{player.score}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Shanghai Settings</h1>\n\n      <h2>Players</h2>\n      <button mat-button class=\"button left big\" (click)=\"addPlayer()\" *ngIf=\"game.canAddPlayer()\">New Player</button>\n      <button mat-button class=\"button left big inactive\" *ngIf=\"!game.canAddPlayer()\">New Player</button>\n      <div class=\"clear\"></div>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <p>\n          Player #{{i + 1}} name: <input [(ngModel)]=\"player.name\" name=\"input\" type=\"text\">\n          <button mat-button class=\"button small\" (click)=\"removePlayer(player)\"> -</button>\n        </p>\n      </div>\n\n      <div class=\"clear\"></div>\n      <h2>Fields</h2>\n      <button mat-button class=\"button left {{ settings.numbs[i] ? 'highlighted' : '' }}\"\n              *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\n        {{numb === 21 ? 'B' : numb}}\n      </button>\n      <button mat-button class=\"button left big capitalize\" (click)=\"settings.randomize()\">Randomize</button>\n      <button mat-button class=\"button left shortmedium {{settings.noScore?'highlighted':''}}\"\n              (click)=\"settings.toggleNoScore()\">No score\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.halveIt?'highlighted':''}}\"\n              (click)=\"settings.toggleHalveIt()\">Halve It\n      </button>\n\n      <div class=\"clear space\"></div>\n      <button mat-button class=\"button left big\" (click)=\"newGame()\">Save and Start</button>\n      <button mat-button class=\"button left big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container evo-typography\">\r\n  <div mat-dialog-title class=\"subtitle-1\">Title</div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    {{ data.content }}\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"true\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {PlaygroundModel} from '../models/playground.model';\r\nimport {GameService} from '../services/game.service';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html'\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: PlaygroundModel<PlaygroundState>;\r\n\r\n  constructor(public game: GameService, public route: Router) {\r\n  }\r\n\r\n  quit() {\r\n    this.route.navigate(['/menu']);\r\n    this.game.resetScore();\r\n  }\r\n\r\n  showSettings() {\r\n    this.playground.reset();\r\n    this.playground.settingsOpen = true;\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <button mat-button class=\"button\" (click)=\"quit()\">\r\n    MAIN\r\n  </button>\r\n  <button mat-button class=\"button\" (click)=\"playground.newGame(true)\">\r\n    NEW\r\n  </button>\r\n  <button mat-button class=\"button\" (click)=\"showSettings()\">\r\n    BACK\r\n  </button>\r\n  <button mat-button class=\"button\" (click)=\"playground.undo()\">\r\n    UNDO\r\n  </button>\r\n  <p class=\"button\">{{game.round+1}}.</p>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '../services/game.service';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html'\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n}\r\n\r\n","<div class=\"right side_right\">\r\n  <button mat-button class=\"number {{playground.isHighlighted(i) ? 'highlighted' : playground.isSecondHighlighted(i) ? 'highlighted2' : !playground.isFieldEnabledToThrow(i) ? 'inactive' : ''}}\" *ngFor=\"let i of getNumbers()\" (click)=\"playground.isFieldEnabledToThrow(i) ? playground.throwNumber(i) : playground.throwNumber(0)\">{{i}}</button>\r\n  <button mat-button class=\"number {{playground.isHighlighted(25) ? 'highlighted' : playground.isSecondHighlighted(25) ? 'highlighted2' : !playground.isFieldEnabledToThrow(25) ? 'inactive' : ''}}\" (click)=\"playground.isFieldEnabledToThrow(25) ? playground.throwNumber(25) : playground.throwNumber(0)\">Bull</button>\r\n  <button mat-button class=\"number {{game.multiplier === 2 ? 'highlighted' : ''}}\" (click)=\"playground.doublePoint()\" *ngIf=\"playground && playground.multiEnabled\">Double</button>\r\n  <button mat-button class=\"number {{game.multiplier === 3 ? 'highlighted' : ''}}\" (click)=\"playground.triplePoint()\" *ngIf=\"playground && playground.multiEnabled\">Triple</button>\r\n  <button mat-button class=\"number\" (click)=\"playground.skip()\" *ngIf=\"playground && playground.nextEnabled\">Next</button>\r\n  <button mat-button class=\"number\" (click)=\"playground.throwNumber(0)\" *ngIf=\"playground && playground.zeroEnabled\">0</button>\r\n</div>\r\n","export class FieldValue {\n  field: string;\n  value: number;\n\n  constructor(field: string, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","import {Throw} from './throw.model';\n\nexport class Player {\n  id: number;\n  name = '';\n  score = 0;\n  throws: number[] = [];\n  throwsHistory: Throw[];\n  win = false;\n  first = true;\n\n  constructor(id: number) {\n    this.id = id;\n  }\n\n  getThrowsTotal(): number {\n    return this.throws.reduce((a, b) => a + b, 0);\n  }\n\n  addThrowHistory(thr: Throw) {\n    this.throwsHistory.push(thr);\n  }\n\n  reset() {\n    this.score = 0;\n    this.throws = [];\n    this.throwsHistory = [];\n    this.win = false;\n    this.first = true;\n  }\n\n  clone(): Player {\n    const player = new Player(this.id);\n    player.name = this.name;\n    player.score = this.score;\n    player.throws = [];\n    this.throws.forEach(t => {\n      player.throws.push(t);\n    });\n    player.throwsHistory = this.throwsHistory;\n    player.win = this.win;\n    player.first = this.first;\n    player.throwsHistory = [];\n    this.throwsHistory.forEach(throws => {\n      player.throwsHistory.push(throws.clone());\n    });\n    return player;\n  }\n}\n","import {Player} from './player.model';\nimport {FieldValue} from './field-value.model';\n\nexport abstract class PlaygroundState {\n\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  getFieldValue(list: FieldValue[], field: string): FieldValue {\n    const filtered = list.filter(f => f.field === field);\n    if (filtered.length === 0) {\n      list.push(new FieldValue(field, 0));\n    }\n    return list.filter(f => f.field === field)[0];\n  }\n\n  abstract clone(): PlaygroundState;\n}\n","import {OnInit} from '@angular/core';\nimport {v4 as uuid} from 'uuid';\nimport {GameService} from '../services/game.service';\nimport {Player} from './player.model';\nimport {Throw} from './throw.model';\nimport {Router} from '@angular/router';\nimport {PlaygroundState} from '~models/playground-state.model';\nimport {DialogService} from '~services/dialog.service';\n\nexport abstract class PlaygroundModel<T extends PlaygroundState> implements OnInit {\n\n  throwEnabled = true;\n  settingsOpen = true;\n  gameHistory: GameService[];\n  nextEnabled = true;\n  zeroEnabled = true;\n  multiEnabled = true;\n  state: T[];\n  stateHistory: T[][] = [];\n  playground = this;\n\n  protected constructor(public game: GameService,\n                        public route: Router,\n                        public dialogService: DialogService) {\n  }\n\n  ngOnInit() {\n    this.settingsOpen = true;\n    if (this.game.players.length === 0) {\n      this.addPlayer();\n    }\n  }\n\n  throwNumber(score: number) {\n    if (this.throwEnabled) {\n      this.save();\n      this.throwEnabled = false;\n      if (score === 25 && this.game.multiplier === 3) {\n        this.game.multiplier = 1;\n      }\n\n      const actualPlayer = this.game.getActualPlayer();\n      actualPlayer.addThrowHistory(new Throw(score, this.game.multiplier, this.game.actualThrow));\n      if (this.game.actualThrow === 0) {\n        actualPlayer.throws = [];\n      }\n      actualPlayer.throws[this.game.actualThrow] = score * this.game.multiplier;\n      this.game.actualThrow++;\n\n      this.calculatePoints(score)\n        .then(() => this.checkPlayerState())\n        .then(() => {\n          this.game.multiplier = 1;\n          this.game.players.forEach(player => {\n            if (player.win) {\n              this.dialogService.openDialog(this.game.extraEndingMsg,\n                (this.canBeDraw() && this.game.isDraw()) ? 'End in a Draw' : `${player.name} is the winner!`,\n                this.game.clone().players);\n              this.newGame(true);\n            }\n          });\n          this.throwEnabled = true;\n        });\n    }\n  }\n\n  triplePoint() {\n    this.game.multiplier = this.game.multiplier === 3 ? 1 : 3;\n  }\n\n  doublePoint() {\n    this.game.multiplier = this.game.multiplier === 2 ? 1 : 2;\n  }\n\n  newGame(rotate = false) {\n    this.settingsOpen = !this.validatePlayerSettings() || !this.validateSettings();\n    this.reset();\n    if (rotate) {\n      this.game.rotatePlayers();\n    }\n  }\n\n  addPlayer(): void {\n    const player = new Player(uuid());\n    player.name = 'Player ' + (this.game.players.length + 1);\n    this.game.players.push(player);\n  }\n\n  removePlayer(player: Player): void {\n    if (this.game.players.length > 1) {\n      this.game.players = this.game.players.filter(p => p !== player);\n    }\n  }\n\n  reset(): void {\n    this.gameHistory = [];\n    this.game.resetScore();\n    this.stateHistory = [];\n    this.customReset();\n  }\n\n  busted(): void {\n    this.dialogService.openDialog('Game Over', `${this.game.getActualPlayer().name} busted!`);\n  }\n\n  getFieldValueAsNumber(field: string): number {\n    return field === 'B' ? 25 : parseInt(field, 10);\n  }\n\n  undo() {\n    if (this.gameHistory.length > 0) {\n      this.game = this.gameHistory.pop();\n      if (this.stateHistory.length > 0) {\n        this.state = this.stateHistory.pop();\n      }\n    }\n  }\n\n  skip() {\n    if (!(this.game.isActualPlayerTheLast() && this.isLastRound())) {\n      this.save();\n      this.game.nextPlayer();\n      this.customNext();\n    }\n  }\n\n  quit() {\n    this.route.navigate(['/menu']);\n    this.game.resetScore();\n  }\n\n  customNext() {\n    // should be implemented\n  }\n\n  private validatePlayerSettings(): boolean {\n    const players: Player[] = [];\n    this.game.players.forEach(player => {\n      if (player.name.length !== 0) {\n        players.push(player);\n      }\n    });\n    this.game.players = players;\n    return players.length !== 0;\n  }\n\n  private save() {\n    this.gameHistory.push(this.game.clone());\n    if (this.state) {\n      const state = [];\n      this.state.forEach(s => state.push(s.clone()));\n      this.stateHistory.push(state);\n    }\n  }\n\n  abstract customReset(): void;\n\n  abstract validateSettings(): boolean;\n\n  abstract calculatePoints(score: number): Promise<any>;\n\n  abstract checkPlayerState(): Promise<any>;\n\n  abstract isFieldEnabledToThrow(field: number): boolean;\n\n  abstract isHighlighted(field: number): boolean;\n\n  abstract isSecondHighlighted(field: number): boolean;\n\n  abstract isLastRound(): boolean;\n\n  abstract canBeDraw(): boolean;\n\n}\n","export class Throw {\n  field: string;\n  fieldNum: number;\n  multi: number;\n  order: number;\n\n  constructor(fieldNum: number, multi: number, order: number) {\n    this.fieldNum = fieldNum;\n    this.field = fieldNum === 25 ? 'B' : fieldNum + '';\n    this.multi = multi;\n    this.order = order;\n  }\n\n  clone(): Throw {\n    return new Throw(this.fieldNum, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog.component';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Player} from '../models/player.model';\n\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\n\n@Injectable({providedIn: 'root'})\nexport class GameService {\n  players: Player[] = [];\n  actualPlayerIndex: number;\n  actualThrow: number;\n  multiplier: number;\n  extraEndingMsg: string;\n  round: number;\n\n  canAddPlayer(): boolean {\n    return this.players.length < MAXIMUM_NUMBER_OF_PLAYERS;\n  }\n\n  isTheFirstThrow(): boolean {\n    return this.actualThrow === 1;\n  }\n\n  isTheLastThrow(): boolean {\n    return this.actualThrow === 3;\n  }\n\n  getActualPlayer(): Player {\n    return this.players[this.actualPlayerIndex];\n  }\n\n  nextPlayer(): void {\n    if (this.isActualPlayerTheLast()) {\n      this.nextRound();\n    }\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\n    this.actualThrow = 0;\n  }\n\n  getNumberOfPlayers(): number {\n    return this.players.length;\n  }\n\n  getTheFirstPlayer(): Player {\n    return this.players[0];\n  }\n\n  isTheFirstPlayer(player: Player): boolean {\n    return player.id === this.getTheFirstPlayer().id;\n  }\n\n  isActualPlayerIsTheFirst(): boolean {\n    return this.isTheFirstPlayer(this.getActualPlayer());\n  }\n\n  getTheLastPlayer(): Player {\n    return this.players[this.getNumberOfPlayers() - 1];\n  }\n\n  isTheLastPlayer(player: Player): boolean {\n    return player.id === this.getTheLastPlayer().id;\n  }\n\n  isActualPlayerTheLast(): boolean {\n    return this.isTheLastPlayer(this.getActualPlayer());\n  }\n\n  isTheBestPlayer(actPlayer: Player): boolean {\n    let bestPlayer = true;\n    this.players.forEach(player => {\n      bestPlayer = bestPlayer && actPlayer.score >= player.score;\n    });\n    return bestPlayer;\n  }\n\n  isTheWorstPlayer(actPlayer: Player): boolean {\n    let lastPlayer = true;\n    this.players.forEach(player => {\n      lastPlayer = lastPlayer && actPlayer.score <= player.score;\n    });\n    return lastPlayer;\n  }\n\n  isDraw(): boolean {\n    const winners = this.players.filter(player => player.win);\n    if (winners.length > 0) {\n      return this.players.filter(player => player.id !== winners[0].id && player.score === winners[0].score).length > 0;\n    }\n    return false;\n  }\n\n  nextRound(): void {\n    this.round++;\n  }\n\n  reset(): void {\n    this.resetScore();\n    this.players = [];\n  }\n\n  resetScore(): void {\n    this.extraEndingMsg = '';\n    this.players.forEach(player => player.reset());\n    this.actualPlayerIndex = 0;\n    this.actualThrow = 0;\n    this.multiplier = 1;\n    this.round = 0;\n  }\n\n  rotatePlayers(): void {\n    this.players.push(this.players.shift());\n  }\n\n  clone(): GameService {\n    const game = new GameService();\n    game.actualPlayerIndex = this.actualPlayerIndex;\n    game.actualThrow = this.actualThrow;\n    game.multiplier = this.multiplier;\n    game.extraEndingMsg = this.extraEndingMsg;\n    game.round = this.round;\n    const players: Player[] = [];\n    this.players.forEach(player => {\n      players.push(player.clone());\n    });\n    game.players = players;\n    return game;\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MaterialModule} from '../material.module';\r\nimport {DialogComponent} from '~components/dialog.component';\r\nimport {GameToolbarComponent} from '~components/game-toolbar.component';\r\nimport {NumberPlateComponent} from '~components/number-plate.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  declarations: [NumberPlateComponent, GameToolbarComponent, DialogComponent],\r\n  exports: [CommonModule, FormsModule, MaterialModule, NumberPlateComponent, GameToolbarComponent, DialogComponent],\r\n  entryComponents: [DialogComponent]\r\n})\r\nexport class SharedModule {\r\n}\r\n","export class Settings {\r\n\r\n  startValue = 301;\r\n  start = 1;\r\n  checkout = 1;\r\n\r\n  isNormalStart(): boolean {\r\n    return this.start === 1;\r\n  }\r\n\r\n  isDoubleStart(): boolean {\r\n    return this.start === 2;\r\n  }\r\n\r\n  isTripleStart(): boolean {\r\n    return this.start === 3;\r\n  }\r\n\r\n  isNormalCheckout(): boolean {\r\n    return this.checkout === 1;\r\n  }\r\n\r\n  isDoubleCheckout(): boolean {\r\n    return this.checkout === 2;\r\n  }\r\n\r\n  isTripleCheckout(): boolean {\r\n    return this.checkout === 3;\r\n  }\r\n\r\n  isHighScoreGame(): boolean {\r\n    return this.checkout === 4;\r\n  }\r\n\r\n  setStart(start: number) {\r\n    this.start = start;\r\n  }\r\n\r\n  setCheckout(checkout: number) {\r\n    this.checkout = checkout;\r\n  }\r\n\r\n  setStartValue(startValue: number) {\r\n    this.startValue = startValue;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {PlaygroundState} from '~models/playground-state.model';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './x01.component.html'\n})\nexport class X01Component extends PlaygroundModel<PlaygroundState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.game.players.forEach(player => player.score = this.settings.startValue);\n  }\n\n  validateSettings(): boolean {\n    return true;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    const actualScore = score * this.game.multiplier;\n\n    const validStart = !player.first || this.settings.isNormalStart()\n      || (player.first\n        && ((this.settings.isDoubleStart() && this.game.multiplier === 2)\n          || (this.settings.isTripleStart() && this.game.multiplier === 3)));\n\n    if (validStart) {\n      player.first = false;\n      return this.countDown(player, actualScore);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  countDown(player: Player, score: number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      const id = setInterval(() => {\n        if (score === 0) {\n          clearInterval(id);\n          resolve();\n        } else if (player.score < 0) {\n          player.score -= score;\n          score = 0;\n        } else {\n          player.score--;\n          score--;\n        }\n      }, 5);\n    });\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n    let next = false;\n\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\n      ((player.score === 0 && (this.settings.isNormalCheckout()\n        || (this.settings.isDoubleCheckout() && this.game.multiplier === 2)\n        || (this.settings.isTripleCheckout() && this.game.multiplier === 3))))) {\n      player.win = true;\n      next = true;\n    } else if (player.score <= 0\n      || (this.settings.isDoubleCheckout() && player.score < 2)\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\n      player.throws.forEach(t => player.score += t);\n      next = true;\n      this.busted();\n    }\n\n    if (this.game.actualThrow === 3 || next) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    return true;\n  }\n\n  isHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  canBeDraw(): boolean {\n    return false;\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"left side_left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <div class=\"clear\" *ngIf=\"!settingsOpen\"></div>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name left\">{{player.name}}</div>\n          <div class=\"shoots right\">\n            <div class=\"shoot total\"><p>{{player.getThrowsTotal()}}</p></div>\n            <div class=\"shoot\"><p>{{player.throws[2]}}</p></div>\n            <div class=\"shoot\"><p>{{player.throws[1]}}</p></div>\n            <div class=\"shoot\"><p>{{player.throws[0]}}</p></div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div class=\"point left\">{{player.score}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>X01 Settings</h1>\n\n      <h2>Players</h2>\n      <button mat-button class=\"button left big\" (click)=\"addPlayer()\" *ngIf=\"game.canAddPlayer()\">New Player</button>\n      <button mat-button class=\"button left big inactive\" *ngIf=\"!game.canAddPlayer()\">New Player</button>\n      <div class=\"clear\"></div>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <p>\n          Player #{{i + 1}} name: <input [(ngModel)]=\"player.name\" name=\"input\" type=\"text\">\n          <button mat-button class=\"button small\" (click)=\"removePlayer(player)\"> -</button>\n        </p>\n      </div>\n      <div class=\"clear\"></div>\n\n      <h2>Games</h2>\n      <button mat-button class=\"button left {{settings.startValue==101?'highlighted':''}}\"\n              (click)=\"settings.setStartValue(101)\">101\n      </button>\n      <button mat-button class=\"button left {{settings.startValue==201?'highlighted':''}}\"\n              (click)=\"settings.setStartValue(201)\">201\n      </button>\n      <button mat-button class=\"button left {{settings.startValue==301?'highlighted':''}}\"\n              (click)=\"settings.setStartValue(301)\">301\n      </button>\n      <button mat-button class=\"button left {{settings.startValue==501?'highlighted':''}}\"\n              (click)=\"settings.setStartValue(501)\">501\n      </button>\n      <button mat-button class=\"button left {{settings.startValue==701?'highlighted':''}}\"\n              (click)=\"settings.setStartValue(701)\">701\n      </button>\n      <button mat-button class=\"button left {{settings.startValue==901?'highlighted':''}}\"\n              (click)=\"settings.setStartValue(901)\">901\n      </button>\n      <div class=\"clear\"></div>\n\n      <h2>Start</h2>\n      <button mat-button class=\"button left shortmedium {{settings.start==1?'highlighted':''}}\"\n              (click)=\"settings.setStart(1)\">Single\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.start==2?'highlighted':''}}\"\n              (click)=\"settings.setStart(2)\">Double\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.start==3?'highlighted':''}}\"\n              (click)=\"settings.setStart(3)\">Triple\n      </button>\n      <div class=\"clear\"></div>\n\n      <h2>Checkout</h2>\n      <button mat-button class=\"button left shortmedium {{settings.checkout==1?'highlighted':''}}\"\n              (click)=\"settings.setCheckout(1)\">Single\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.checkout==2?'highlighted':''}}\"\n              (click)=\"settings.setCheckout(2)\">Double\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.checkout==3?'highlighted':''}}\"\n              (click)=\"settings.setCheckout(3)\">Triple\n      </button>\n      <button mat-button class=\"button left shortmedium {{settings.checkout==4?'highlighted':''}}\"\n              (click)=\"settings.setCheckout(4)\">None\n      </button>\n\n      <div class=\"clear space\"></div>\n      <button mat-button class=\"button left big\" (click)=\"newGame()\">Save and Start</button>\n      <button mat-button class=\"button left big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}