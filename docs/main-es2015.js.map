{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/aroundclock/around-clock.component.ts","./src/app/aroundclock/around-clock.component.html","./src/app/aroundclock/around-clock.module.ts","./src/app/aroundclock/models/settings.model.ts","./src/app/aroundclock/models/state.model.ts","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/cricket/cricket.component.ts","./src/app/cricket/cricket.component.html","./src/app/cricket/cricket.module.ts","./src/app/cricket/models/settings.model.ts","./src/app/cricket/models/state.model.ts","./src/app/killer/killer.component.ts","./src/app/killer/killer.component.html","./src/app/killer/killer.module.ts","./src/app/killer/models/settings.model.ts","./src/app/killer/models/state.model.ts","./src/app/material.module.ts","./src/app/shanghai/models/settings.model.ts","./src/app/shanghai/models/state.model.ts","./src/app/shanghai/shanghai.component.ts","./src/app/shanghai/shanghai.component.html","./src/app/shanghai/shanghai.module.ts","./src/app/shared/components/dialog/dialog.component.ts","./src/app/shared/components/dialog/dialog.component.html","./src/app/shared/components/game-toolbar/game-toolbar.component.ts","./src/app/shared/components/game-toolbar/game-toolbar.component.html","./src/app/shared/components/number-plate/number-plate.component.ts","./src/app/shared/components/number-plate/number-plate.component.html","./src/app/shared/models/field-value.model.ts","./src/app/shared/models/player.model.ts","./src/app/shared/models/playground-state.model.ts","./src/app/shared/models/playground.model.ts","./src/app/shared/models/throw.model.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/game.service.ts","./src/app/shared/shared.module.ts","./src/app/x01/models/settings.model.ts","./src/app/x01/x01.component.ts","./src/app/x01/x01.component.html","./src/app/x01/x01.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\n\nexport const routes: Routes = [\n  {path: '', component: MenuComponent},\n  {\n    path: 'x01',\n    data: {name: 'Classic X01'},\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    data: {name: 'Ultimate Cricket'},\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    data: {name: 'Around The Clock'},\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    data: {name: 'Shanghai / Halve It'},\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'killer',\n    data: {name: 'Killer'},\n    loadChildren: () => KillerModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styles: []\n})\nexport class AppComponent {\n  constructor() {\n    document.addEventListener('touchmove',  (event: any) => {\n      if (event.scale !== 1) { event.preventDefault(); }\n    }, { passive: false });\n  }\n}\n","<router-outlet></router-outlet>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent, MenuComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\nimport {AroundClockState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {FIELDS, FIELDS_COUNT, PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './around-clock.component.html'\n})\nexport class AroundClockComponent extends PlaygroundModel<AroundClockState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new AroundClockState(player)));\n  }\n\n  calculatePoints(score: number): Promise<any> {\n\n    const player = this.game.getActualPlayer();\n    const field = score === 25 ? 'B' : (score + '');\n    const state: AroundClockState = this.getPlayerState(player);\n    if (FIELDS[state.getActFieldIndex()] === field) {\n      // last throw\n      if (state.actFieldIndex >= FIELDS_COUNT - this.game.multiplier) {\n        this.game.multiplier = this.game.multiplier === 1 ? 1 : FIELDS_COUNT - (state.actFieldIndex + 1);\n      }\n      state.increaseActFieldIndex(this.settings.jump ? this.game.multiplier : 1);\n      if (state.actFieldIndex >= FIELDS_COUNT) {\n        state.actFieldIndex = FIELDS_COUNT;\n      }\n    }\n    player.score++;\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n    if ((FIELDS_COUNT - 1) < this.getPlayerState(player).getActFieldIndex()) {\n      player.win = true;\n    } else if (this.game.actualThrow === 3) {\n      let multi = 1;\n      for (let i = 0; i < 3; i++) {\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n        if (t.field === this.getPreviousField()) {\n          multi *= (t.multi + 1);\n        }\n      }\n      if (multi === 1 && this.settings.punishment) {\n        this.getPlayerState(player).decreaseActFieldIndex();\n      }\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return FIELDS.indexOf(fieldStr) === this.getPlayerState(this.game.getActualPlayer()).getActFieldIndex();\n  }\n\n  isHighlighted(field: number): boolean {\n    return this.isFieldEnabledToThrow(field);\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    let ret = false;\n    if (!this.isFieldEnabledToThrow(field)) {\n      let fieldStr = field + '';\n      if (field === 25) {\n        fieldStr = 'B';\n      }\n      ret = this.game.players.filter(p => p !== this.game.getActualPlayer())\n        .some(p => FIELDS.indexOf(fieldStr) === this.getPlayerState(p).getActFieldIndex());\n    }\n    return ret;\n  }\n\n  getActualField(player): string {\n    return FIELDS[this.getPlayerState(player).getActFieldIndex()];\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  private getPreviousField(): string {\n    return FIELDS[this.game.round > 0 ? this.game.round : 0];\n  }\n\n  private getPlayerState(player: Player): AroundClockState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"side-left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name\">{{player.name}}</div>\n          <div class=\"shoots\">\n            <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\n            <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\n            <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div class=\"score\"><label>Field: </label>{{getActualField(player)}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Around The Clock Settings</h1>\n\n      <h2>Players <button mat-icon-button (click)=\"addPlayer()\" [disabled]=\"!game.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button></h2>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player #{{i + 1}} name:</mat-label>\n          <input [(ngModel)]=\"player.name\" type=\"text\" matInput>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\n      </div>\n      <mat-divider></mat-divider>\n\n      <button mat-raised-button class=\"button medium\" [color]=\"settings.jump?'primary':''\"\n              (click)=\"settings.toggleJump()\">\n        Enable Jump\n      </button>\n\n      <button mat-raised-button class=\"button medium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">\n        Victory First\n      </button>\n\n<!--      <button mat-raised-button class=\"button medium\" [color]=\"settings.punishment?'primary':''\"-->\n<!--              (click)=\"settings.togglePunishment()\">-->\n<!--        Enable Punishment-->\n<!--      </button>-->\n\n      <mat-divider></mat-divider>\n      <button mat-raised-button class=\"button big\" (click)=\"newGame()\">Start</button>\n      <button mat-raised-button class=\"button big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","export class Settings {\r\n  jump: boolean;\r\n  punishment: boolean;\r\n\r\n  constructor() {\r\n    this.jump = true;\r\n    this.punishment = false;\r\n  }\r\n\r\n  toggleJump() {\r\n    this.jump = !this.jump;\r\n  }\r\n\r\n  togglePunishment() {\r\n    this.punishment = !this.punishment;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state: AroundClockState = new AroundClockState(this.player);\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01'}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock'}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai / Halve It'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer'}\r\n  }\r\n];\r\n\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n}\r\n","<div id=\"menu\">\r\n  <h1>Select Game!</h1>\r\n  <button mat-raised-button class=\"gameSelectBox\" *ngFor=\"let g of getGameList()\"  [routerLink]=\"['/' + g.path]\">\r\n    {{g.data.name}}\r\n  </button>\r\n</div>\r\n","import {Component} from '@angular/core';\nimport {CricketState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './cricket.component.html'\n})\nexport class CricketComponent extends PlaygroundModel<CricketState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new CricketState(player)));\n  }\n\n  customSettingsValidation(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    this.updateField(player, score);\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n\n    this.game.players.forEach(p => {\n      p.score = this.getPlayerTotal(p);\n    }, this);\n\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\n    player.win = this.isPlayerDone(player)\n      && ((!punishStyle && this.game.isTheBestPlayer(player)) || (punishStyle && this.game.isTheWorstPlayer(player)));\n\n    if (this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  getFieldValue(player: Player, field: string): string {\n    const score = this.getPunishScore(player, field);\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(field);\n\n    let str = '';\n    if (punishStyle && score !== 0) {\n      str += score;\n    }\n\n    if (playerFieldCount === 0 && str.length === 0) {\n      return '○';\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\n      return this.getFieldScore(player, field) + '';\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\n      str += '●●●';\n    } else {\n      for (let i = 0; i < playerFieldCount; i++) {\n        str += '●';\n      }\n    }\n    return str;\n  }\n\n  isFieldDoneForPlayer(player: Player, field: string): boolean {\n    return this.getPlayerState(player).getFieldCount(field) >= 3;\n  }\n\n  isActiveField(player: Player, field: string): boolean {\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === field;\n  }\n\n  isHighlighted(field: number): boolean {\n    return this.isFieldEnabledToThrow(field) &&\n      !this.isFieldDoneForPlayer(this.game.getActualPlayer(), field === 25 ? 'B' : field + '');\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    return this.isFieldEnabledToThrow(field) &&\n      this.isFieldDoneForPlayer(this.game.getActualPlayer(), field === 25 ? 'B' : field + '');\n  }\n\n  getFieldNote(field: number): string {\n    if (this.isHighlighted(field)) {\n      const playerFieldCount = this.getPlayerState(this.game.getActualPlayer()).getFieldCount(field === 25 ? 'B' : field + '');\n      return ''.padStart(3 - playerFieldCount, '●');\n    }\n    return '';\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return this.settings.fields.indexOf(fieldStr) !== -1 && !this.isFieldClosed(fieldStr);\n  }\n\n  private getPlayerTotal(player: Player) {\n    let total = 0;\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\n      total = this.getPlayerTotalForPunishGame(player);\n    } else if (this.settings.isScoreGame()) {\n      total = this.getPlayerTotalForScoreGame(player);\n    }\n    return total;\n  }\n\n  private getPlayerTotalForScoreGame(player: Player) {\n    let total = 0;\n    this.settings.fields.forEach(field => {\n      if (this.isFieldDoneForPlayer(player, field)) {\n        total += (this.getPlayerState(player).getFieldCount(field) - 3) * PlaygroundModel.getFieldValueAsNumber(field);\n      }\n    }, this);\n    return total;\n  }\n\n  private getPlayerTotalForPunishGame(player: Player) {\n    let total = 0;\n    this.settings.fields.forEach(field => {\n      total += this.getPlayerState(player).getPunishCount(field) * PlaygroundModel.getFieldValueAsNumber(field);\n    }, this);\n    return total;\n  }\n\n  private updateField(player: Player, score: number) {\n    const field = score === 25 ? 'B' : (score + '');\n\n    if (this.settings.fields.indexOf(field) !== -1 && !this.isFieldClosed(field)) {\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(field);\n      if (!this.settings.isBlackOutGame() ||\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === field ||\n        this.isFieldDoneForPlayer(player, field)) {\n\n        if (this.isFieldClosedForOthers(player, field) && (playerFieldCount + this.game.multiplier) > 3) {\n          this.getPlayerState(player).setFieldCount(field, 3);\n        } else {\n          let multiplier = this.game.multiplier + 0;\n          if (playerFieldCount < 3 && (playerFieldCount + this.game.multiplier) >= 3) {\n            multiplier = (playerFieldCount + this.game.multiplier) % 3;\n          }\n          this.getPlayerState(player).setFieldCount(field, playerFieldCount + this.game.multiplier);\n          this.game.multiplier = multiplier;\n        }\n      }\n\n      if (this.isFieldDoneForPlayer(player, field)) {\n        if (this.settings.isBlackOutGame()) {\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === field) {\n            this.getPlayerState(player).increaseActFieldIndex();\n          }\n        }\n        this.punishPlayers(field);\n      }\n    }\n  }\n\n  private punishPlayers(field: string) {\n    this.game.players.forEach(player => {\n      if (!this.isFieldDoneForPlayer(player, field)) {\n        this.getPlayerState(player).setPunishCount(field, this.getPlayerState(player).getPunishCount(field) + this.game.multiplier);\n      }\n    }, this);\n  }\n\n  private getFieldScore(player: Player, field: string): number {\n    if (this.isFieldDoneForPlayer(player, field)) {\n      return (this.getPlayerState(player).getFieldCount(field) - 3) * PlaygroundModel.getFieldValueAsNumber(field);\n    }\n    return 0;\n  }\n\n  private getPunishScore(player: Player, field: string): number {\n    return this.getPlayerState(player).getPunishCount(field) * PlaygroundModel.getFieldValueAsNumber(field);\n  }\n\n  private isFieldClosed(field: string) {\n    let closed = true;\n    this.game.players.forEach(player => {\n      closed = closed && this.isFieldDoneForPlayer(player, field);\n    }, this);\n    return closed;\n  }\n\n  private isFieldClosedForOthers(player: Player, field: string) {\n    let closed = true;\n    this.game.players.forEach(p => {\n      if (p.id !== player.id) {\n        closed = closed && this.isFieldDoneForPlayer(p, field);\n      }\n    }, this);\n    return closed;\n  }\n\n  private isPlayerDone(player: Player): boolean {\n    let done = true;\n    this.settings.fields.forEach(field => {\n      done = done && this.isFieldDoneForPlayer(player, field);\n    });\n    return done;\n  }\n\n  private getPlayerState(player: Player): CricketState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"side-left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name\">{{player.name}}</div>\n          <div class=\"shoots\">\n            <div class=\"shoot\">{{player.throws[0]}}</div>\n            <div class=\"shoot\">{{player.throws[1]}}</div>\n            <div class=\"shoot\">{{player.throws[2]}}</div>\n            <div class=\"shoot total\">{{player.getThrowsTotal()}}</div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div class=\"field-set\">\n            <div\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\n                *ngFor=\"let field of settings.fields\">\n              {{field}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\n            </div>\n          </div>\n          <div class=\"line\"></div>\n          <div class=\"score\" *ngIf=\"!settings.isNoScoreGame()\">{{player.score}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Cricket Settings</h1>\n\n      <h2>Players <button mat-icon-button (click)=\"addPlayer()\" [disabled]=\"!game.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button></h2>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player #{{i + 1}} name:</mat-label>\n          <input [(ngModel)]=\"player.name\" type=\"text\" matInput>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\n      </div>\n      <mat-divider></mat-divider>\n\n      <h2>Fields</h2>\n      <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\n              *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\n        {{numb === 21 ? 'B' : numb}}\n      </button>\n      <mat-divider></mat-divider>\n\n      <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\n      <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\n      <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\n      <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\n      <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize()\">Random</button>\n      <mat-divider></mat-divider>\n\n      <h2>Style</h2>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\n              (click)=\"settings.setStyle(1)\">Classic\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\"\n              (click)=\"settings.setStyle(2)\">Cut-Throat\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\n              (click)=\"settings.setStyle(3)\">No Score\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\"\n              (click)=\"settings.setStyle(4)\">Black Out\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">\n        Victory First\n      </button>\n\n      <mat-divider></mat-divider>\n      <button mat-raised-button class=\"button big\" (click)=\"newGame()\">Start</button>\n      <button mat-raised-button class=\"button big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class Settings {\r\n\r\n  fields: string[] = ['15', '16', '17', '18', '19', '20', 'B'];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 7; i++) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i === 20 ? 'B' : ((i + 1) + ''));\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  private setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(field: string): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  setFieldCount(field: string, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value = value;\r\n  }\r\n\r\n  getPunishCount(field: string): number {\r\n    return this.getFieldValue(this.punishCount, field).value;\r\n  }\r\n\r\n  setPunishCount(field: string, value: number) {\r\n    this.getFieldValue(this.punishCount, field).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state: CricketState = new CricketState(this.player);\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {KillerState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './killer.component.html'\n})\nexport class KillerComponent extends PlaygroundModel<KillerState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService, 2);\n    this.settings = new Settings();\n    this.nextEnabled = false;\n    this.zeroEnabled = false;\n    this.multiEnabled = false;\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player =>\n      this.state.push(new KillerState(player, this.settings.numberOfLives, this.settings.boardingLimit)));\n  }\n\n  customNext() {\n    while (this.getPlayerState(this.game.getActualPlayer()).isDead()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  customSettingsValidation(): boolean {\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n\n    const player = this.game.getActualPlayer();\n    const state: KillerState = this.getPlayerState(player);\n\n    if (this.game.round === 0) {\n      state.actField = score;\n      player.score = score;\n      if (this.game.isActualPlayerTheLast()) {\n        this.nextEnabled = true;\n        this.zeroEnabled = true;\n        this.multiEnabled = true;\n      }\n    } else {\n      if (state.killer) {\n        if (score === state.actField) {\n          state.life = Number(state.life) + Number(this.game.multiplier);\n          if (state.life > this.settings.numberOfLives) {\n            state.life = this.settings.numberOfLives;\n          }\n        } else {\n          this.game.players.filter(p => p.id !== player.id && !this.getPlayerState(p).isDead()).forEach(p => {\n            const s = this.getPlayerState(p);\n            if (s.actField === score) {\n              s.life -= this.game.multiplier;\n              if (s.life < 0) {\n                s.life = 0;\n              }\n            }\n          });\n        }\n      } else if (score === state.actField) {\n        state.boarding -= this.game.multiplier;\n        if (state.boarding <= 0) {\n          state.boarding = 0;\n        }\n        state.killer = state.boarding === 0;\n      }\n    }\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    if (this.game.round !== 0) {\n      const actualPlayer = this.game.getActualPlayer();\n      actualPlayer.win = !this.game.players.some(p => p.id !== actualPlayer.id && !this.getPlayerState(p).isDead());\n    }\n    if (this.game.round === 0 || this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n    while (this.getPlayerState(this.game.getActualPlayer()).isDead()) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    if (this.game.round === 0) {\n      return field !== 25 && !this.getAllEnabledFields().some(f => f === field);\n    }\n    return this.getAllEnabledFields().some(f => f === field);\n  }\n\n  isHighlighted(field: number): boolean {\n    if (this.game.round === 0) {\n      return this.isFieldEnabledToThrow(field);\n    }\n    const state = this.getPlayerState(this.game.getActualPlayer());\n    if (state.killer) {\n      return this.isFieldEnabledToThrow(field) && !this.isSecondHighlighted(field);\n    }\n    return state.actField === field;\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    const state = this.getPlayerState(this.game.getActualPlayer());\n    if (state.killer) {\n      return state.actField === field;\n    }\n    return false;\n  }\n\n  getFieldIcon(field: number): string {\n    if (this.game.players.some(p => {\n      const s = this.getPlayerState(p)\n      return !s.isDead() && s.life < 2 && s.actField === field;\n    })) {\n      return 'sentiment_very_dissatisfied';\n    } else if (this.game.players.some(p => {\n      const s = this.getPlayerState(p)\n      return s.isDead() && s.actField === field;\n    })) {\n      return 'highlight_off';\n    }\n\n    return '';\n  }\n\n\n  getPlayerField(player: Player): string {\n    const score = this.getPlayerState(player).actField;\n    return score === 25 ? 'B' : (score + '');\n  }\n\n  getLife(player: Player): number {\n    return this.getPlayerState(player).life;\n  }\n\n  getBoarding(player: Player): number {\n    return this.getPlayerState(player).boarding;\n  }\n\n  isKiller(player: Player): boolean {\n    return this.getPlayerState(player).killer;\n  }\n\n  isDead(player: Player): boolean {\n    return this.getPlayerState(player).isDead();\n  }\n\n  private getAllEnabledFields(): number[] {\n    return this.game.players.filter(p => !this.getPlayerState(p).isDead()).map(p => this.getPlayerState(p).actField);\n  }\n\n  private getPlayerState(player: Player): KillerState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"side-left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isDead(player) ? 'inactive' : ''}} {{isKiller(player) ? 'highlighted2' : ''}}\"\n          *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name\">{{player.name}}</div>\n          <div class=\"shoots\">\n            <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\n            <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\n            <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\n          </div>\n          <ng-container *ngIf=\"getPlayerField(player) !== '0'\">\n            <div class=\"clear\"></div>\n            <div class=\"line\"></div>\n            <div class=\"score\"><label>Field: </label>{{getPlayerField(player)}}</div>\n            <div class=\"clear\"></div>\n            <div class=\"line\"></div>\n            <div class=\"score\">\n              <label>Life: </label>{{getLife(player)}}\n              <ng-container *ngIf=\"!isKiller(player)\"><label>Boarding: </label>{{getBoarding(player)}}</ng-container>\n            </div>\n          </ng-container>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Killer Game Settings</h1>\n\n      <h2>Players <button mat-icon-button (click)=\"addPlayer()\" [disabled]=\"!game.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button></h2>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player #{{i + 1}} name:</mat-label>\n          <input [(ngModel)]=\"player.name\" type=\"text\" matInput>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\n      </div>\n      <mat-divider></mat-divider>\n\n      <div class=\"field-set\">\n        <mat-form-field appearance=\"fill\" class=\"big\">\n          <mat-label>Life limit</mat-label>\n          <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\n        </mat-form-field>\n        <mat-form-field appearance=\"fill\" class=\"big\">\n          <mat-label>Boarding</mat-label>\n          <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\n        </mat-form-field>\n      </div>\n\n      <mat-divider></mat-divider>\n      <button mat-raised-button class=\"button big\" (click)=\"newGame()\">Start</button>\n      <button mat-raised-button class=\"button big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class Settings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(player: Player, public life = 5, public boarding = 3) {\r\n    super(player);\r\n    this.actField = 0;\r\n    this.killer = false;\r\n  }\r\n\r\n  isDead(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state: KillerState = new KillerState(this.player);\r\n    state.actField = this.actField;\r\n    state.life = this.life;\r\n    state.boarding = this.boarding;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","export class Settings {\r\n\r\n  fields: string[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i === 20 ? 'B' : ((i + 1) + ''));\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\nimport {Player} from '~models/player.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor(player: Player) {\r\n    super(player);\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: string): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: string, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: string): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: string, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state: ShanghaiState = new ShanghaiState(this.player);\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {ShanghaiState} from './models/state.model';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './shanghai.component.html'\n})\nexport class ShanghaiComponent extends PlaygroundModel<ShanghaiState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.state = [];\n    this.game.players.forEach(player => this.state.push(new ShanghaiState(player)));\n  }\n\n  customSettingsValidation(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    const state = this.getPlayerState(player);\n    const field = score === 25 ? 'B' : (score + '');\n    if (this.isActiveField(field)) {\n      state.increaseFieldCount(field, 1);\n      state.increaseFieldScore(field, this.game.multiplier);\n      if (this.settings.noScore) {\n        player.score++;\n      } else {\n        player.score += PlaygroundModel.getFieldValueAsNumber(field) * this.game.multiplier;\n      }\n    }\n    return Promise.resolve();\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n\n    // Shanghai rule\n    if (this.game.actualThrow === 3) {\n      let multi = 1;\n      for (let i = 0; i < 3; i++) {\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n        if (t.field === this.getPreviousField()) {\n          multi *= (t.multi + 1);\n        }\n      }\n      if (multi === 1 && this.settings.halveIt) {\n        player.score = Math.round(player.score / 2);\n      }\n      player.win = multi === 24;\n      if (player.win) {\n        this.game.extraEndingMsg = 'SHANGHAI!!!';\n      }\n    }\n\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\n    if (gameEnded) {\n      this.game.players.forEach(p => p.win = this.game.isTheBestPlayer(p));\n      console.log(this.game.players);\n\n    } else if (this.game.actualThrow === 3) {\n      this.game.nextPlayer();\n    }\n\n    return Promise.resolve();\n  }\n\n  getFieldValue(player: Player, field: string): string {\n    const fieldCount = this.getPlayerState(player).getFieldCount(field);\n    if (fieldCount === 0) {\n      return '○○○';\n    } else {\n      let str = '' + this.getPlayerState(player).getFieldScore(field) * PlaygroundModel.getFieldValueAsNumber(field);\n      for (let i = 0; i < fieldCount; i++) {\n        str += '●';\n      }\n      for (let i = fieldCount; i < 3; i++) {\n        str += '○';\n      }\n      return str;\n    }\n  }\n\n  isActiveField(field: string): boolean {\n    return this.settings.fields[this.game.round] === field;\n  }\n\n  isDoneField(field: string): boolean {\n    return this.settings.fields.indexOf(field) < this.game.round;\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    let fieldStr = field + '';\n    if (field === 25) {\n      fieldStr = 'B';\n    }\n    return this.settings.fields.indexOf(fieldStr) === this.game.round;\n  }\n\n  isHighlighted(field: number): boolean {\n    return this.isFieldEnabledToThrow(field);\n  }\n\n  isLastRound(): boolean {\n    return this.game.round === this.settings.fields.length - 1;\n  }\n\n  private getPreviousField(): string {\n    return this.settings.fields[this.game.round > 0 ? this.game.round : 0];\n  }\n\n  private getPlayerState(player: Player): ShanghaiState {\n    return this.state.filter(s => s.player.id === player.id)[0];\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"side-left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name\">{{player.name}}</div>\n          <div class=\"shoots\">\n            <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\n            <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\n            <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\n            <div class=\"shoot total\">{{!player.getThrowsTotal() ? '-' : player.getThrowsTotal()}}</div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div class=\"field-set\">\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isDoneField(field) ? '' : 'highlighted'}}\"\n                 *ngFor=\"let field of settings.fields\">\n              {{field}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\n            </div>\n          </div>\n          <div class=\"line\"></div>\n          <div class=\"score\">{{player.score}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>Shanghai Settings</h1>\n\n      <h2>Players <button mat-icon-button (click)=\"addPlayer()\" [disabled]=\"!game.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button></h2>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player #{{i + 1}} name:</mat-label>\n          <input [(ngModel)]=\"player.name\" type=\"text\" matInput>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\n      </div>\n      <mat-divider></mat-divider>\n\n      <h2>Fields</h2>\n      <button mat-raised-button class=\"button\" [color]=\"settings.numbs[i]?'primary':''\"\n              *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\n        {{numb === 21 ? 'B' : numb}}\n      </button>\n      <mat-divider></mat-divider>\n\n      <button mat-raised-button class=\"button big capitalize\" (click)=\"settings.randomize()\">Randomize</button>\n      <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.noScore?'primary':''\"\n              (click)=\"settings.toggleNoScore()\">No score\n      </button>\n      <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.halveIt?'primary':''\"\n              (click)=\"settings.toggleHalveIt()\">Halve It\n      </button>\n\n      <mat-divider></mat-divider>\n      <button mat-raised-button class=\"button big\" (click)=\"newGame()\">Start</button>\n      <button mat-raised-button class=\"button big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container evo-typography\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"true\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {PlaygroundModel} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: PlaygroundModel<PlaygroundState>;\r\n\r\n  constructor(public game: GameService, public route: Router) {\r\n  }\r\n\r\n  quit() {\r\n    this.route.navigate(['/']);\r\n    this.game.resetScore();\r\n  }\r\n\r\n  showSettings() {\r\n    this.playground.reset();\r\n    this.playground.settingsOpen = true;\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <div class=\"buttons\">\r\n    <button mat-raised-button (click)=\"quit()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.newGame(true)\">\r\n      <mat-icon>refresh</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"showSettings()\">\r\n      <mat-icon>build</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.undo()\">\r\n      <mat-icon>undo</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"round-info\">{{game.round+1}}</div>\r\n</div>\r\n<div class=\"clear\"></div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(field: number): string {\r\n    if (this.playground.isHighlighted(field)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondHighlighted(field)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(field: number): boolean {\r\n    return !this.playground.isFieldEnabledToThrow(field) && !this.getNumberColor(field);\r\n  }\r\n\r\n  throwNumber(field: number) {\r\n    this.playground.throwNumber(this.playground.isFieldEnabledToThrow(field) ? field : 0);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\">\r\n\r\n  <button mat-raised-button *ngFor=\"let i of getNumbers()\" class=\"number\" [color]=\"getNumberColor(i)\"\r\n          [disabled]=\"isNumberDisabled(i)\" (click)=\"throwNumber(i)\">\r\n    {{i}}\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(i)\">{{ playground.getFieldIcon(i)}}</mat-icon>\r\n    <div class=\"field-note\" *ngIf=\"playground.getFieldNote(i)\">{{ playground.getFieldNote(i)}}</div>\r\n  </button>\r\n  <button mat-raised-button class=\"number\" [color]=\"getNumberColor(25)\" [disabled]=\"isNumberDisabled(25)\"\r\n          (click)=\"throwNumber(25)\">\r\n    Bull\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(25)\">{{ playground.getFieldIcon(25)}}</mat-icon>\r\n    <div class=\"field-note\" *ngIf=\"playground.getFieldNote(25)\">{{ playground.getFieldNote(25)}}</div>\r\n  </button>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"game.multiplier === 2 ? 'primary' : ''\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">Double</button>\r\n  <button mat-raised-button class=\"number\" [color]=\"game.multiplier === 3 ? 'primary' : ''\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">Triple</button>\r\n\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.throwNumber(0)\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n</div>\r\n","export class FieldValue {\n  field: string;\n  value: number;\n\n  constructor(field: string, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","import {Throw} from './throw.model';\n\nexport class Player {\n  id: number;\n  name = '';\n  score = 0;\n  throws: number[] = [];\n  throwsHistory: Throw[];\n  win = false;\n  first = true;\n\n  constructor(id: number) {\n    this.id = id;\n  }\n\n  getThrowsTotal(): number {\n    return this.throws.reduce((a, b) => a + b, 0);\n  }\n\n  addThrowHistory(thr: Throw) {\n    this.throwsHistory.push(thr);\n  }\n\n  reset() {\n    this.score = 0;\n    this.throws = [];\n    this.throwsHistory = [];\n    this.win = false;\n    this.first = true;\n  }\n\n  clone(): Player {\n    const player = new Player(this.id);\n    player.name = this.name;\n    player.score = this.score;\n    player.throws = [];\n    this.throws.forEach(t => {\n      player.throws.push(t);\n    });\n    player.throwsHistory = this.throwsHistory;\n    player.win = this.win;\n    player.first = this.first;\n    player.throwsHistory = [];\n    this.throwsHistory.forEach(throws => {\n      player.throwsHistory.push(throws.clone());\n    });\n    return player;\n  }\n}\n","import {Player} from './player.model';\nimport {FieldValue} from './field-value.model';\n\nexport abstract class PlaygroundState {\n\n  player: Player;\n\n  constructor(player: Player) {\n    this.player = player;\n  }\n\n  getFieldValue(list: FieldValue[], field: string): FieldValue {\n    const filtered = list.filter(f => f.field === field);\n    if (filtered.length === 0) {\n      list.push(new FieldValue(field, 0));\n    }\n    return list.filter(f => f.field === field)[0];\n  }\n\n  abstract clone(): PlaygroundState;\n}\n","import {OnInit} from '@angular/core';\nimport {v4 as uuid} from 'uuid';\nimport {GameService} from '../services/game.service';\nimport {Player} from './player.model';\nimport {Throw} from './throw.model';\nimport {Router} from '@angular/router';\nimport {PlaygroundState} from '~models/playground-state.model';\nimport {DialogService} from '~services/dialog.service';\n\nexport const FIELDS = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', 'B'];\nexport const FIELDS_COUNT = 21;\n\nexport abstract class PlaygroundModel<T extends PlaygroundState> implements OnInit {\n\n  throwEnabled = true;\n  settingsOpen = true;\n  gameHistory: GameService[];\n  nextEnabled = true;\n  zeroEnabled = true;\n  multiEnabled = true;\n  state: T[];\n  stateHistory: T[][] = [];\n  playground = this;\n\n  protected constructor(public game: GameService,\n                        public route: Router,\n                        public dialogService: DialogService,\n                        public minimumNumberOfPlayers = 1) {\n  }\n\n  static getFieldValueAsNumber(field: string): number {\n    return field === 'B' ? 25 : parseInt(field, 10);\n  }\n\n  ngOnInit() {\n    this.settingsOpen = true;\n    const numberOfPlayerToAdd = this.minimumNumberOfPlayers - this.game.players.length;\n    for (let i = 0; i < numberOfPlayerToAdd; i++) {\n      this.addPlayer();\n    }\n  }\n\n  throwNumber(score: number): Promise<void> {\n    if (this.throwEnabled) {\n      this.save();\n      this.throwEnabled = false;\n      if (score === 25 && this.game.multiplier === 3) {\n        this.game.multiplier = 1;\n      }\n\n      const actualPlayer = this.game.getActualPlayer();\n      actualPlayer.addThrowHistory(new Throw(score, this.game.multiplier, this.game.actualThrow));\n      if (this.game.actualThrow === 0) {\n        actualPlayer.throws = [];\n      }\n      actualPlayer.throws[this.game.actualThrow] = score * this.game.multiplier;\n      this.game.actualThrow++;\n\n      return this.calculatePoints(score)\n        .then(() => this.checkPlayerState())\n        .then(() => {\n          this.game.multiplier = 1;\n\n          const winners = this.game.players.filter(p => p.win);\n          if (winners.length > 0) {\n            if (this.game.victoryFirst || this.game.players.length - winners.length <= 1) {\n              this.dialogService.openDialog('Game Over!', this.game.extraEndingMsg, this.game.clone().players);\n              this.newGame(true);\n            } else if (this.game.victoryFirst) {\n              this.dialogService.openDialog('Game Over!', this.game.extraEndingMsg, this.game.clone().players);\n              this.newGame(true);\n            } else {\n              while (this.game.getActualPlayer().win) {\n                this.game.nextPlayer();\n              }\n            }\n          }\n          this.throwEnabled = true;\n        });\n    }\n  }\n\n  newGame(rotate = false) {\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\n    if (!this.playerSettingsValidation()) {\n      this.dialogService.openDialog('Error!', 'Number of players are incorrect.');\n    } else if (this.settingsOpen) {\n      this.dialogService.openDialog('Error!', 'Settings is incorrect.');\n    }\n    this.reset();\n    if (rotate) {\n      this.game.rotatePlayers();\n    }\n  }\n\n  addPlayer(): void {\n    const player = new Player(uuid());\n    player.name = 'P' + (this.game.players.length + 1);\n    this.game.players.push(player);\n  }\n\n  removePlayer(player: Player): void {\n    if (this.game.players.length > 1) {\n      this.game.players = this.game.players.filter(p => p !== player);\n    }\n  }\n\n  triplePoint() {\n    this.game.multiplier = this.game.multiplier === 3 ? 1 : 3;\n  }\n\n  doublePoint() {\n    this.game.multiplier = this.game.multiplier === 2 ? 1 : 2;\n  }\n\n  reset(): void {\n    this.gameHistory = [];\n    this.game.resetScore();\n    this.stateHistory = [];\n    this.customReset();\n  }\n\n  undo() {\n    if (this.gameHistory.length > 0) {\n      this.game = this.gameHistory.pop();\n      if (this.stateHistory.length > 0) {\n        this.state = this.stateHistory.pop();\n      }\n    }\n  }\n\n  skip() {\n    const actThrow = this.game.actualThrow;\n    this.throwNumber(0).then(() => {\n      if (actThrow !== 2) {\n        this.skip();\n      }\n    });\n  }\n\n  quit() {\n    this.route.navigate(['/']);\n    this.game.resetScore();\n  }\n\n  customNext() {\n    // should be implemented\n  }\n\n  customSettingsValidation(): boolean {\n    return true;\n  }\n\n  isHighlighted(field: number): boolean {\n    return false;\n  }\n\n  isSecondHighlighted(field: number): boolean {\n    return false;\n  }\n\n  getFieldIcon(field: number): string {\n    return '';\n  }\n\n  getFieldNote(field: number): string {\n    return '';\n  }\n\n  isLastRound(): boolean {\n    return false;\n  }\n\n  isFieldEnabledToThrow(field: number): boolean {\n    return true;\n  }\n\n  private playerSettingsValidation(): boolean {\n    const players: Player[] = [];\n    this.game.players.forEach(player => {\n      if (player.name.length !== 0) {\n        players.push(player);\n      }\n    });\n    this.game.players = players;\n    return players.length >= this.minimumNumberOfPlayers;\n  }\n\n  private save() {\n    this.gameHistory.push(this.game.clone());\n    if (this.state) {\n      const state = [];\n      this.state.forEach(s => state.push(s.clone()));\n      this.stateHistory.push(state);\n    }\n  }\n\n  abstract customReset(): void;\n\n  abstract calculatePoints(score: number): Promise<any>;\n\n  abstract checkPlayerState(): Promise<any>;\n}\n","export class Throw {\n  field: string;\n  fieldNum: number;\n  multi: number;\n  order: number;\n\n  constructor(fieldNum: number, multi: number, order: number) {\n    this.fieldNum = fieldNum;\n    this.field = fieldNum === 25 ? 'B' : fieldNum + '';\n    this.multi = multi;\n    this.order = order;\n  }\n\n  clone(): Throw {\n    return new Throw(this.fieldNum, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\nimport {Player} from '../models/player.model';\n\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\n\n@Injectable({providedIn: 'root'})\nexport class GameService {\n  players: Player[] = [];\n  actualPlayerIndex: number;\n  actualThrow: number;\n  multiplier: number;\n  extraEndingMsg: string;\n  round: number;\n  victoryFirst = true;\n\n  toggleVictoryFirst() {\n    this.victoryFirst = !this.victoryFirst;\n  }\n\n  canAddPlayer(): boolean {\n    return this.players.length < MAXIMUM_NUMBER_OF_PLAYERS;\n  }\n\n  isTheFirstThrow(): boolean {\n    return this.actualThrow === 1;\n  }\n\n  isTheLastThrow(): boolean {\n    return this.actualThrow === 3;\n  }\n\n  getActualPlayer(): Player {\n    return this.players[this.actualPlayerIndex];\n  }\n\n  nextPlayer(): void {\n    if (this.isActualPlayerTheLast()) {\n      this.nextRound();\n    }\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\n    this.actualThrow = 0;\n  }\n\n  getNumberOfPlayers(): number {\n    return this.players.length;\n  }\n\n  getTheFirstPlayer(): Player {\n    return this.players[0];\n  }\n\n  isTheFirstPlayer(player: Player): boolean {\n    return player.id === this.getTheFirstPlayer().id;\n  }\n\n  isActualPlayerIsTheFirst(): boolean {\n    return this.isTheFirstPlayer(this.getActualPlayer());\n  }\n\n  getTheLastPlayer(): Player {\n    return this.players[this.getNumberOfPlayers() - 1];\n  }\n\n  isTheLastPlayer(player: Player): boolean {\n    return player.id === this.getTheLastPlayer().id;\n  }\n\n  isActualPlayerTheLast(): boolean {\n    return this.isTheLastPlayer(this.getActualPlayer());\n  }\n\n  isTheBestPlayer(actPlayer: Player): boolean {\n    let bestPlayer = true;\n    this.players.filter(p => !p.win).forEach(player => {\n      bestPlayer = bestPlayer && actPlayer.score >= player.score;\n    });\n    return bestPlayer;\n  }\n\n  isTheWorstPlayer(actPlayer: Player): boolean {\n    let lastPlayer = true;\n    this.players.filter(p => !p.win).forEach(player => {\n      lastPlayer = lastPlayer && actPlayer.score <= player.score;\n    });\n    return lastPlayer;\n  }\n\n  nextRound(): void {\n    this.round++;\n  }\n\n  reset(): void {\n    this.resetScore();\n    this.players = [];\n  }\n\n  resetScore(): void {\n    this.extraEndingMsg = '';\n    this.players.forEach(player => player.reset());\n    this.actualPlayerIndex = 0;\n    this.actualThrow = 0;\n    this.multiplier = 1;\n    this.round = 0;\n  }\n\n  rotatePlayers(): void {\n    this.players.push(this.players.shift());\n  }\n\n  clone(): GameService {\n    const game = new GameService();\n    game.actualPlayerIndex = this.actualPlayerIndex;\n    game.actualThrow = this.actualThrow;\n    game.multiplier = this.multiplier;\n    game.extraEndingMsg = this.extraEndingMsg;\n    game.round = this.round;\n    const players: Player[] = [];\n    this.players.forEach(player => {\n      players.push(player.clone());\n    });\n    game.players = players;\n    return game;\n  }\n\n}\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MaterialModule} from '../material.module';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\r\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  declarations: [NumberPlateComponent, GameToolbarComponent, DialogComponent],\r\n  exports: [CommonModule, FormsModule, MaterialModule, NumberPlateComponent, GameToolbarComponent, DialogComponent],\r\n  entryComponents: [DialogComponent]\r\n})\r\nexport class SharedModule {\r\n}\r\n","export class Settings {\r\n\r\n  startValue = 301;\r\n  start = 1;\r\n  checkout = 1;\r\n\r\n  isNormalStart(): boolean {\r\n    return this.start === 1;\r\n  }\r\n\r\n  isDoubleStart(): boolean {\r\n    return this.start === 2;\r\n  }\r\n\r\n  isTripleStart(): boolean {\r\n    return this.start === 3;\r\n  }\r\n\r\n  isNormalCheckout(): boolean {\r\n    return this.checkout === 1;\r\n  }\r\n\r\n  isDoubleCheckout(): boolean {\r\n    return this.checkout === 2;\r\n  }\r\n\r\n  isTripleCheckout(): boolean {\r\n    return this.checkout === 3;\r\n  }\r\n\r\n  isHighScoreGame(): boolean {\r\n    return this.checkout === 4;\r\n  }\r\n\r\n  setStart(start: number) {\r\n    this.start = start;\r\n  }\r\n\r\n  setCheckout(checkout: number) {\r\n    this.checkout = checkout;\r\n  }\r\n\r\n  setStartValue(startValue: number) {\r\n    this.startValue = startValue;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {Settings} from './models/settings.model';\nimport {PlaygroundModel} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {PlaygroundState} from '~models/playground-state.model';\nimport {DialogService} from '~services/dialog.service';\n\n@Component({\n  templateUrl: './x01.component.html'\n})\nexport class X01Component extends PlaygroundModel<PlaygroundState> {\n\n  settings: Settings;\n\n  constructor(game: GameService, route: Router, dialogService: DialogService) {\n    super(game, route, dialogService);\n    this.settings = new Settings();\n  }\n\n  customReset(): void {\n    this.game.players.forEach(player => player.score = this.settings.startValue);\n  }\n\n  calculatePoints(score: number): Promise<any> {\n    const player = this.game.getActualPlayer();\n    const actualScore = score * this.game.multiplier;\n\n    const validStart = !player.first || this.settings.isNormalStart()\n      || (player.first\n        && ((this.settings.isDoubleStart() && this.game.multiplier === 2)\n          || (this.settings.isTripleStart() && this.game.multiplier === 3)));\n\n    if (validStart) {\n      player.first = false;\n      return this.countDown(player, actualScore);\n    } else {\n      return Promise.resolve();\n    }\n  }\n\n  countDown(player: Player, score: number): Promise<any> {\n    return new Promise<any>((resolve, reject) => {\n      const id = setInterval(() => {\n        if (score === 0) {\n          clearInterval(id);\n          resolve();\n        } else if (player.score < 0) {\n          player.score -= score;\n          score = 0;\n        } else {\n          player.score--;\n          score--;\n        }\n      }, 5);\n    });\n  }\n\n  checkPlayerState(): Promise<any> {\n    const player = this.game.getActualPlayer();\n    let next = false;\n\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\n      ((player.score === 0 && (this.settings.isNormalCheckout()\n        || (this.settings.isDoubleCheckout() && this.game.multiplier === 2)\n        || (this.settings.isTripleCheckout() && this.game.multiplier === 3))))) {\n      player.win = true;\n      next = true;\n    } else if (player.score <= 0\n      || (this.settings.isDoubleCheckout() && player.score < 2)\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\n      player.throws.forEach(t => player.score += t);\n      next = true;\n      this.dialogService.openDialog(`${this.game.getActualPlayer().name} busted!`);\n    }\n\n    if (this.game.actualThrow === 3 || next) {\n      this.game.nextPlayer();\n    }\n    return Promise.resolve();\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <div class=\"side-left\">\n\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <div class=\"player_info\">\n          <div class=\"name\">{{player.name}}</div>\n          <div class=\"shoots\">\n            <div class=\"shoot\">{{player.throws[0]}}</div>\n            <div class=\"shoot\">{{player.throws[1]}}</div>\n            <div class=\"shoot\">{{player.throws[2]}}</div>\n            <div class=\"shoot total\">{{player.getThrowsTotal()}}</div>\n          </div>\n          <div class=\"clear\"></div>\n          <div class=\"line\"></div>\n          <div class=\"score\">{{player.score}}</div>\n          <div class=\"clear\"></div>\n        </div>\n      </div>\n    </ng-container>\n\n    <div class=\"settings\" *ngIf=\"settingsOpen\">\n      <h1>X01 Settings</h1>\n\n      <h2>Players <button mat-icon-button (click)=\"addPlayer()\" [disabled]=\"!game.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button></h2>\n      <div *ngFor=\"let player of game.players; let i = index\">\n        <mat-form-field appearance=\"fill\">\n          <mat-label>Player #{{i + 1}} name:</mat-label>\n          <input [(ngModel)]=\"player.name\" type=\"text\" matInput>\n        </mat-form-field>\n        <button mat-icon-button (click)=\"removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\n      </div>\n      <mat-divider></mat-divider>\n\n      <h2>Games</h2>\n      <button mat-raised-button class=\"button\" [color]=\"settings.startValue===101?'primary':''\"\n              (click)=\"settings.setStartValue(101)\">101\n      </button>\n      <button mat-raised-button class=\"button\" [color]=\"settings.startValue===201?'primary':''\"\n              (click)=\"settings.setStartValue(201)\">201\n      </button>\n      <button mat-raised-button class=\"button\" [color]=\"settings.startValue===301?'primary':''\"\n              (click)=\"settings.setStartValue(301)\">301\n      </button>\n      <button mat-raised-button class=\"button\" [color]=\"settings.startValue===501?'primary':''\"\n              (click)=\"settings.setStartValue(501)\">501\n      </button>\n      <button mat-raised-button class=\"button\" [color]=\"settings.startValue===701?'primary':''\"\n              (click)=\"settings.setStartValue(701)\">701\n      </button>\n      <button mat-raised-button class=\"button\" [color]=\"settings.startValue===901?'primary':''\"\n              (click)=\"settings.setStartValue(901)\">901\n      </button>\n      <mat-divider></mat-divider>\n\n      <h2>Start</h2>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===1?'primary':''\"\n              (click)=\"settings.setStart(1)\">Single\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===2?'primary':''\"\n              (click)=\"settings.setStart(2)\">Double\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===3?'primary':''\"\n              (click)=\"settings.setStart(3)\">Triple\n      </button>\n      <mat-divider></mat-divider>\n\n      <h2>Checkout</h2>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===1?'primary':''\"\n              (click)=\"settings.setCheckout(1)\">Single\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===2?'primary':''\"\n              (click)=\"settings.setCheckout(2)\">Double\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===3?'primary':''\"\n              (click)=\"settings.setCheckout(3)\">Triple\n      </button>\n      <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===4?'primary':''\"\n              (click)=\"settings.setCheckout(4)\">None\n      </button>\n\n      <mat-divider></mat-divider>\n      <button mat-raised-button class=\"button medium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">\n        Victory First\n      </button>\n\n      <mat-divider></mat-divider>\n      <button mat-raised-button class=\"button big\" (click)=\"newGame()\">Start</button>\n      <button mat-raised-button class=\"button big\" (click)=\"quit()\">Cancel</button>\n    </div>\n\n  </div>\n\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}