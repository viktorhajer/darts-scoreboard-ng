{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/aroundclock/around-clock.component.ts","./src/app/aroundclock/around-clock.component.html","./src/app/aroundclock/around-clock.module.ts","./src/app/aroundclock/models/settings.model.ts","./src/app/aroundclock/models/state.model.ts","./src/app/components/menu/menu.component.ts","./src/app/components/menu/menu.component.html","./src/app/cricket/cricket.component.ts","./src/app/cricket/cricket.component.html","./src/app/cricket/cricket.module.ts","./src/app/cricket/models/settings.model.ts","./src/app/cricket/models/state.model.ts","./src/app/fives/fives.component.ts","./src/app/fives/fives.component.html","./src/app/fives/fives.module.ts","./src/app/fives/models/settings.model.ts","./src/app/hare-and-hound/hare-and-hound.component.ts","./src/app/hare-and-hound/hare-and-hound.component.html","./src/app/hare-and-hound/hare-and-hound.module.ts","./src/app/hare-and-hound/models/settings.model.ts","./src/app/hare-and-hound/models/state.model.ts","./src/app/killer/killer.component.ts","./src/app/killer/killer.component.html","./src/app/killer/killer.module.ts","./src/app/killer/models/settings.model.ts","./src/app/killer/models/state.model.ts","./src/app/material.module.ts","./src/app/route-animation.ts","./src/app/shanghai/models/settings.model.ts","./src/app/shanghai/models/state.model.ts","./src/app/shanghai/shanghai.component.ts","./src/app/shanghai/shanghai.component.html","./src/app/shanghai/shanghai.module.ts","./src/app/shared/components/dialog/dialog.component.ts","./src/app/shared/components/dialog/dialog.component.html","./src/app/shared/components/game-toolbar/game-toolbar.component.ts","./src/app/shared/components/game-toolbar/game-toolbar.component.html","./src/app/shared/components/number-plate/number-plate.component.ts","./src/app/shared/components/number-plate/number-plate.component.html","./src/app/shared/components/player-score/player-score.component.ts","./src/app/shared/components/player-score/player-score.component.html","./src/app/shared/components/player-settings/player-settings.component.ts","./src/app/shared/components/player-settings/player-settings.component.html","./src/app/shared/components/settings/settings.component.ts","./src/app/shared/components/settings/settings.component.html","./src/app/shared/models/application-settings.model.ts","./src/app/shared/models/field-value.model.ts","./src/app/shared/models/player.model.ts","./src/app/shared/models/playground-state.model.ts","./src/app/shared/models/playground.model.ts","./src/app/shared/models/throw.model.ts","./src/app/shared/services/application-state.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/game.service.ts","./src/app/shared/shared.module.ts","./src/app/x01/models/settings.model.ts","./src/app/x01/x01.component.ts","./src/app/x01/x01.component.html","./src/app/x01/x01.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\nimport {FivesModule} from './fives/fives.module';\nimport {HareAndHoundModule} from './hare-and-hound/hare-and-hound.module';\n\nexport const routes: Routes = [\n  {path: '', component: MenuComponent},\n  {\n    path: 'x01',\n    data: {name: 'Classic X01'},\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    data: {name: 'Ultimate Cricket'},\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    data: {name: 'Around The Clock'},\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    data: {name: 'Shanghai / Halve It'},\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'fives',\n    data: {name: 'Fives'},\n    loadChildren: () => FivesModule\n  },\n  {\n    path: 'hare-and-hound',\n    data: {name: 'Hare and Hound'},\n    loadChildren: () => HareAndHoundModule\n  },\n  {\n    path: 'killer',\n    data: {name: 'Killer'},\n    loadChildren: () => KillerModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {Component} from '@angular/core';\nimport {slideInAnimation} from './route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent {\n\n  constructor(public applicationStateService: ApplicationStateService) {\n    document.addEventListener('touchmove',  (event: any) => {\n      if (event.scale !== 1) { event.preventDefault(); }\n    }, { passive: false });\n  }\n}\n","<div [@routeAnimations]=\"outlet && outlet.isActivated && outlet.activatedRoute\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleDarkTheme()\" color=\"primary\"><mat-icon>brightness_1</mat-icon></button>\r\n</div>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MenuComponent} from './components/menu/menu.component';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent, MenuComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\r\nimport {AroundClockState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: './around-clock.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class AroundClockComponent extends Playground<AroundClockState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (state.getActFieldIndex() === fieldIndex) {\r\n      // last throw\r\n      if (state.actFieldIndex >= FIELDS_COUNT - this.multiplier) {\r\n        this.multiplier = this.multiplier === 1 ? 1 : FIELDS_COUNT - (state.actFieldIndex + 1);\r\n      }\r\n      state.increaseActFieldIndex(this.settings.jump ? this.multiplier : 1);\r\n      if (state.actFieldIndex >= FIELDS_COUNT) {\r\n        state.actFieldIndex = FIELDS_COUNT;\r\n      }\r\n    }\r\n    player.score++;\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if ((FIELDS_COUNT - 1) < this.getPlayerState(player).getActFieldIndex()) {\r\n      player.setWin();\r\n    } else if (this.game.actualThrow === 3) {\r\n      if (this.settings.punishment) {\r\n        let multi = 0;\r\n        for (let i = 0; i < 3; i++) {\r\n          const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n          multi += t.score;\r\n        }\r\n        if (multi === 0) {\r\n          this.getPlayerState(player).decreaseActFieldIndex();\r\n        }\r\n      }\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return fieldIndex === this.getPlayerState(this.game.getActualPlayer()).getActFieldIndex();\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    if (!this.isFieldEnabled(fieldIndex)) {\r\n      return this.game.players.filter(p => p !== this.game.getActualPlayer())\r\n        .some(p => fieldIndex === this.getPlayerState(p).getActFieldIndex());\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players.filter(p => this.getPlayerState(p).actFieldIndex === fieldIndex).map(p => p.name);\r\n    return !!owners.length ? owners.join(' ') : '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new AroundClockState());\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Around The Clock'\" [playground]=\"playground\"\r\n                [rules]=\"'The object of this popular game is to be the first player to hit every number on the board ' +\r\n                 'from 1-20. The numbers must be hit in order, and players alternate after three throws. The player ' +\r\n                  'must hit each number in turn and cannot proceed until to the next number until the number is hit. ' +\r\n                   'The winner is the player who hist all the numbers in order first.'\">\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.jump?'primary':''\" (click)=\"settings.toggleJump()\">\r\n      Enable Jump\r\n    </button>\r\n<!--    <button mat-raised-button class=\"button medium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">-->\r\n<!--      Victory First-->\r\n<!--    </button>-->\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.punishment?'primary':''\" (click)=\"settings.togglePunishment()\">\r\n      Enable Punishment\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","export class Settings {\r\n  jump: boolean;\r\n  punishment: boolean;\r\n\r\n  constructor() {\r\n    this.jump = true;\r\n    this.punishment = false;\r\n  }\r\n\r\n  toggleJump() {\r\n    this.jump = !this.jump;\r\n  }\r\n\r\n  togglePunishment() {\r\n    this.punishment = !this.punishment;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state = new AroundClockState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Routes} from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01'}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock'}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai / Halve It'}\r\n  },\r\n  {\r\n    path: 'fives',\r\n    data: {name: 'Fives'}\r\n  },\r\n  {\r\n    path: 'hare-and-hound',\r\n    data: {name: 'Hare and Hound'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer'}\r\n  }\r\n];\r\n\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n}\r\n","<div id=\"menu\">\r\n  <h1>Select Game!</h1>\r\n  <button mat-raised-button class=\"gameSelectBox\" *ngFor=\"let g of getGameList()\"  [routerLink]=\"['/' + g.path]\">\r\n    {{g.data.name}}\r\n  </button>\r\n</div>\r\n<div class=\"version\">v1.0</div>\r\n","import {Component} from '@angular/core';\r\nimport {CricketState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './cricket.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class CricketComponent extends Playground<CricketState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n      if (!this.settings.isBlackOutGame() ||\r\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex ||\r\n        this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n\r\n        if (this.isFieldClosedForOthers(player, fieldIndex) && (playerFieldCount + this.multiplier) > 3) {\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, 3);\r\n        } else {\r\n          let multiplier = this.multiplier + 0;\r\n          if (playerFieldCount < 3 && (playerFieldCount + this.multiplier) >= 3) {\r\n            multiplier = (playerFieldCount + this.multiplier) % 3;\r\n          }\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, playerFieldCount + this.multiplier);\r\n          this.multiplier = multiplier;\r\n        }\r\n      }\r\n\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        if (this.settings.isBlackOutGame()) {\r\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex) {\r\n            this.getPlayerState(player).increaseActFieldIndex();\r\n          }\r\n        }\r\n        this.punishPlayers(fieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.score = this.getPlayerTotal(p));\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    this.game.players.forEach(p => p.setWin(\r\n      this.isPlayerDone(p) &&\r\n      ((!punishStyle && this.game.isTheBestPlayer(p)) || (punishStyle && this.game.isTheWorstPlayer(p)))));\r\n    if (this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const score = this.getPunishScore(player, fieldIndex);\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n\r\n    let str = '';\r\n    if (punishStyle && score !== 0) {\r\n      str += score;\r\n    }\r\n\r\n    if (playerFieldCount === 0 && str.length === 0) {\r\n      return '○';\r\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\r\n      return this.getFieldScore(player, fieldIndex) + '';\r\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\r\n      str += '●●●';\r\n    } else {\r\n      for (let i = 0; i < playerFieldCount; i++) {\r\n        str += '●';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  isActiveField(player: Player, fieldIndex: number): boolean {\r\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(player: Player, fieldIndex: number): boolean {\r\n    return this.getPlayerState(player).getFieldCount(fieldIndex) >= 3;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.settings.isNoScoreGame()) {\r\n      return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldDoneForPlayer(this.game.getActualPlayer(), fieldIndex);\r\n    }\r\n    return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      !this.isFieldDoneForPlayer(this.game.getActualPlayer(), fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      this.isFieldDoneForPlayer(this.game.getActualPlayer(), fieldIndex);\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    if (this.isPrimaryField(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(this.game.getActualPlayer()).getFieldCount(fieldIndex);\r\n      const remaining = ''.padStart(3 - playerFieldCount, '●');\r\n      return remaining + '\\n' + this.game.players.filter(p => this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0,1)).join(',').toUpperCase();\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      return this.game.players.filter(p => !this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0,1)).join(',').toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new CricketState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  private getPlayerTotal(player: Player) {\r\n    let total = 0;\r\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\r\n      total = this.getPlayerTotalForPunishGame(player);\r\n    } else if (this.settings.isScoreGame()) {\r\n      total = this.getPlayerTotalForScoreGame(player);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForScoreGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        total += (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      }\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForPunishGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      total += this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private punishPlayers(fieldIndex: number) {\r\n    this.game.players.forEach(player => {\r\n      if (!this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        this.getPlayerState(player).setPunishCount(fieldIndex, this.getPlayerState(player).getPunishCount(fieldIndex) + this.multiplier);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  private getFieldScore(player: Player, fieldIndex: number): number {\r\n    if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n      return (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getPunishScore(player: Player, fieldIndex: number): number {\r\n    return this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n  }\r\n\r\n  private isFieldClosed(fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(player => {\r\n      closed = closed && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isFieldClosedForOthers(player: Player, fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(p => {\r\n      if (p.id !== player.id) {\r\n        closed = closed && this.isFieldDoneForPlayer(p, fieldIndex);\r\n      }\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isPlayerDone(player: Player): boolean {\r\n    let done = true;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      done = done && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    });\r\n    return done;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Ultimate Cricket'\" [playground]=\"playground\"\r\n                [rules]=\"'The objective shall be to \\'own\\' or \\'close\\' certain numbers on the board, and to achieve ' +\r\n                'the highest point score. The player or team to do so first, shall be the winner.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize()\">Random</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\"\r\n            (click)=\"settings.setStyle(2)\">Cut-Throat\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\"\r\n            (click)=\"settings.setStyle(4)\">Black Out\r\n    </button>\r\n<!--    <button mat-raised-button class=\"button shortmedium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">-->\r\n<!--      Victory First-->\r\n<!--    </button>-->\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div\r\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\r\n                *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class Settings {\r\n\r\n  fields: number[] = [14, 15, 16, 17, 18, 19, 20];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 7; i++) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.numbs[this.numbs.length - 1] = true;\r\n    this.initFields();\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  left() {\r\n    this.setAllowedField([12, 9, 14, 11, 8, 16, 7, 5, 19, 21]);\r\n  }\r\n\r\n  right() {\r\n    this.setAllowedField([1, 18, 4, 13, 6, 10, 15, 2, 17, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  prime() {\r\n    this.setAllowedField([2, 3, 5, 7, 11, 13, 17, 19]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  private setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.fieldCount, fieldIndex).value;\r\n  }\r\n\r\n  setFieldCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getPunishCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.punishCount, fieldIndex).value;\r\n  }\r\n\r\n  setPunishCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.punishCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state = new CricketState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './fives.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class FivesComponent extends Playground<PlaygroundState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.limit);\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.game.actualThrow === 3) {\r\n      let sum = 0;\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        sum += t.score * t.multi;\r\n      }\r\n      if (sum % this.settings.divider === 0) {\r\n        player.score -= (sum / this.settings.divider);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score <= 0));\r\n    if (this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Fives'\" [playground]=\"playground\"\r\n                [rules]=\"'The idea of the game to throw three darts into the board, in turn, to score a number that ' +\r\n                 'is divisible by five. The higher the number you score, the more points you can score. For every five ' +\r\n                  'scored, one point is awarded. E.g. if a player scores fifteen then he or she gains three points.'\">\r\n\r\n    <h2>Divider</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.divider === divider?'primary':''\"\r\n            *ngFor=\"let divider of settings.getSelectableDividers()\"\r\n            (click)=\"settings.setDivider(divider)\">{{divider}}</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Limit</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.limit === limit?'primary':''\"\r\n            *ngFor=\"let limit of settings.getSelectableLimits()\"\r\n            (click)=\"settings.setLimit(limit)\">{{limit}}</button>\r\n    <mat-divider></mat-divider>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FivesComponent} from './fives.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: FivesComponent}\r\n    ])\r\n  ],\r\n  declarations: [FivesComponent]\r\n})\r\nexport class FivesModule {\r\n}\r\n","export class Settings {\r\n  divider: number;\r\n  limit: number;\r\n\r\n  constructor() {\r\n    this.divider = 5;\r\n    this.limit = 30;\r\n  }\r\n\r\n  getSelectableDividers(): number[] {\r\n    return [3, 4, 5, 6, 7, 8, 10];\r\n  }\r\n\r\n  getSelectableLimits(): number[] {\r\n    return [30, 50, 100];\r\n  }\r\n\r\n  setDivider(value: number) {\r\n    this.divider = value;\r\n  }\r\n\r\n  setLimit(value: number) {\r\n    this.limit = value;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Settings} from './models/settings.model';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {HareAndHoundState} from './models/state.model';\r\n\r\n@Component({\r\n  templateUrl: './hare-and-hound.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class HareAndHoundComponent extends Playground<HareAndHoundState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService, 2, 2);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isFieldEnabled(fieldIndex, state.actFieldIndex)) {\r\n      state.increaseActFieldIndex(this.multiplier);\r\n      if (state.actFieldIndex >= (FIELDS_COUNT - 1)) {\r\n        state.actFieldIndex = state.actFieldIndex - (FIELDS_COUNT - 1);\r\n      }\r\n      player.score -= this.multiplier;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    player.setWin((this.isHare() && player.score <= 0) ||\r\n      (!this.isHare() &&\r\n        (player.score + this.settings.getHareStartIndex()) <= this.game.players.find(p => this.isHare(p)).score));\r\n\r\n    if (!player.win && this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number, actFieldIndex?: number): boolean {\r\n    if (!actFieldIndex) {\r\n      actFieldIndex = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\r\n    }\r\n    return fieldIndex === this.getFieldIndex(actFieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    if (!this.isFieldEnabled(fieldIndex)) {\r\n      return this.game.players.some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players\r\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex)\r\n      .map(p => p.name);\r\n    return !!owners.length ? owners.join(' ') : '';\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (!this.isPrimaryField(fieldIndex) && !this.isSecondaryField(fieldIndex)) {\r\n      return '';\r\n    }\r\n    return (this.isHare() && this.isPrimaryField(fieldIndex) || (this.isSecondaryField(fieldIndex) && !this.isHare())) ? 'favorite' : 'directions_run';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach((player, index) => {\r\n      player.score = FIELDS_COUNT - 1;\r\n      if (index === 0) {\r\n        player.state = new HareAndHoundState(this.settings.getHareStartIndex());\r\n      } else {\r\n        player.state = new HareAndHoundState(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  private getFieldIndex(index: number) {\r\n    return this.settings.getFields()[index];\r\n  }\r\n\r\n  private isHare(player?: Player) {\r\n    if (!player) {\r\n      player = this.game.getActualPlayer();\r\n    }\r\n    return this.game.players.map(p => p.id).indexOf(player.id) === 0;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Hare and Hound'\" [playground]=\"playground\"\r\n                [rules]=\"'The frist player is the hare, and his opponent is the hound in pursuit. The hare must travel ' +\r\n                 'clockwise around the board starting at 20. The hare wins by returning to 20 before the hound catches ' +\r\n                  'up with him. The hound usually starts from either 12 or 5, depending on the preference of the ' +\r\n                   'players. The hound wins by overtaking the hare.'\">\r\n\r\n    <h2>Hound start position</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"(settings.houndStartIndex+1) === start?'primary':''\"\r\n            *ngFor=\"let start of settings.getSelectableHoundStart()\"\r\n            (click)=\"settings.setHoundStart(start - 1)\">{{start}}</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {HareAndHoundComponent} from './hare-and-hound.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: HareAndHoundComponent}\r\n    ])\r\n  ],\r\n  declarations: [HareAndHoundComponent]\r\n})\r\nexport class HareAndHoundModule {\r\n}\r\n","export class Settings {\r\n  houndStartIndex: number;\r\n  hareStartIndex: number;\r\n\r\n  constructor() {\r\n    this.houndStartIndex = 11;\r\n    this.hareStartIndex = 19;\r\n  }\r\n\r\n  getSelectableHoundStart(): number[] {\r\n    return [14, 9, 12, 5, 20];\r\n  }\r\n\r\n  setHoundStart(value: number) {\r\n    this.houndStartIndex = value;\r\n  }\r\n\r\n  getFields(): number[] {\r\n    const index = this.getBaseFields().indexOf(this.houndStartIndex);\r\n    return [...this.getBaseFields().slice(index), ...this.getBaseFields().slice(0, index)];\r\n  }\r\n\r\n  getHareStartIndex(): number {\r\n    return this.getFields().indexOf(this.hareStartIndex);\r\n  }\r\n\r\n  private getBaseFields(): number[] {\r\n    return [19, 0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4];\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class HareAndHoundState extends PlaygroundState {\r\n\r\n  constructor(public actFieldIndex: number) {\r\n    super();\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): HareAndHoundState {\r\n    return new HareAndHoundState(this.actFieldIndex);\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {KillerState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\nconst DANGER_ZONE_ICON = 'sentiment_very_dissatisfied';\r\n\r\n@Component({\r\n  templateUrl: './killer.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KillerComponent extends Playground<KillerState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService, 2);\r\n    this.settings = new Settings();\r\n    this.nextEnabled = false;\r\n    this.zeroEnabled = false;\r\n    this.multiEnabled = false;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state: KillerState = this.getPlayerState(player);\r\n    if (this.game.round === 0) {\r\n      state.actField = fieldIndex;\r\n      player.score = score;\r\n      if (this.game.isActualPlayerTheLast()) {\r\n        this.nextEnabled = true;\r\n        this.zeroEnabled = true;\r\n        this.multiEnabled = true;\r\n      }\r\n    } else {\r\n      if (state.killer) {\r\n        if (this.settings.suicide && fieldIndex === state.actField && this.multiplier > 1) {\r\n          state.life = 0;\r\n          this.extraEndingMsg = 'SUICIDE!!!';\r\n        } else if (fieldIndex === state.actField) {\r\n          state.life = Number(state.life) + Number(this.multiplier);\r\n          if (state.life > this.settings.numberOfLives) {\r\n            state.life = this.settings.numberOfLives;\r\n          }\r\n        } else {\r\n          this.game.players.filter(p => p.id !== player.id && !this.getPlayerState(p).isInactive()).forEach(p => {\r\n            const s = this.getPlayerState(p);\r\n            if (fieldIndex === s.actField) {\r\n              s.life -= this.multiplier;\r\n              if (s.life < 0) {\r\n                s.life = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (fieldIndex === state.actField) {\r\n        state.boarding -= this.multiplier;\r\n        if (state.boarding <= 0) {\r\n          state.boarding = 0;\r\n        }\r\n        state.killer = state.boarding === 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.round !== 0) {\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p).isInactive());\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !this.getPlayerState(p).isInactive()));\r\n    }\r\n    if (this.game.round === 0 || this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return fieldIndex !== 20 && !this.getAllEnabledFields().some(f => f === fieldIndex);\r\n    }\r\n    return this.getAllEnabledFields().some(f => f === fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return this.isFieldEnabled(fieldIndex);\r\n    }\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return this.isFieldEnabled(fieldIndex) && !this.isSecondaryField(fieldIndex);\r\n    }\r\n    return state.actField === fieldIndex;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return state.actField === fieldIndex;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return !state.isInactive() && state.life <= 3 && state.actField === fieldIndex;\r\n    })) {\r\n      return DANGER_ZONE_ICON;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owner = this.game.players.find(p => (p.state as KillerState).actField === fieldIndex);\r\n    return owner ? `${owner.name}(${(owner.state as KillerState).life})` : '';\r\n  }\r\n\r\n  getPlayerField(player: Player): string {\r\n    const fieldIndex = this.getPlayerState(player).actField;\r\n    return fieldIndex === 20 ? 'B' : (fieldIndex + 1) + '';\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return this.getPlayerState(player).isInactive();\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player =>\r\n      player.state = new KillerState(this.settings.numberOfLives, this.settings.boardingLimit));\r\n  }\r\n\r\n  customNext() {\r\n    while (this.getPlayerState(this.game.getActualPlayer()).isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\r\n  }\r\n\r\n  private getAllEnabledFields(): number[] {\r\n    return this.game.players.filter(p => !this.getPlayerState(p).isInactive())\r\n      .map(p => this.getPlayerState(p).actField);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Killer'\" [playground]=\"playground\"\r\n                [rules]=\"'Firstly each player draws lots i.e. a number between 1 - 20. Each player is then given ' +\r\n                 'between 3 & 5 lives. The objective of this game is for each thrower to first hit their own number ' +\r\n                  'three times to gain status of KILLER. Once they have achieved this they then can throw for their ' +\r\n                  'opponents number in any order they wish. Every time a KILLER status player hits an opponents ' +\r\n                  'number the opponent loses a life. KILLERS can also commit SUICIDE by hitting their own number\\'s ' +\r\n                  'triple. The winner of this game is the player that remains alive.'\">\r\n\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.suicide?'primary':''\"\r\n            (click)=\"settings.toggleSuicide()\">Suicide</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [highlighted]=\"getPlayerState(player).killer\">\r\n          <ng-container *ngIf=\"getPlayerField(player) !== '0'\">\r\n            <div class=\"score\"><label>Field: </label>{{getPlayerField(player)}}</div>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"score\">\r\n              <label>Life: </label>{{getPlayerState(player).life}}\r\n              <ng-container *ngIf=\"!getPlayerState(player).killer\"><label>Boarding: </label>{{getPlayerState(player).boarding}}</ng-container>\r\n            </div>\r\n          </ng-container>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class Settings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n  suicide: boolean;\r\n\r\n  constructor() {\r\n    this.suicide = false;\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n\r\n  toggleSuicide() {\r\n    this.suicide = !this.suicide;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(public life = 5, public boarding = 3) {\r\n    super();\r\n    this.actField = -1;\r\n    this.killer = false;\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state = new KillerState();\r\n    state.actField = this.actField;\r\n    state.life = this.life;\r\n    state.boarding = this.boarding;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({position: 'relative'}),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({left: '-100%'})\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({left: '100%'}))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({left: '0%'}))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild(), {optional: true}),\r\n    ]),\r\n  ]);\r\n","export class Settings {\r\n\r\n  fields: number[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: number): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: number): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: number, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state = new ShanghaiState();\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {ShanghaiState} from './models/state.model';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './shanghai.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ShanghaiComponent extends Playground<ShanghaiState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isActiveField(fieldIndex)) {\r\n      state.increaseFieldCount(fieldIndex, 1);\r\n      state.increaseFieldScore(fieldIndex, this.multiplier);\r\n      if (this.settings.noScore) {\r\n        player.score += this.multiplier;\r\n      } else {\r\n        player.score += score * this.multiplier;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    // Shanghai rule\r\n    if (this.game.actualThrow === 3) {\r\n      let multi = 1;\r\n      const fieldIndex = this.settings.fields[this.game.round];\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        if (t.score === Playground.getFieldValueFromIndex(fieldIndex)) {\r\n          multi *= (t.multi + 1);\r\n        }\r\n      }\r\n      if (multi === 1 && this.settings.halveIt) {\r\n        player.score = Math.round(player.score / 2);\r\n      }\r\n      player.setWin(multi === 24);\r\n      if (player.win) {\r\n        this.extraEndingMsg = 'SHANGHAI!!!';\r\n      }\r\n    }\r\n\r\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\r\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\r\n    if (gameEnded) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    } else if (this.game.actualThrow === 3) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n    if (fieldCount === 0) {\r\n      return '○○○';\r\n    } else {\r\n      let str = '' + this.getPlayerState(player).getFieldScore(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      for (let i = 0; i < fieldCount; i++) {\r\n        str += '●';\r\n      }\r\n      for (let i = fieldCount; i < 3; i++) {\r\n        str += '○';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ShanghaiState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  isActiveField(fieldIndex: number): boolean {\r\n    return this.settings.fields[this.game.round] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) < this.game.round;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) === this.game.round;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    let max = winners[0].score;\r\n    winners.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\r\n    const losers  = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\r\n      const c = p.clone();\r\n      c.win = false;\r\n      return c;\r\n    });\r\n    return [...winners, ...losers];\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Shanghai / Halve It'\" [playground]=\"playground\"\r\n                [rules]=\"' Players start by throwing at the number 1 on the board. The object is to hit a single,' +\r\n                 'treble and double (in any order). This first player to hit a single, treble and double wins. If no' +\r\n                  'player achieves this on number 1, the play moves to number 2 and so on until someone wins.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.numbs[i]?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-raised-button class=\"button big capitalize\" (click)=\"settings.randomize()\">Randomize</button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.noScore?'primary':''\"\r\n            (click)=\"settings.toggleNoScore()\">No score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.halveIt?'primary':''\"\r\n            (click)=\"settings.toggleHalveIt()\">Halve It\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isFieldDoneForPlayer(field) ? '' : 'highlighted'}}\"\r\n                 *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container evo-typography\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content || !!data.players.length\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-button [mat-dialog-close]=\"true\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: Playground<PlaygroundState>;\r\n\r\n  constructor(public route: Router) {\r\n  }\r\n\r\n  quit() {\r\n    this.route.navigate(['/']);\r\n    this.playground.game.resetScore();\r\n    this.playground.multiplier = 1;\r\n    this.playground.extraEndingMsg = '';\r\n  }\r\n\r\n  showSettings() {\r\n    this.playground.reset();\r\n    this.playground.settingsOpen = true;\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <div class=\"buttons\">\r\n    <button mat-raised-button (click)=\"quit()\">\r\n      <mat-icon>menu</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.newGame(true)\">\r\n      <mat-icon>refresh</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"showSettings()\">\r\n      <mat-icon>build</mat-icon>\r\n    </button>\r\n    <button mat-raised-button (click)=\"playground.undo()\">\r\n      <mat-icon>undo</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div class=\"round-info\">{{playground.game.round+1}}.</div>\r\n</div>\r\n<div class=\"clear\"></div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isPrimaryField(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondaryField(fieldIndex)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabled(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  throwNumber(fieldIndex: number) {\r\n    this.playground.throwNumber(this.playground.isFieldEnabled(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\">\r\n\r\n  <button mat-raised-button *ngFor=\"let i of getNumbers()\" class=\"number\" [color]=\"getNumberColor(i-1)\"\r\n          [disabled]=\"isNumberDisabled(i-1)\" (click)=\"throwNumber(i-1)\">\r\n    {{i}}\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(i-1)\">{{ playground.getFieldIcon(i-1)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(i-1)\">{{ playground.getFieldNote(i-1)}}</p>\r\n  </button>\r\n  <button mat-raised-button class=\"number\" [color]=\"getNumberColor(20)\" [disabled]=\"isNumberDisabled(20)\"\r\n          (click)=\"throwNumber(20)\">\r\n    Bull\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(20)\">{{ playground.getFieldIcon(20)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(20)\">{{ playground.getFieldNote(20)}}</p>\r\n  </button>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 2 ? 'primary' : ''\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">Double</button>\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 3 ? 'primary' : ''\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">Triple</button>\r\n\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.throwNumber(0)\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  selector: 'app-player-score',\r\n  templateUrl: './player-score.component.html',\r\n  styleUrls: ['./player-score.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PlayerScoreComponent {\r\n  @Input() player: Player;\r\n  @Input() hasContent = true;\r\n  @Input() scoreDisplayed = true;\r\n  @Input() highlighted = false;\r\n}\r\n","<div class=\"player_info\">\r\n  <div class=\"name\"><mat-icon *ngIf=\"highlighted\">offline_bolt</mat-icon>{{player.name}}</div>\r\n  <div class=\"shoots\">\r\n    <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\r\n    <div class=\"shoot total\">{{!player.getThrowsTotal() ? '0' : player.getThrowsTotal()}}</div>\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n  <div class=\"line\" *ngIf=\"hasContent\"></div>\r\n  <ng-content></ng-content>\r\n  <div class=\"line\" *ngIf=\"scoreDisplayed\"></div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed\">{{player.score}}</div>\r\n  <div class=\"clear\"></div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'app-player-settings',\r\n  templateUrl: './player-settings.component.html',\r\n  styleUrls: ['./player-settings.component.scss']\r\n})\r\nexport class PlayerSettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  storedPlayers = [];\r\n\r\n  constructor(private application: ApplicationStateService) {\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  getOptions() {\r\n    return this.storedPlayers.filter(o => this.playground.game.players\r\n      .map(p => p.name).indexOf(o) === -1);\r\n  }\r\n\r\n  addPlayer(playerNameInput: any) {\r\n    this.playground.addPlayer(playerNameInput);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  playerSelected(event: MatAutocompleteSelectedEvent, playerNameInput: HTMLInputElement) {\r\n    this.playground.addPlayer(event.option);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n    playerNameInput.value = '';\r\n    playerNameInput.blur();\r\n  }\r\n}\r\n","<div class=\"add-player\">\r\n  <mat-form-field appearance=\"outline\" class=\"big\">\r\n    <mat-label>Player name</mat-label>\r\n    <input #playerNameInput type=\"text\" matInput placeholder=\"Enter name\"\r\n      [disabled]=\"!playground.canAddPlayer()\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"playerSelected($event, playerNameInput)\">\r\n      <mat-option *ngFor=\"let option of getOptions()\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button mat-icon-button (click)=\"addPlayer(playerNameInput)\" [disabled]=\"!playground.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button>\r\n</div>\r\n<div class=\"player-table\">\r\n  <div class=\"player-row\" *ngFor=\"let player of playground.game.players; let i = index\">\r\n    <div class=\"player-name\">{{player.name}}</div>\r\n    <button mat-icon-button (click)=\"playground.removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\r\n  </div>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() title: string;\r\n  @Input() rules: string;\r\n}\r\n","<div class=\"settings\">\r\n  <h1>{{title}} Settings</h1>\r\n\r\n  <div id=\"rules\" *ngIf=\"rules\">\r\n    <details>\r\n      <summary>Click here for rules</summary>\r\n      <p>{{rules}}</p>\r\n    </details>\r\n  </div>\r\n\r\n  <h2>Players</h2>\r\n  <app-player-settings [playground]=\"playground\"></app-player-settings>\r\n  <mat-divider></mat-divider>\r\n\r\n  <ng-content></ng-content>\r\n\r\n  <mat-divider></mat-divider>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.newGame()\">Start</button>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.quit()\">Cancel</button>\r\n</div>\r\n","export class ApplicationSettings {\r\n  darkTheme = false;\r\n}\r\n","export class FieldValue {\n  field: number;\n  value: number;\n\n  constructor(field: number, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","import {Throw} from './throw.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class Player {\r\n  score = 0;\r\n  throws: number[] = [];\r\n  throwsHistory: Throw[];\r\n  win = false;\r\n  winDateTime = 0;\r\n  first = true;\r\n  state: PlaygroundState;\r\n\r\n  constructor(public id: number, public name = '') {\r\n  }\r\n\r\n  setWin(win = true) {\r\n    this.win = win;\r\n    this.winDateTime = win ? new Date().getTime() : 0;\r\n  }\r\n\r\n  getThrowsTotal(): number {\r\n    return this.throws.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  addThrowHistory(thr: Throw) {\r\n    this.throwsHistory.push(thr);\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n    this.throws = [];\r\n    this.throwsHistory = [];\r\n    this.win = false;\r\n    this.winDateTime = 0;\r\n    this.first = true;\r\n  }\r\n\r\n  clone(): Player {\r\n    const player = new Player(this.id, this.name);\r\n    player.score = this.score;\r\n    player.throws = [];\r\n    this.throws.forEach(t => {\r\n      player.throws.push(t);\r\n    });\r\n    player.throwsHistory = this.throwsHistory;\r\n    player.win = this.win;\r\n    player.winDateTime = this.winDateTime;\r\n    player.first = this.first;\r\n    player.throwsHistory = [];\r\n    this.throwsHistory.forEach(throws => {\r\n      player.throwsHistory.push(throws.clone());\r\n    });\r\n    if (this.state) {\r\n      player.state = this.state.clone();\r\n    }\r\n    return player;\r\n  }\r\n}\r\n","import {FieldValue} from './field-value.model';\r\n\r\nexport abstract class PlaygroundState {\r\n\r\n  getFieldValue(list: FieldValue[], fieldIndex: number): FieldValue {\r\n    const filtered = list.filter(f => f.field === fieldIndex);\r\n    if (filtered.length === 0) {\r\n      list.push(new FieldValue(fieldIndex, 0));\r\n    }\r\n    return list.filter(f => f.field === fieldIndex)[0];\r\n  }\r\n\r\n  abstract clone(): PlaygroundState;\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {GameService} from '../services/game.service';\r\nimport {Player} from './player.model';\r\nimport {Throw} from './throw.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\nexport const FIELDS_COUNT = 21;\r\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\r\n\r\nexport abstract class Playground<T extends PlaygroundState> implements OnInit {\r\n\r\n  throwEnabled = true;\r\n  settingsOpen = true;\r\n  gameHistory: GameService[];\r\n  nextEnabled = true;\r\n  zeroEnabled = true;\r\n  multiEnabled = true;\r\n  playground = this;\r\n  multiplier: number;\r\n  extraEndingMsg: string;\r\n\r\n  protected constructor(public application: ApplicationStateService,\r\n                        public game: GameService,\r\n                        public route: Router,\r\n                        public dialogService: DialogService,\r\n                        public minimumNumberOfPlayers = 1,\r\n                        public maximumNumberOfPlayers?: number) {\r\n  }\r\n\r\n  static getFieldValueFromIndex(fieldIndex: number): number {\r\n    return fieldIndex === 20 ? 25 : fieldIndex + 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.settingsOpen = true;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  throwNumber(score: number) {\r\n    if (this.throwEnabled) {\r\n      this.saveGameInHistory();\r\n      this.throwEnabled = false;\r\n      if (score === 25 && this.multiplier === 3) {\r\n        this.multiplier = 1;\r\n      }\r\n\r\n      const actualPlayer = this.game.getActualPlayer();\r\n      const fieldIndex = score === 25 ? 20 : score - 1;\r\n\r\n      actualPlayer.addThrowHistory(new Throw(score, this.multiplier, this.game.actualThrow));\r\n      if (this.game.actualThrow === 0) {\r\n        actualPlayer.throws = [];\r\n      }\r\n      actualPlayer.throws[this.game.actualThrow] = score * this.multiplier;\r\n      this.game.actualThrow++;\r\n\r\n      this.calculatePoints(actualPlayer, fieldIndex, score);\r\n      this.checkPlayerState(actualPlayer);\r\n\r\n      this.multiplier = 1;\r\n      const winners = this.game.players.filter(p => p.win);\r\n      if (winners.length > 0) {\r\n        if (this.game.victoryFirst || this.game.players.length - winners.length <= 1) {\r\n          this.dialogService.openDialog('Game Over!', this.extraEndingMsg, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else if (this.game.victoryFirst) {\r\n          this.dialogService.openDialog('Game Over!', this.extraEndingMsg, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else {\r\n          while (this.game.getActualPlayer().win) {\r\n            this.game.nextPlayer();\r\n          }\r\n        }\r\n      }\r\n      this.throwEnabled = true;\r\n    }\r\n  }\r\n\r\n  getPlayerState(player: Player): T {\r\n    return player.state as T;\r\n  }\r\n\r\n  canAddPlayer(): boolean {\r\n    return this.game.players.length < MAXIMUM_NUMBER_OF_PLAYERS;\r\n  }\r\n\r\n  addPlayer(name: any) {\r\n    if (!!name.value.trim().length && !this.game.players.some(p => p.name === name.value)) {\r\n      this.game.players.push(new Player(uuid(), name.value));\r\n      this.application.storePlayer(name.value);\r\n    }\r\n    name.value = '';\r\n  }\r\n\r\n  removePlayer(player: Player) {\r\n    this.game.players = this.game.players.filter(p => p !== player);\r\n  }\r\n\r\n  newGame(rotate = false) {\r\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\r\n    if (!this.playerSettingsValidation()) {\r\n      this.dialogService.openErrorDialog('Error!', 'Number of players are incorrect.');\r\n    } else if (this.settingsOpen) {\r\n      this.dialogService.openErrorDialog('Error!', 'Settings is incorrect.');\r\n    }\r\n    if (rotate) {\r\n      this.game.rotatePlayers();\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  triplePoint() {\r\n    this.multiplier = this.multiplier === 3 ? 1 : 3;\r\n  }\r\n\r\n  doublePoint() {\r\n    this.multiplier = this.multiplier === 2 ? 1 : 2;\r\n  }\r\n\r\n  undo() {\r\n    if (this.gameHistory.length > 0) {\r\n      this.game = this.gameHistory.pop();\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    const actThrow = this.game.actualThrow;\r\n    this.throwNumber(0);\r\n    if (actThrow !== 2) {\r\n      this.skip();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.gameHistory = [];\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n    this.customReset();\r\n  }\r\n\r\n  quit() {\r\n    this.reset();\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  customNext() {\r\n    return;\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    winners = winners.sort((p1, p2) => p1.winDateTime < p2.winDateTime ? -1 : 1)\r\n      .slice(0, 1).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id))\r\n      .map(p => {\r\n        const c = p.clone();\r\n        c.win = false;\r\n        return c;\r\n      });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  private playerSettingsValidation(): boolean {\r\n    const players: Player[] = [];\r\n    this.game.players.forEach(player => {\r\n      if (player.name.length !== 0) {\r\n        players.push(player);\r\n      }\r\n    });\r\n    this.game.players = players;\r\n    return players.length >= this.minimumNumberOfPlayers &&\r\n      (!this.maximumNumberOfPlayers || players.length <= this.maximumNumberOfPlayers);\r\n  }\r\n\r\n  private saveGameInHistory() {\r\n    this.gameHistory.push(this.game.clone());\r\n  }\r\n\r\n  abstract customReset(): void;\r\n\r\n  abstract calculatePoints(player: Player, fieldIndex: number, score: number);\r\n\r\n  abstract checkPlayerState(player: Player);\r\n}\r\n","export class Throw {\n  field: string;\n\n  constructor(public score: number, public multi: number, public order: number) {\n    this.field = this.score === 25 ? 'B' :  this.score + '';\n  }\n\n  clone(): Throw {\n    return new Throw(this.score, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {ApplicationSettings} from '~models/application-settings.model';\r\n\r\nconst APPLICATION_KEY = 'ApplicationSettings';\r\nconst PLAYER_KEY = 'Players';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApplicationStateService {\r\n\r\n  settings = new ApplicationSettings();\r\n\r\n  constructor() {\r\n    const data = localStorage.getItem(APPLICATION_KEY);\r\n    if (data) {\r\n      this.settings = JSON.parse(data);\r\n    }\r\n    this.setTheme();\r\n  }\r\n\r\n  toggleDarkTheme() {\r\n    this.settings.darkTheme = !this.settings.darkTheme;\r\n    this.setTheme();\r\n    this.saveSettings();\r\n  }\r\n\r\n  getStoredPlayers(): string[] {\r\n    const data = localStorage.getItem(PLAYER_KEY);\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  storePlayer(name: string) {\r\n    const players = [name, ...this.getStoredPlayers()].filter((v, i, a) => a.indexOf(v) === i);\r\n    localStorage.setItem(PLAYER_KEY, JSON.stringify(players));\r\n  }\r\n\r\n  private setTheme() {\r\n    if (this.settings.darkTheme) {\r\n      document.body.classList.add('dark-theme');\r\n    } else {\r\n      document.body.className = document.body.className.replace('dark-theme', '');\r\n    }\r\n  }\r\n\r\n  private saveSettings() {\r\n    localStorage.setItem(APPLICATION_KEY, JSON.stringify(this.settings));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n\r\n  openErrorDialog(title = '', content = ''): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'error-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Player} from '../models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GameService {\r\n  players: Player[] = [];\r\n  actualPlayerIndex: number;\r\n  actualThrow: number;\r\n  round: number;\r\n  victoryFirst = true;\r\n\r\n  toggleVictoryFirst() {\r\n    this.victoryFirst = !this.victoryFirst;\r\n  }\r\n\r\n  isTheFirstThrow(): boolean {\r\n    return this.actualThrow === 1;\r\n  }\r\n\r\n  isTheLastThrow(): boolean {\r\n    return this.actualThrow === 3;\r\n  }\r\n\r\n  getActualPlayer(): Player {\r\n    return this.players[this.actualPlayerIndex];\r\n  }\r\n\r\n  nextPlayer(): void {\r\n    if (this.isActualPlayerTheLast()) {\r\n      this.nextRound();\r\n    }\r\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\r\n    this.actualThrow = 0;\r\n  }\r\n\r\n  getNumberOfPlayers(): number {\r\n    return this.players.length;\r\n  }\r\n\r\n  getTheFirstPlayer(): Player {\r\n    return this.players[0];\r\n  }\r\n\r\n  isTheFirstPlayer(player: Player): boolean {\r\n    return player.id === this.getTheFirstPlayer().id;\r\n  }\r\n\r\n  isActualPlayerIsTheFirst(): boolean {\r\n    return this.isTheFirstPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheLastPlayer(): Player {\r\n    return this.players[this.getNumberOfPlayers() - 1];\r\n  }\r\n\r\n  isTheLastPlayer(player: Player): boolean {\r\n    return player.id === this.getTheLastPlayer().id;\r\n  }\r\n\r\n  isActualPlayerTheLast(): boolean {\r\n    return this.isTheLastPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  isTheBestPlayer(actPlayer: Player): boolean {\r\n    let max = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      max = player.score > max ? player.score : max;\r\n    });\r\n    return actPlayer.score === max;\r\n    // let bestPlayer = true;\r\n    // this.players.filter(p => !p.win).forEach(player => {\r\n    //   bestPlayer = bestPlayer && actPlayer.score >= player.score;\r\n    // });\r\n    // return bestPlayer;\r\n  }\r\n\r\n  isTheWorstPlayer(actPlayer: Player): boolean {\r\n    let min = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      min = player.score < min ? player.score : min;\r\n    });\r\n    return actPlayer.score === min;\r\n    // let lastPlayer = true;\r\n    // this.players.filter(p => !p.win).forEach(player => {\r\n    //   lastPlayer = lastPlayer && actPlayer.score <= player.score;\r\n    // });\r\n    // return lastPlayer;\r\n  }\r\n\r\n  nextRound(): void {\r\n    this.round++;\r\n  }\r\n\r\n  resetScore(): void {\r\n    this.players.forEach(player => player.reset());\r\n    this.actualPlayerIndex = 0;\r\n    this.actualThrow = 0;\r\n    this.round = 0;\r\n  }\r\n\r\n  rotatePlayers(): void {\r\n    this.players.push(this.players.shift());\r\n  }\r\n\r\n  clone(): GameService {\r\n    const game = new GameService();\r\n    game.actualPlayerIndex = this.actualPlayerIndex;\r\n    game.actualThrow = this.actualThrow;\r\n    game.round = this.round;\r\n    const players: Player[] = [];\r\n    this.players.forEach(player => {\r\n      players.push(player.clone());\r\n    });\r\n    game.players = players;\r\n    return game;\r\n  }\r\n\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {FormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {MaterialModule} from '../material.module';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\r\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\r\nimport {PlayerSettingsComponent} from '~components/player-settings/player-settings.component';\r\nimport {SettingsComponent} from '~components/settings/settings.component';\r\nimport {PlayerScoreComponent} from '~components/player-score/player-score.component';\r\n\r\nconst components = [NumberPlateComponent, GameToolbarComponent,\r\n  DialogComponent, PlayerSettingsComponent, SettingsComponent, PlayerScoreComponent];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, MaterialModule],\r\n  declarations: components,\r\n  exports: [CommonModule, FormsModule, MaterialModule, ...components],\r\n  entryComponents: [DialogComponent]\r\n})\r\nexport class SharedModule {\r\n}\r\n","export class Settings {\r\n\r\n  startValue = 301;\r\n  start = 1;\r\n  checkout = 1;\r\n\r\n  isNormalStart(): boolean {\r\n    return this.start === 1;\r\n  }\r\n\r\n  isDoubleStart(): boolean {\r\n    return this.start === 2;\r\n  }\r\n\r\n  isTripleStart(): boolean {\r\n    return this.start === 3;\r\n  }\r\n\r\n  isNormalCheckout(): boolean {\r\n    return this.checkout === 1;\r\n  }\r\n\r\n  isDoubleCheckout(): boolean {\r\n    return this.checkout === 2;\r\n  }\r\n\r\n  isTripleCheckout(): boolean {\r\n    return this.checkout === 3;\r\n  }\r\n\r\n  isHighScoreGame(): boolean {\r\n    return this.checkout === 4;\r\n  }\r\n\r\n  setStart(start: number) {\r\n    this.start = start;\r\n  }\r\n\r\n  setCheckout(checkout: number) {\r\n    this.checkout = checkout;\r\n  }\r\n\r\n  setStartValue(startValue: number) {\r\n    this.startValue = startValue;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Settings} from './models/settings.model';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './x01.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class X01Component extends Playground<PlaygroundState> {\r\n\r\n  settings: Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router, dialogService: DialogService) {\r\n    super(application, game, route, dialogService);\r\n    this.settings = new Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const validStart = !player.first || this.settings.isNormalStart()\r\n      || (player.first\r\n        && ((this.settings.isDoubleStart() && this.multiplier === 2)\r\n          || (this.settings.isTripleStart() && this.multiplier === 3)));\r\n    if (validStart) {\r\n      const actualScore = score * this.multiplier;\r\n      player.first = false;\r\n      player.score -= actualScore;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    let next = false;\r\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\r\n      ((player.score === 0 && (this.settings.isNormalCheckout()\r\n        || (this.settings.isDoubleCheckout() && this.multiplier === 2)\r\n        || (this.settings.isTripleCheckout() && this.multiplier === 3))))) {\r\n      player.setWin();\r\n      next = true;\r\n    } else if (player.score <= 0\r\n      || (this.settings.isDoubleCheckout() && player.score < 2)\r\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\r\n      player.throws.forEach(t => player.score += t);\r\n      next = true;\r\n      this.dialogService.openErrorDialog(`${this.game.getActualPlayer().name} busted!`);\r\n    }\r\n    if (this.game.actualThrow === 3 || next) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.startValue);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'X01'\" [playground]=\"playground\"\r\n                [rules]=\"'All players start with 301/501 points and attempt to reach zero. If a player scores more ' +\r\n                 'than the total required to reach zero, the player “busts” and the score returns to the score that ' +\r\n                  'was existing at the start of the turn.'\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===101?'primary':''\"\r\n            (click)=\"settings.setStartValue(101)\">101\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===201?'primary':''\"\r\n            (click)=\"settings.setStartValue(201)\">201\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===301?'primary':''\"\r\n            (click)=\"settings.setStartValue(301)\">301\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===501?'primary':''\"\r\n            (click)=\"settings.setStartValue(501)\">501\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===701?'primary':''\"\r\n            (click)=\"settings.setStartValue(701)\">701\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===901?'primary':''\"\r\n            (click)=\"settings.setStartValue(901)\">901\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check In</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===1?'primary':''\"\r\n            (click)=\"settings.setStart(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===2?'primary':''\"\r\n            (click)=\"settings.setStart(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===3?'primary':''\"\r\n            (click)=\"settings.setStart(3)\">Triple\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check Out</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===1?'primary':''\"\r\n            (click)=\"settings.setCheckout(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===2?'primary':''\"\r\n            (click)=\"settings.setCheckout(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===3?'primary':''\"\r\n            (click)=\"settings.setCheckout(3)\">Triple\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===4?'primary':''\"\r\n            (click)=\"settings.setCheckout(4)\">None\r\n    </button>\r\n\r\n    <mat-divider></mat-divider>\r\n<!--    <button mat-raised-button class=\"button medium\" [color]=\"game.victoryFirst?'primary':''\" (click)=\"game.toggleVictoryFirst()\">-->\r\n<!--      Victory First-->\r\n<!--    </button>-->\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}