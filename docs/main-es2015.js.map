{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-game-types.ts","./src/app/app-routing.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/aroundclock/around-clock.component.ts","./src/app/aroundclock/around-clock.component.html","./src/app/aroundclock/around-clock.module.ts","./src/app/aroundclock/models/around-clock.settings.model.ts","./src/app/aroundclock/models/around-clock.state.model.ts","./src/app/capture-the-flag/capture-the-flag.component.ts","./src/app/capture-the-flag/capture-the-flag.component.html","./src/app/capture-the-flag/capture-the-flag.module.ts","./src/app/capture-the-flag/models/capture-the-flag.settings.model.ts","./src/app/capture-the-flag/models/capture-the-flag.state.model.ts","./src/app/cricket/cricket.component.ts","./src/app/cricket/cricket.component.html","./src/app/cricket/cricket.module.ts","./src/app/cricket/models/cricet.settings.model.ts","./src/app/cricket/models/cricet.state.model.ts","./src/app/duel/duel.component.ts","./src/app/duel/duel.component.html","./src/app/duel/duel.module.ts","./src/app/duel/models/duel.settings.model.ts","./src/app/duel/models/duel.state.model.ts","./src/app/fives/fives.component.ts","./src/app/fives/fives.component.html","./src/app/fives/fives.module.ts","./src/app/fives/models/fives.settings.model.ts","./src/app/hare-and-hound/hare-and-hound.component.ts","./src/app/hare-and-hound/hare-and-hound.component.html","./src/app/hare-and-hound/hare-and-hound.module.ts","./src/app/hare-and-hound/models/hare-and-hound.settings.model.ts","./src/app/hare-and-hound/models/hare-and-hound.state.model.ts","./src/app/imitator/imitator.component.ts","./src/app/imitator/imitator.component.html","./src/app/imitator/imitator.module.ts","./src/app/imitator/models/imitator.settings.model.ts","./src/app/imitator/models/imitator.state.model.ts","./src/app/killer/killer.component.ts","./src/app/killer/killer.component.html","./src/app/killer/killer.module.ts","./src/app/killer/models/killer.settings.model.ts","./src/app/killer/models/killer.state.model.ts","./src/app/knockout/knockout.component.ts","./src/app/knockout/knockout.component.html","./src/app/knockout/knockout.module.ts","./src/app/knockout/models/knockout.settings.model.ts","./src/app/knockout/models/knockout.state.model.ts","./src/app/material.module.ts","./src/app/route-animation.ts","./src/app/scam/models/scam.settings.model.ts","./src/app/scam/scam.component.ts","./src/app/scam/scam.component.html","./src/app/scam/scam.module.ts","./src/app/shanghai/models/shanghai.settings.model.ts","./src/app/shanghai/models/shanghai.state.model.ts","./src/app/shanghai/shanghai.component.ts","./src/app/shanghai/shanghai.component.html","./src/app/shanghai/shanghai.module.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.html","./src/app/shared/components/darts-table/darts-table-dialog.component.ts","./src/app/shared/components/darts-table/darts-table-dialog.component.html","./src/app/shared/components/dialog/dialog.component.ts","./src/app/shared/components/dialog/dialog.component.html","./src/app/shared/components/game-history-dialog/game-history-dialog.component.ts","./src/app/shared/components/game-history-dialog/game-history-dialog.component.html","./src/app/shared/components/game-statistics-dialog/game-statistics-dialog.component.ts","./src/app/shared/components/game-statistics-dialog/game-statistics-dialog.component.html","./src/app/shared/components/game-toolbar/game-toolbar.component.ts","./src/app/shared/components/game-toolbar/game-toolbar.component.html","./src/app/shared/components/game-type-statistics-dialog/game-type-statistics-dialog.component.ts","./src/app/shared/components/game-type-statistics-dialog/game-type-statistics-dialog.component.html","./src/app/shared/components/menu/menu.component.ts","./src/app/shared/components/menu/menu.component.html","./src/app/shared/components/number-plate/number-plate.component.ts","./src/app/shared/components/number-plate/number-plate.component.html","./src/app/shared/components/player-score/player-score.component.ts","./src/app/shared/components/player-score/player-score.component.html","./src/app/shared/components/player-settings/player-settings.component.ts","./src/app/shared/components/player-settings/player-settings.component.html","./src/app/shared/components/settings/settings.component.ts","./src/app/shared/components/settings/settings.component.html","./src/app/shared/models/application-settings.model.ts","./src/app/shared/models/field-value.model.ts","./src/app/shared/models/game-statistics.model.ts","./src/app/shared/models/player.model.ts","./src/app/shared/models/playground-state.model.ts","./src/app/shared/models/playground.model.ts","./src/app/shared/models/throw.model.ts","./src/app/shared/services/application-state.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/game.service.ts","./src/app/shared/services/sound.service.ts","./src/app/shared/services/statistics.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/shared.module.ts","./src/app/x01/models/x01.settings.model.ts","./src/app/x01/x01.component.ts","./src/app/x01/x01.component.html","./src/app/x01/x01.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import {Routes} from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01', color: '#009688', icon: 'emoji_food_beverage'}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket', color: '#0a756b', icon: 'sports_cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock', color: '#0f5851', icon: 'cached'}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai, Halve It', color: '#0f5851', icon: 'emoji_symbols'}\r\n  },\r\n  {\r\n    path: 'fives',\r\n    data: {name: 'Fives', color: '#009688', icon: 'add_box'}\r\n  },\r\n  {\r\n    path: 'hare-and-hound',\r\n    data: {name: 'Hare and Hound', color: '#0a756b', icon: 'cruelty_free'}\r\n  },\r\n  {\r\n    path: 'knockout',\r\n    data: {name: 'Knockout', color: '#009688', icon: 'sports_mma'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer', color: '#0a756b', icon: 'gps_fixed'}\r\n  },\r\n  {\r\n    path: 'capture-the-flag',\r\n    data: {name: 'Capture the Flag', color: '#0a756b', icon: 'flag'}\r\n  },\r\n  {\r\n    path: 'duel',\r\n    data: {name: 'Duel', color: '#0a756b', icon: 'emoji_events'}\r\n  },\r\n  {\r\n    path: 'imitator',\r\n    data: {name: 'Imitator', color: '#0a756b', icon: 'group'}\r\n  },\r\n  {\r\n    path: 'scam',\r\n    data: {name: 'Scam', color: '#0a756b', icon: 'group_work'}\r\n  }\r\n];\r\n","import {Routes} from '@angular/router';\nimport {MenuComponent} from './shared/components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\nimport {FivesModule} from './fives/fives.module';\nimport {HareAndHoundModule} from './hare-and-hound/hare-and-hound.module';\nimport {KnockoutModule} from './knockout/knockout.module';\nimport {CaptureTheFlagModule} from './capture-the-flag/capture-the-flag.module';\nimport {ImitatorModule} from './imitator/imitator.module';\nimport {ScamModule} from './scam/scam.module';\nimport {DuelModule} from './duel/duel.module';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: MenuComponent\n  },\n  {\n    path: 'x01',\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'fives',\n    loadChildren: () => FivesModule\n  },\n  {\n    path: 'hare-and-hound',\n    loadChildren: () => HareAndHoundModule\n  },\n  {\n    path: 'knockout',\n    loadChildren: () => KnockoutModule\n  },\n  {\n    path: 'killer',\n    loadChildren: () => KillerModule\n  },\n  {\n    path: 'capture-the-flag',\n    loadChildren: () => CaptureTheFlagModule\n  },\n  {\n    path: 'duel',\n    loadChildren: () => DuelModule\n  },\n  {\n    path: 'imitator',\n    loadChildren: () => ImitatorModule\n  },\n  {\n    path: 'scam',\n    loadChildren: () => ScamModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {AfterViewInit, Component, ElementRef, ViewChild} from '@angular/core';\nimport {slideInAnimation} from './route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {SoundService} from '~services/sound.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n\n  @ViewChild('audioElement') audioElementRef: ElementRef;\n\n  constructor(public applicationStateService: ApplicationStateService,\n              private soundService: SoundService) {\n    document.addEventListener('touchmove',  (event: any) => {\n      if (event.scale !== 1) { event.preventDefault(); }\n    }, { passive: false });\n  }\n\n  ngAfterViewInit() {\n    this.soundService.audioElement = this.audioElementRef.nativeElement;\n  }\n}\n","<audio #audioElement></audio>\r\n<div [@routeAnimations]=\"outlet && outlet.isActivated && outlet.activatedRoute\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleColorTheme()\" color=\"primary\"><mat-icon>invert_colors</mat-icon></button>\r\n  <button mat-icon-button (click)=\"applicationStateService.toggleDetails()\" [color]=\"applicationStateService.settings.details ? 'primary' : 'accent'\">\r\n    <mat-icon>search</mat-icon>\r\n  </button>\r\n</div>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {Player} from '~models/player.model';\nimport {AroundClockState} from './models/around-clock.state.model';\nimport {AroundClockSettings} from './models/around-clock.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\n\n@Component({\n  templateUrl: './around-clock.component.html',\n  animations: [slideInAnimation],\n})\nexport class AroundClockComponent extends Playground<AroundClockState> {\n\n  settings: AroundClockSettings;\n  hiddenInfo = true;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\n    super(application, game, route, dialogService, soundService, statisticsService, 'around-clock', 2);\n    this.settings = new AroundClockSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal: number) {\n    const state = this.getPlayerState(player);\n    const originalMulti = this.multiplier;\n    if (this.getFieldIndex(state.actFieldIndex) === fieldIndex) {\n      // last throw\n      if (state.actFieldIndex >= this.settings.fields.length - this.multiplier) {\n        this.multiplier = this.multiplier === 1 ? 1 : this.settings.fields.length - (state.actFieldIndex + 1);\n      }\n      state.increaseActFieldIndex(this.settings.jump ? this.multiplier : 1);\n      if (state.actFieldIndex >= this.settings.fields.length) {\n        state.actFieldIndex = this.settings.fields.length;\n      }\n    }\n    player.score++;\n\n    if ((this.settings.saboteur || this.settings.promoter) && scoreReal !== 0) {\n      const realFieldIndex = scoreReal === 25 ? 20 : scoreReal - 1;\n      this.game.players.filter(p => p.id !== player.id).forEach(otherPlayer => {\n        const otherPlayerState = this.getPlayerState(otherPlayer);\n        if (this.getFieldIndex(otherPlayerState.actFieldIndex) === realFieldIndex && score === 0) {\n          if (this.settings.saboteur) {\n            otherPlayerState.decreaseActFieldIndex(this.settings.jump ? originalMulti : 1);\n          } else {\n            otherPlayerState.increaseActFieldIndex(this.settings.jump ? originalMulti : 1);\n            if (otherPlayerState.actFieldIndex >= this.settings.fields.length) {\n              otherPlayerState.actFieldIndex = this.settings.fields.length - 1;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    const state = this.getPlayerState(player);\n    if ((this.settings.fields.length - 1) < state.actFieldIndex) {\n      player.setWin();\n    } else if (this.game.isTheLastThrow()) {\n      if (this.settings.punishment || this.settings.life !== 0) {\n        let multi = 0;\n        for (let i = 0; i < 3; i++) {\n          const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n          multi += t.score;\n        }\n        if (multi === 0) {\n          if (this.settings.punishment) {\n            state.decreaseActFieldIndex();\n          }\n          if (this.settings.life !== 0) {\n            this.soundService.no();\n            player.life--;\n          }\n        }\n      }\n      this.game.nextPlayer();\n    }\n\n    if (this.settings.firstDeath) {\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\n      if (activePlayers.length < this.game.players.length) {\n        this.getTheBestPlayers().forEach(p => p.setWin(true));\n      }\n    }\n\n    if (this.settings.life !== 0 && this.game.players.length > 1) {\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\n      if (activePlayers.length === 1) {\n        activePlayers[0].setWin(true);\n      } else if (!!activePlayers.length) {\n        while (this.game.getActualPlayer().isInactive()) {\n          this.game.nextPlayer();\n        }\n      }\n    }\n  }\n\n  getDistanceFromRandom(): string {\n    if (this.settings.style === 3) {\n      const bullPos = this.settings.fields.findIndex(f => f === 20);\n      const playerPos = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\n      const diff = bullPos - playerPos;\n      return diff >= 0 ? diff + '' : '';\n    }\n    return '';\n  }\n\n  toggleHiddenInfo() {\n    this.hiddenInfo = !this.hiddenInfo;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return fieldIndex === this.getFieldIndex(this.getPlayerState(this.game.getActualPlayer()).actFieldIndex);\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return this.isFieldEnabled(fieldIndex);\n  }\n\n  isSecondaryField(fieldIndex: number): boolean {\n    if (!this.isFieldEnabled(fieldIndex)) {\n      return this.game.players.filter(p => p !== this.game.getActualPlayer())\n        .some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\n    }\n    return false;\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const owners = this.game.players\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex).map(p => p.name);\n    return !!owners.length ? owners.join(' ') : '';\n  }\n\n  getFieldNoteBottom(fieldIndex: number): string {\n    const owners = this.game.players\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex);\n    const actualOwn = owners.some(p => p.name === this.game.getActualPlayer().name);\n    if (actualOwn) {\n      const length = this.settings.fields.length - 1 - this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\n      return length + '';\n    }\n    return !actualOwn && !!owners.length && (this.settings.promoter || this.settings.saboteur) ? (this.settings.promoter ? '▲' : '▼') : '';\n  }\n\n  customReset() {\n    this.game.players.forEach(player => {\n      player.life = this.settings.life;\n      player.state = new AroundClockState();\n    });\n    this.settings.setStyle();\n  }\n\n  decoratePlayerStat(player: Player): string {\n    return player.name;\n  }\n\n  private getTheBestPlayers(): Player[] {\n    const activePlayers = this.game.players.filter(p => !p.isInactive());\n    let max = 0;\n    activePlayers.forEach(p => {\n      const index = this.getPlayerState(p).actFieldIndex;\n      max = index > max ? index : max;\n    });\n    return activePlayers.filter(p => this.getPlayerState(p).actFieldIndex === max);\n  }\n\n  private getFieldIndex(index: number) {\n    return this.settings.fields[index];\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Around The Clock'\" [playground]=\"playground\"\r\n                [rules]=\"'The object of this popular game is to be the first player to hit every number on the board ' +\r\n                 'from 1-20. The numbers must be hit in order, and players alternate after three throws. The player ' +\r\n                  'must hit each number in turn and cannot proceed until to the next number until the number is hit. ' +\r\n                   'The winner is the player who hist all the numbers in order first.'\">\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.jump?'primary':''\" (click)=\"settings.toggleJump()\">\r\n      Enable Jump\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.punishment?'primary':''\" (click)=\"settings.togglePunishment()\">\r\n      Punishment\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.saboteur?'primary':''\" (click)=\"settings.toggleSaboteur()\">\r\n      Saboteur\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.promoter?'primary':''\" (click)=\"settings.togglePromoter()\">\r\n      Promoter\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 3?'primary':''\" (click)=\"settings.toggleTreeLives()\">\r\n      Tree Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 5?'primary':''\" (click)=\"settings.toggleFiveLives()\">\r\n      Five Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 7?'primary':''\" (click)=\"settings.toggleSevenLives()\">\r\n      Seven Lives\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.life === 10?'primary':''\" (click)=\"settings.toggleTenLives()\">\r\n      Ten Lives\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.firstDeath?'primary':''\" (click)=\"settings.toggleFirstDeath()\">\r\n      First Death\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Field's order</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==0?'primary':''\" (click)=\"settings.setStyle(0)\">\r\n      Ascending\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\" (click)=\"settings.setStyle(4)\">\r\n      Descending\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\" (click)=\"settings.setStyle(1)\">\r\n      Clockwise\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\" (click)=\"settings.setStyle(2)\">\r\n      Anticlockwise\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==8?'primary':''\" (click)=\"settings.setStyle(8)\">\r\n      TripleClock\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==9?'primary':''\" (click)=\"settings.setStyle(9)\">\r\n      ZoneClock\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\" (click)=\"settings.setStyle(3)\">\r\n      Random\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==6?'primary':''\" (click)=\"settings.setStyle(6)\">\r\n      Random11\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==5?'primary':''\" (click)=\"settings.setStyle(5)\">\r\n      Recurrence\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==7?'primary':''\" (click)=\"settings.setStyle(7)\">\r\n      Pirate\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"hidden-info\" [class.hidden]=\"hiddenInfo\" (click)=\"toggleHiddenInfo()\">{{getDistanceFromRandom()}}</div>\r\n      <div class=\"player\r\n        {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\r\n        {{settings.life !== 0 && player.isInactive() ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [lifeDisplayed]=\"settings.life !== 0\" [hasContent]=\"false\">\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class AroundClockSettings {\n  jump: boolean;\n  punishment: boolean;\n  life: number;\n  saboteur: boolean;\n  promoter: boolean;\n  style: number;\n  fields: number[];\n  firstDeath: boolean;\n\n  constructor() {\n    this.style = 0;\n    this.jump = true;\n    this.firstDeath = true;\n    this.punishment = true;\n    this.life = 0;\n    this.promoter = false;\n    this.saboteur = true;\n    this.fields = AroundClockSettings.getBaseFields();\n  }\n\n  setStyle(style?: number) {\n    if (!!style || style === 0) {\n      this.style = style;\n    }\n    switch (this.style) {\n      case 1:\n        this.fields = AroundClockSettings.getClockFields();\n        break;\n      case 2:\n        this.fields = AroundClockSettings.getAnticlockFields();\n        break;\n      case 3:\n        this.fields = AroundClockSettings.getRandom();\n        break;\n      case 4:\n        this.fields = [...AroundClockSettings.getBaseFields().reverse().slice(1), 20];\n        break;\n      case 5:\n        this.fields = AroundClockSettings.getRecurrence();\n        break;\n      case 6:\n        this.fields = AroundClockSettings.getRandom(11);\n        break;\n      case 7:\n        this.fields = AroundClockSettings.getPirate();\n        break;\n      case 8:\n        this.fields = AroundClockSettings.getTripleClockFields();\n        break;\n      case 9:\n        this.fields = AroundClockSettings.getZoneClockFields();\n        break;\n      default:\n        this.fields = AroundClockSettings.getBaseFields();\n    }\n  }\n\n  toggleFirstDeath() {\n    this.firstDeath = !this.firstDeath;\n  }\n\n  toggleJump() {\n    this.jump = !this.jump;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n  }\n\n  toggleTreeLives() {\n    this.life = this.life === 3 ? 0 : 3;\n  }\n\n  toggleFiveLives() {\n    this.life = this.life === 5 ? 0 : 5;\n  }\n\n  toggleSevenLives() {\n    this.life = this.life === 7 ? 0 : 7;\n  }\n\n  toggleTenLives() {\n    this.life = this.life === 10 ? 0 : 10;\n  }\n\n  toggleSaboteur() {\n    this.saboteur = !this.saboteur;\n    if (this.saboteur) {\n      this.promoter = false;\n    }\n  }\n\n  togglePromoter() {\n    this.promoter = !this.promoter;\n    if (this.promoter) {\n      this.saboteur = false;\n    }\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getClockFields(): number[] {\n    return [0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4, 19, 20];\n  }\n\n  private static getAnticlockFields(): number[] {\n    return [4, 11, 8, 13, 10, 7, 15, 6, 18, 2, 16, 1, 14, 9, 5, 12, 3, 17, 0, 19, 20];\n  }\n\n  private static getTripleClockFields(): number[] {\n    return [0, 12, 14, 2, 15, 13, 4, 17, 5, 1, 18, 7, 8, 19, 3, 9, 16, 6, 10, 11, 20];\n  }\n\n  private static getZoneClockFields(): number[] {\n    return [0, 12, 17, 9, 3, 1, 5, 2, 14, 15, 16, 7, 18, 10, 6, 20, 13, 19, 8, 4, 11];\n  }\n\n  private static getRandom(size?: number): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    if (!size) {\n      size = fields.length;\n    }\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n      fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n    }\n    return randomFields;\n  }\n\n  private static getPirate(): number[] {\n    let fields = AroundClockSettings.getRandom();\n    for (let i = 0; i < 4; i++) {\n      const random = Math.floor(Math.random() * fields.length);\n      if (fields[random] === 20) {\n        i--;\n      } else {\n        fields[random] = 20;\n      }\n    }\n    return fields;\n  }\n\n  private static getRecurrence(): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    const randomFields = [];\n    for (let i = (fields.length - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n    }\n    return randomFields;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex(value = 1) {\r\n    this.actFieldIndex -= value;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state = new AroundClockState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {CaptureTheFlagState} from './models/capture-the-flag.state.model';\nimport {CaptureTheFlagSettings} from './models/capture-the-flag.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\n\n@Component({\n  templateUrl: './capture-the-flag.component.html',\n  animations: [slideInAnimation],\n})\nexport class CaptureTheFlagComponent extends Playground<CaptureTheFlagState> {\n\n  settings: CaptureTheFlagSettings;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\n    super(application, game, route, dialogService, soundService, statisticsService, 'ctf');\n    this.settings = new CaptureTheFlagSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\n    const state = this.getPlayerState(player);\n    if (this.isActiveField(fieldIndex)) {\n      state.increaseFieldCount(fieldIndex, this.multiplier);\n      if (state.getFieldCount(fieldIndex) >= 3) {\n        player.score += this.settings.noScore ? 1 : score;\n        this.checkWinner(player);\n        this.game.actualFieldIndex++;\n      }\n    } else if (fieldIndex === 20) {\n      state.increaseFieldCount(this.settings.fields[this.game.actualFieldIndex], 3);\n      player.score += this.settings.noScore ? 1 : this.settings.fields[this.game.actualFieldIndex] + 1;\n      this.checkWinner(player);\n      this.game.actualFieldIndex++;\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    if (this.game.actualFieldIndex === this.settings.fields.length) {\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\n    } else if (this.game.isTheLastThrow()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  getFieldValue(player: Player, fieldIndex: number): string {\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\n    if (fieldCount === 0) {\n      return '○○○';\n    } else {\n      let str = '';\n      for (let i = 0; i < Math.min(fieldCount, 3); i++) {\n        str += '●';\n      }\n      for (let i = fieldCount; i < 3; i++) {\n        str += '○';\n      }\n      return str;\n    }\n  }\n\n  customReset() {\n    this.game.actualFieldIndex = 0;\n    this.game.players.forEach(player => player.state = new CaptureTheFlagState());\n    if (this.settings.style === 0) {\n      this.settings.randomCity();\n    } else if (this.settings.style === 1) {\n      this.settings.randomCountry();\n    } else {\n      this.settings.randomContinent();\n    }\n  }\n\n  customSettingsValidation(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  isActiveField(fieldIndex: number): boolean {\n    return this.settings.fields[this.game.actualFieldIndex] === fieldIndex;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return fieldIndex === 20 || this.settings.fields.indexOf(fieldIndex) === this.game.actualFieldIndex;\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return this.isFieldEnabled(fieldIndex);\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const player = this.game.players.find(player => this.getPlayerState(player).getFieldCount(fieldIndex) >= 3);\n    return player ? player.name : '';\n  }\n\n  getTheFinalResult(): Player[] {\n    let winners = this.game.players.filter(p => p.win);\n    if (!winners.length) {\n      return [];\n    }\n    let max = winners[0].score;\n    winners.forEach(p => {\n      max = p.score > max ? p.score : max;\n    });\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\n      const c = p.clone();\n      c.win = false;\n      return c;\n    });\n    return [...winners, ...losers];\n  }\n\n  getGameConfig(): string {\n    return this.settings.fields.length+'';\n  }\n\n  private checkWinner(player: Player) {\n    let total = this.settings.fields.length;\n    const sum = player.score;\n    if (!this.settings.noScore) {\n      total = this.settings.fields.reduce((a, b) => a + b, 0);\n    }\n    if (sum > Math.floor(total / 2)) {\n      player.setWin(true);\n    }\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Capture the Flag'\" [playground]=\"playground\"\n                [rules]=\"'Növekvő sorrendben jönnek a mezők, a játékosoknak el kell foglalni őket. Ez történhet úgy,' +\n                 ' hogy háromszor eltalálja a játékos vagy dob egyetlen dupla bullt. Ha a játékos elfoglalta a mezőt, ' +\n                  'akkor No score esetén 1 pontot kap, egyébként megkapja a mező értékét és megnyílik a következő mező.' +\n                   'A játék a bull mező elfoglalásáig tart. A végén az nyer, akinek a legtöbb pontja van. Döntetlen ' +\n                    'lehetséges.'\">\n\n\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style === 0 ? 'primary' : ''\"\n            (click)=\"settings.randomCity()\">City (5)\n    </button>\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style === 1 ? 'primary' : ''\"\n            (click)=\"settings.randomCountry()\">Country (10)\n    </button>\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style === 2 ? 'primary' : ''\"\n            (click)=\"settings.randomContinent()\">Continent (20)\n    </button>\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.noScore?'primary':''\"\n            (click)=\"settings.toggleNoScore()\">No score\n    </button>\n  </app-settings>\n\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n    <ng-container *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <app-player-score [player]=\"player\">\n          <div class=\"field-set\">\n            <div class=\"field {{isActiveField(field) ? 'highlighted': ''}}\"\n                 *ngFor=\"let field of settings.fields\">\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\n            </div>\n          </div>\n        </app-player-score>\n      </div>\n    </ng-container>\n  </div>\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared/shared.module';\nimport {CaptureTheFlagComponent} from './capture-the-flag.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {path: '', component: CaptureTheFlagComponent}\n    ])\n  ],\n  declarations: [CaptureTheFlagComponent]\n})\nexport class CaptureTheFlagModule {\n}\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class CaptureTheFlagSettings {\n\n  fields: number[];\n  style: number;\n  noScore = false;\n\n  constructor() {\n    this.fields = [];\n    this.noScore = false;\n    this.randomCountry();\n  }\n\n  randomCity() {\n    this.style = 0;\n    this.fields = CaptureTheFlagSettings.getRandom(5);\n    this.fields[this.fields.length] = 20;\n  }\n\n  randomCountry() {\n    this.style = 1;\n    this.fields = CaptureTheFlagSettings.getRandom(10);\n    this.fields[this.fields.length] = 20;\n  }\n\n  randomContinent() {\n    this.style = 2;\n    this.fields = CaptureTheFlagSettings.getRandom(20);\n    this.fields[this.fields.length] = 20;\n  }\n\n  toggleNoScore() {\n    this.noScore = !this.noScore;\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getRandom(size?: number): number[] {\n    let fields = CaptureTheFlagSettings.getBaseFields();\n    if (!size) {\n      size = fields.length;\n    }\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      if (fields[random] === 20) {\n        i++;\n      } else {\n        randomFields.push(fields[random]);\n        fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n      }\n    }\n    return randomFields.sort((a, b) => Number(a) - Number(b));\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\nimport {FieldValue} from '~models/field-value.model';\n\nexport class CaptureTheFlagState extends PlaygroundState {\n\n  actFieldIndex: number;\n  fieldCount: FieldValue[];\n\n  constructor() {\n    super();\n    this.fieldCount = [];\n    this.actFieldIndex = 0;\n  }\n\n  getFieldCount(field: number): number {\n    return this.getFieldValue(this.fieldCount, field).value;\n  }\n\n  increaseFieldCount(field: number, value: number) {\n    this.getFieldValue(this.fieldCount, field).value += value;\n  }\n\n  getActFieldIndex(): number {\n    return this.actFieldIndex;\n  }\n\n  increaseActFieldIndex() {\n    this.actFieldIndex++;\n  }\n\n  clone(): CaptureTheFlagState {\n    const state = new CaptureTheFlagState();\n    state.actFieldIndex = this.actFieldIndex;\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\n    return state;\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {CricketSettings} from './models/cricet.settings.model';\r\nimport {CricketState} from './models/cricet.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './cricket.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class CricketComponent extends Playground<CricketState> {\r\n\r\n  settings: CricketSettings;\r\n  playerToDisplay: Player;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'cricket');\r\n    this.settings = new CricketSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n      if (!this.settings.isBlackOutGame() ||\r\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex ||\r\n        this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n\r\n        if (this.isFieldClosedForOthers(player, fieldIndex) && (playerFieldCount + this.multiplier) > 3) {\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, 3);\r\n        } else {\r\n          let multiplier = this.multiplier;\r\n          if (playerFieldCount < 3 && (playerFieldCount + this.multiplier) >= 3) {\r\n            multiplier = (playerFieldCount + this.multiplier) % 3;\r\n          }\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, playerFieldCount + this.multiplier);\r\n          this.multiplier = multiplier;\r\n        }\r\n      }\r\n\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        if (this.settings.isBlackOutGame()) {\r\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex) {\r\n            this.getPlayerState(player).increaseActFieldIndex();\r\n          }\r\n        }\r\n        this.punishPlayers(fieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.score = this.getPlayerTotal(p));\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    this.game.players.forEach(p => p.setWin(\r\n      this.isPlayerDone(p) &&\r\n      ((!punishStyle && this.game.isTheBestPlayer(p)) || (punishStyle && this.game.isTheWorstPlayer(p)))));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const score = this.getPunishScore(player, fieldIndex);\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n\r\n    let str = '';\r\n    if (punishStyle && score !== 0) {\r\n      str += score;\r\n    }\r\n\r\n    if (playerFieldCount === 0 && str.length === 0) {\r\n      return '○';\r\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\r\n      return this.getFieldScore(player, fieldIndex) + '';\r\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\r\n      str += '●●●';\r\n    } else {\r\n      for (let i = 0; i < playerFieldCount; i++) {\r\n        str += '●';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  isActiveField(player: Player, fieldIndex: number): boolean {\r\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(player: Player, fieldIndex: number): boolean {\r\n    return this.getPlayerState(player).getFieldCount(fieldIndex) >= 3;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.settings.isNoScoreGame()) {\r\n      return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n    }\r\n    return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    if (this.isPrimaryField(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(this.getPlayerToDisplay()).getFieldCount(fieldIndex);\r\n      const remaining = ''.padStart(3 - playerFieldCount, '●');\r\n      return remaining + '\\n' + this.game.players.filter(p => this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      return this.game.players.filter(p => !this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new CricketState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  changePlayerToDisplay(player?: Player) {\r\n    this.playerToDisplay = player;\r\n    setTimeout(() => this.playerToDisplay = null, 1500);\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length+','+this.settings.style;\r\n  }\r\n\r\n  private getPlayerToDisplay(): Player {\r\n    return !!this.playerToDisplay ? this.playerToDisplay : this.game.getActualPlayer();\r\n  }\r\n\r\n  private getPlayerTotal(player: Player) {\r\n    let total = 0;\r\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\r\n      total = this.getPlayerTotalForPunishGame(player);\r\n    } else if (this.settings.isScoreGame()) {\r\n      total = this.getPlayerTotalForScoreGame(player);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForScoreGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        total += (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      }\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForPunishGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      total += this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private punishPlayers(fieldIndex: number) {\r\n    this.game.players.forEach(player => {\r\n      if (!this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        this.getPlayerState(player).setPunishCount(fieldIndex, this.getPlayerState(player).getPunishCount(fieldIndex) + this.multiplier);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  private getFieldScore(player: Player, fieldIndex: number): number {\r\n    if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n      return (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getPunishScore(player: Player, fieldIndex: number): number {\r\n    return this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n  }\r\n\r\n  private isFieldClosed(fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(player => {\r\n      closed = closed && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isFieldClosedForOthers(player: Player, fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(p => {\r\n      if (p.id !== player.id) {\r\n        closed = closed && this.isFieldDoneForPlayer(p, fieldIndex);\r\n      }\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isPlayerDone(player: Player): boolean {\r\n    let done = true;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      done = done && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    });\r\n    return done;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Ultimate Cricket'\" [playground]=\"playground\"\r\n                [rules]=\"'The objective shall be to \\'own\\' or \\'close\\' certain numbers on the board, and to achieve ' +\r\n                'the highest point score. The player or team to do so first, shall be the winner.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==2?'primary':''\"\r\n            (click)=\"settings.setStyle(2)\">Cut-Throat\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==4?'primary':''\"\r\n            (click)=\"settings.setStyle(4)\">Black Out\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           (click)=\"changePlayerToDisplay(player)\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div\r\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\r\n                *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class CricketSettings {\r\n\r\n  fields: number[] = [14, 15, 16, 17, 18, 19, 20];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize(maxField: number) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    while(this.numbs.filter(n => !!n).length !== maxField) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.numbs[this.numbs.length - 1] = true;\r\n    this.initFields();\r\n  }\r\n\r\n  all() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  small() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21]);\r\n  }\r\n\r\n  high() {\r\n    this.setAllowedField([11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  star() {\r\n    this.setAllowedField([20, 9, 14, 13, 4, 16, 7, 2, 15, 21]);\r\n  }\r\n\r\n  cross() {\r\n    this.setAllowedField([20, 3, 11, 6, 21]);\r\n  }\r\n\r\n  upper() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  lower() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  left() {\r\n    this.setAllowedField([12, 9, 14, 11, 8, 16, 7, 5, 19, 21]);\r\n  }\r\n\r\n  right() {\r\n    this.setAllowedField([1, 18, 4, 13, 6, 10, 15, 2, 17, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  prime() {\r\n    this.setAllowedField([2, 3, 5, 7, 11, 13, 17, 19, 21]);\r\n  }\r\n\r\n  notPrime() {\r\n    this.setAllowedField([1, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.fieldCount, fieldIndex).value;\r\n  }\r\n\r\n  setFieldCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getPunishCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.punishCount, fieldIndex).value;\r\n  }\r\n\r\n  setPunishCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.punishCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state = new CricketState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {DuelSettings} from './models/duel.settings.model';\r\nimport {DuelState} from './models/duel.state.model';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './duel.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class DuelComponent extends Playground<DuelState> {\r\n\r\n  settings: DuelSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'duel', 2);\r\n    this.settings = new DuelSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    const actualScore = score * this.multiplier;\r\n    if (score === 0) {\r\n      player.score -= this.settings.punishment;\r\n    } else if (state.ownFields.some(i => i === fieldIndex)) {\r\n      player.score += actualScore;\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      player.score -= actualScore;\r\n      if (this.settings.handover) {\r\n        const player = this.game.players.find(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n        if (player) {\r\n          player.score += actualScore;\r\n        }\r\n      }\r\n    } else {\r\n      state.ownFields.push(fieldIndex);\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score >= this.settings.targetPoint));\r\n    const activePlayers = this.game.players.filter(p => !this.isInactive(p));\r\n    if (activePlayers.length === 1) {\r\n      activePlayers[0].setWin(true);\r\n    }\r\n    if (!activePlayers) {\r\n      player.setWin(true);\r\n    } else {\r\n      if (this.game.isTheLastThrow()) {\r\n        this.game.nextPlayer();\r\n      }\r\n      while (this.isInactive(this.game.getActualPlayer())) {\r\n        this.game.nextPlayer();\r\n      }\r\n    }\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return player.score <= 0;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    return state.ownFields.some(i => i === fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return !this.settings.isFieldAllowed(fieldIndex) ||\r\n      this.game.players.some(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const player = this.game.players.find(p => this.getPlayerState(p).ownFields.some(i => i === fieldIndex))\r\n    if (player) {\r\n      return player.name.substr(0, 1).toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new DuelState();\r\n      player.score = this.settings.startPoint;\r\n    });\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length+','+this.settings.targetPoint+','+this.settings.startPoint;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Duel'\" [playground]=\"playground\"\r\n                [rules]=\"'....'\">\r\n\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.startPoint\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.targetPoint\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Punishment</mat-label>\r\n        <input [(ngModel)]=\"settings.punishment\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <br/>\r\n\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.handover ? 'primary' : ''\"\r\n            (click)=\"settings.toggleHandOver()\">Hand Over</button>\r\n\r\n    <br/>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {DuelComponent} from './duel.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: DuelComponent}\r\n    ])\r\n  ],\r\n  declarations: [DuelComponent]\r\n})\r\nexport class DuelModule {\r\n}\r\n","import {CricketSettings} from '../../cricket/models/cricet.settings.model';\r\n\r\nexport class DuelSettings extends CricketSettings {\r\n  startPoint: number;\r\n  targetPoint: number;\r\n  punishment: number;\r\n  handover: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.star();\r\n    this.startPoint = 30;\r\n    this.targetPoint = 200;\r\n    this.punishment = 10;\r\n    this.handover = true;\r\n  }\r\n\r\n  star() {\r\n    this.setAllowedField([20, 1, 4, 13, 6, 15, 2, 3, 19, 16, 8, 14, 9]);\r\n  }\r\n\r\n  cross() {\r\n    this.setAllowedField([5, 20, 18, 4, 6, 10, 2, 17, 7, 16, 11, 14]);\r\n  }\r\n\r\n  toggleHandOver() {\r\n    this.handover = !this.handover;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class DuelState extends PlaygroundState {\r\n\r\n  ownFields = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  clone(): DuelState {\r\n    const state = new DuelState();\r\n    state.ownFields = [...this.ownFields];\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {FivesSettings} from './models/fives.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './fives.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class FivesComponent extends Playground<PlaygroundState> {\r\n\r\n  settings: FivesSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'fives');\r\n    this.settings = new FivesSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.game.isTheLastThrow()) {\r\n      let sum = 0;\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        sum += t.score * t.multi;\r\n      }\r\n      if (sum % this.settings.divider === 0) {\r\n        if (this.settings.noCheat && player.throwsHistory[player.throwsHistory.length - 1].score === 0 && sum !== 0) {\r\n          sum = 0;\r\n        }\r\n        player.score -= (sum / this.settings.divider);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score <= 0));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.actualThrow === 2) {\r\n      const mod = this.settings.divider - (this.game.getActualPlayer().getThrowsTotal() % this.settings.divider);\r\n      let max = mod + this.settings.divider;\r\n      const all = [mod];\r\n      while (max <= 20) {\r\n        all.push(max);\r\n        max += this.settings.divider;\r\n      }\r\n      return all.some(f => f === fieldIndex + 1);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.limit);\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.divider + ',' + this.settings.limit;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Fives'\" [playground]=\"playground\"\r\n                [rules]=\"'The idea of the game to throw three darts into the board, in turn, to score a number that ' +\r\n                 'is divisible by five. The higher the number you score, the more points you can score. For every five ' +\r\n                  'scored, one point is awarded. E.g. if a player scores fifteen then he or she gains three points.'\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.noCheat?'primary':''\" (click)=\"settings.toggleNoCheat()\">\r\n      No Cheat\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Divider</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.divider === divider?'primary':''\"\r\n            *ngFor=\"let divider of settings.getSelectableDividers()\"\r\n            (click)=\"settings.setDivider(divider)\">{{divider}}</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Limit</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.limit === limit?'primary':''\"\r\n            *ngFor=\"let limit of settings.getSelectableLimits()\"\r\n            (click)=\"settings.setLimit(limit)\">{{limit}}</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FivesComponent} from './fives.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: FivesComponent}\r\n    ])\r\n  ],\r\n  declarations: [FivesComponent]\r\n})\r\nexport class FivesModule {\r\n}\r\n","export class FivesSettings {\r\n  divider: number;\r\n  limit: number;\r\n  noCheat: boolean;\r\n\r\n  constructor() {\r\n    this.divider = 5;\r\n    this.limit = 20;\r\n    this.noCheat = true;\r\n  }\r\n\r\n  getSelectableDividers(): number[] {\r\n    return [3, 4, 5, 6, 7, 8, 10];\r\n  }\r\n\r\n  getSelectableLimits(): number[] {\r\n    return [10, 20, 30, 50, 100];\r\n  }\r\n\r\n  setDivider(value: number) {\r\n    this.divider = value;\r\n  }\r\n\r\n  setLimit(value: number) {\r\n    this.limit = value;\r\n  }\r\n\r\n  toggleNoCheat() {\r\n    this.noCheat = !this.noCheat;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {HareAndHoundSettings} from './models/hare-and-hound.settings.model';\r\nimport {HareAndHoundState} from './models/hare-and-hound.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './hare-and-hound.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class HareAndHoundComponent extends Playground<HareAndHoundState> {\r\n\r\n  settings: HareAndHoundSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'hare-hound', 2, 2);\r\n    this.settings = new HareAndHoundSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isFieldEnabled(fieldIndex, state.actFieldIndex)) {\r\n      state.increaseActFieldIndex(this.multiplier);\r\n      if (state.actFieldIndex >= (FIELDS_COUNT - 1)) {\r\n        state.actFieldIndex = state.actFieldIndex - (FIELDS_COUNT - 1);\r\n      }\r\n      player.score -= this.multiplier;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    player.setWin((this.isHare() && player.score <= 0) ||\r\n      (!this.isHare() &&\r\n        (player.score + this.settings.getHareStartIndex()) <= this.game.players.find(p => this.isHare(p)).score));\r\n\r\n    if (!player.win && this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number, actFieldIndex?: number): boolean {\r\n    if (!actFieldIndex) {\r\n      actFieldIndex = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\r\n    }\r\n    return fieldIndex === this.getFieldIndex(actFieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    if (!this.isFieldEnabled(fieldIndex)) {\r\n      return this.game.players.some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players\r\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex)\r\n      .map(p => p.name);\r\n    return !!owners.length ? owners.join(' ') : '';\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (!this.isPrimaryField(fieldIndex) && !this.isSecondaryField(fieldIndex)) {\r\n      return '';\r\n    }\r\n    return (this.isHare() && this.isPrimaryField(fieldIndex) || (this.isSecondaryField(fieldIndex) && !this.isHare())) ? 'favorite' : 'directions_run';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach((player, index) => {\r\n      player.score = FIELDS_COUNT - 1;\r\n      if (index === 0) {\r\n        player.state = new HareAndHoundState(this.settings.getHareStartIndex());\r\n      } else {\r\n        player.state = new HareAndHoundState(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + `${this.isHare(player) ? '0' : '1'}`;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return (20 - HareAndHoundSettings.getBaseFields().indexOf(this.settings.houndStartIndex)) + '';\r\n  }\r\n\r\n  private getFieldIndex(index: number) {\r\n    return this.settings.getFields()[index];\r\n  }\r\n\r\n  private isHare(player?: Player) {\r\n    if (!player) {\r\n      player = this.game.getActualPlayer();\r\n    }\r\n    return this.game.players.map(p => p.id).indexOf(player.id) === 0;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Hare and Hound'\" [playground]=\"playground\"\r\n                [rules]=\"'The frist player is the hare, and his opponent is the hound in pursuit. The hare must travel ' +\r\n                 'clockwise around the board starting at 20. The hare wins by returning to 20 before the hound catches ' +\r\n                  'up with him. The hound usually starts from either 12 or 5, depending on the preference of the ' +\r\n                   'players. The hound wins by overtaking the hare.'\">\r\n\r\n    <h2>Hound start position</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"(settings.houndStartIndex+1) === start?'primary':''\"\r\n            *ngFor=\"let start of settings.getSelectableHoundStart()\"\r\n            (click)=\"settings.setHoundStart(start - 1)\">{{start}}</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {HareAndHoundComponent} from './hare-and-hound.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: HareAndHoundComponent}\r\n    ])\r\n  ],\r\n  declarations: [HareAndHoundComponent]\r\n})\r\nexport class HareAndHoundModule {\r\n}\r\n","export class HareAndHoundSettings {\r\n  houndStartIndex: number;\r\n  hareStartIndex: number;\r\n\r\n  constructor() {\r\n    this.houndStartIndex = 13;\r\n    this.hareStartIndex = 19;\r\n  }\r\n\r\n  getSelectableHoundStart(): number[] {\r\n    return [7, 16, 8, 11, 14, 9, 12, 5];\r\n  }\r\n\r\n  setHoundStart(value: number) {\r\n    this.houndStartIndex = value;\r\n  }\r\n\r\n  getFields(): number[] {\r\n    const index = HareAndHoundSettings.getBaseFields().indexOf(this.houndStartIndex);\r\n    return [...HareAndHoundSettings.getBaseFields().slice(index), ...HareAndHoundSettings.getBaseFields().slice(0, index)];\r\n  }\r\n\r\n  getHareStartIndex(): number {\r\n    return this.getFields().indexOf(this.hareStartIndex);\r\n  }\r\n\r\n  static getBaseFields(): number[] {\r\n    return [19, 0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4];\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class HareAndHoundState extends PlaygroundState {\r\n\r\n  constructor(public actFieldIndex: number) {\r\n    super();\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): HareAndHoundState {\r\n    return new HareAndHoundState(this.actFieldIndex);\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ImitatorSettings} from './models/imitator.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {ImitatorState} from './models/imitator.state.model';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './imitator.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ImitatorComponent extends Playground<ImitatorState> {\r\n\r\n  settings: ImitatorSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'imitator');\r\n    this.nextEnabled = false;\r\n    this.settings = new ImitatorSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.actualThrow === 1) {\r\n      state.punished = fieldIndex !== state.actFieldIndex;\r\n    } else if (this.game.actualThrow === 2) {\r\n      const newScore = state.punished && score === 0 ? 25 : score;\r\n      player.score += (state.punished ? newScore * -1 : newScore) * this.multiplier;\r\n    } else {\r\n      this.game.nextPlayer();\r\n      const newFieldIndex = score === 0 ? Math.floor(Math.random() * 20) : fieldIndex;\r\n      this.getPlayerState(this.game.getActualPlayer()).actFieldIndex = newFieldIndex;\r\n    }\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.game.actualThrow === 0 && this.getPlayerState(this.game.getActualPlayer()).actFieldIndex === fieldIndex;\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastPlayer(player) && (this.game.round + 1) === this.settings.round && this.game.actualThrow === 2) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ImitatorState());\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.round + '';\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Imitator'\" [playground]=\"playground\"\r\n                [rules]=\"'...'\">\r\n\r\n    <h2>Number of Round</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===3?'primary':''\" (click)=\"settings.setRound(3)\">\r\n      3\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===5?'primary':''\" (click)=\"settings.setRound(5)\">\r\n      5\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===10?'primary':''\" (click)=\"settings.setRound(10)\">\r\n      10\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===15?'primary':''\" (click)=\"settings.setRound(15)\">\r\n      15\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.round===20?'primary':''\" (click)=\"settings.setRound(20)\">\r\n      20\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" [reversRound]=\"settings.round\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ImitatorComponent} from './imitator.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ImitatorComponent}\r\n    ])\r\n  ],\r\n  declarations: [ImitatorComponent]\r\n})\r\nexport class ImitatorModule {\r\n}\r\n","export class ImitatorSettings {\n\n  round = 5;\n\n  setRound(r: number) {\n    this.round = r;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class ImitatorState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n  punished: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = Math.floor(Math.random() * 20);\r\n    this.punished = false;\r\n  }\r\n\r\n  clone(): ImitatorState {\r\n    const state = new ImitatorState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    state.punished = this.punished;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KillerState} from './models/killer.state.model';\r\nimport {KillerSettings} from './models/killer.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\nconst DANGER_ZONE_ICON = 'sentiment_very_dissatisfied';\r\n\r\n@Component({\r\n  templateUrl: './killer.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KillerComponent extends Playground<KillerState> {\r\n\r\n  settings: KillerSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'killer', 2);\r\n    this.settings = new KillerSettings();\r\n    this.nextEnabled = false;\r\n    this.zeroEnabled = false;\r\n    this.multiEnabled = false;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.round === 0) {\r\n      state.actField = fieldIndex;\r\n      player.score = score;\r\n      if (this.game.isActualPlayerTheLast()) {\r\n        this.nextEnabled = true;\r\n        this.zeroEnabled = true;\r\n        this.multiEnabled = true;\r\n      }\r\n    } else {\r\n      if (state.killer) {\r\n        if (this.settings.suicide && fieldIndex === state.actField && this.multiplier > 1) {\r\n          player.life = 0;\r\n          this.extraEndingMsg = 'SUICIDE!!!';\r\n        } else if (fieldIndex === state.actField) {\r\n          player.life = Number(player.life) + Number(this.multiplier);\r\n          if (player.life > this.settings.numberOfLives) {\r\n            player.life = this.settings.numberOfLives;\r\n          }\r\n        } else {\r\n          this.game.players.filter(p => p.id !== player.id && !p.isInactive()).forEach(p => {\r\n            const s = this.getPlayerState(p);\r\n            if (fieldIndex === s.actField) {\r\n              p.life -= this.multiplier;\r\n              this.soundService.no();\r\n              if (p.life < 0) {\r\n                p.life = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (fieldIndex === state.actField) {\r\n        state.boarding -= this.multiplier;\r\n        if (state.boarding <= 0) {\r\n          state.boarding = 0;\r\n        }\r\n        state.killer = state.boarding === 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.round !== 0) {\r\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !p.isInactive()));\r\n    }\r\n    if (this.game.round === 0 || this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.game.getActualPlayer().isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return fieldIndex !== 20 && !this.getAllEnabledFields().some(f => f === fieldIndex);\r\n    }\r\n    return this.getAllEnabledFields().some(f => f === fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return this.isFieldEnabled(fieldIndex);\r\n    }\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return this.isFieldEnabled(fieldIndex) && !this.isSecondaryField(fieldIndex);\r\n    }\r\n    return state.actField === fieldIndex;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return state.actField === fieldIndex;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return !p.isInactive() && p.life <= 3 && state.actField === fieldIndex;\r\n    })) {\r\n      return DANGER_ZONE_ICON;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owner = this.game.players.find(p => (p.state as KillerState).actField === fieldIndex);\r\n    return owner ? `${owner.name}(${owner.life})` : '';\r\n  }\r\n\r\n  getPlayerField(player: Player): string {\r\n    const fieldIndex = this.getPlayerState(player).actField;\r\n    return fieldIndex === 20 ? 'B' : (fieldIndex + 1) + '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new KillerState(this.settings.boardingLimit);\r\n      player.life = this.settings.numberOfLives;\r\n    });\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.boardingLimit + ',' + this.settings.numberOfLives;\r\n  }\r\n\r\n  private getAllEnabledFields(): number[] {\r\n    return this.game.players.filter(p => !p.isInactive())\r\n      .map(p => this.getPlayerState(p).actField);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Killer'\" [playground]=\"playground\"\r\n                [rules]=\"'Firstly each player draws lots i.e. a number between 1 - 20. Each player is then given ' +\r\n                 'between 3 & 5 lives. The objective of this game is for each thrower to first hit their own number ' +\r\n                  'three times to gain status of KILLER. Once they have achieved this they then can throw for their ' +\r\n                  'opponents number in any order they wish. Every time a KILLER status player hits an opponents ' +\r\n                  'number the opponent loses a life. KILLERS can also commit SUICIDE by hitting their own number\\'s ' +\r\n                  'triple. The winner of this game is the player that remains alive.'\">\r\n\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.suicide?'primary':''\"\r\n            (click)=\"settings.toggleSuicide()\">Suicide</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{player.isInactive() ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [highlighted]=\"getPlayerState(player).killer\">\r\n          <ng-container *ngIf=\"getPlayerField(player) !== '0'\">\r\n            <div class=\"score\"><label>Field: </label>{{getPlayerField(player)}}</div>\r\n            <div class=\"clear\"></div>\r\n            <div class=\"line\"></div>\r\n            <div class=\"score\">\r\n              <label>Life: </label>{{player.life}}\r\n              <ng-container *ngIf=\"!getPlayerState(player).killer\"><label>Boarding: </label>{{getPlayerState(player).boarding}}</ng-container>\r\n            </div>\r\n          </ng-container>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class KillerSettings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n  suicide: boolean;\r\n\r\n  constructor() {\r\n    this.suicide = false;\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n\r\n  toggleSuicide() {\r\n    this.suicide = !this.suicide;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(public boarding = 3) {\r\n    super();\r\n    this.actField = -1;\r\n    this.killer = false;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state = new KillerState(this.boarding);\r\n    state.actField = this.actField;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KnockoutSettings} from './models/knockout.settings.model';\r\nimport {KnockoutState} from './models/knockout.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './knockout.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KnockoutComponent extends Playground<KnockoutState> {\r\n\r\n  settings: KnockoutSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'knockout', 2);\r\n    this.settings = new KnockoutSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    player.score = player.getThrowsTotal();\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastThrow()) {\r\n      const score = this.getPlayerState(player).score;\r\n      if (score > player.getThrowsTotal()) {\r\n        player.life--;\r\n        this.soundService.no();\r\n      } else if (this.settings.killer && score !== 0 && score === player.getThrowsTotal()\r\n        && player.throwsHistory[player.throwsHistory.length - 1].score !== 0) {\r\n        this.game.getPreviousPlayer().life--;\r\n        this.soundService.no();\r\n      }\r\n      this.getPlayerState(this.game.getNextPlayer()).score = player.getThrowsTotal();\r\n      const activePlayers = this.game.getActivePlayers();\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !p.isInactive()));\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.game.getActualPlayer().isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new KnockoutState();\r\n      player.life = this.settings.numberOfLives;\r\n    });\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0;\r\n  }\r\n\r\n  getInfo(): number {\r\n    const player = this.game.getActualPlayer();\r\n    const state = this.getPlayerState(player);\r\n    return (state.score ? state.score : 0) - (this.game.actualThrow === 0 ? 0 : player.score);\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Knockout'\" [playground]=\"playground\"\r\n                [rules]=\"'The player selected to throw first must throw as many points as possible. The player next in ' +\r\n                 'line then must throw a higher score than the player throwing before him, if he fails to throw a ' +\r\n                  'higher score a ring is put around their score, once you have 3 rings next to your name, you drop ' +\r\n                   'out of the game.'\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <br/>\r\n    <button mat-raised-button class=\"button medium\" [color]=\"settings.killer ? 'primary' : ''\" (click)=\"settings.toggleKiller()\">\r\n      Below the belt\r\n    </button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" [info]=\"getInfo()\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{player.isInactive() ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"true\" [lifeDisplayed]=\"true\" [hasContent]=\"false\">\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {KnockoutComponent} from './knockout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KnockoutComponent}\r\n    ])\r\n  ],\r\n  declarations: [KnockoutComponent]\r\n})\r\nexport class KnockoutModule {\r\n}\r\n","export class KnockoutSettings {\r\n  numberOfLives: number;\r\n  killer: boolean;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 5;\r\n    this.killer = true;\r\n  }\r\n\r\n  toggleKiller() {\r\n    this.killer = !this.killer;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KnockoutState extends PlaygroundState {\r\n\r\n  constructor(public score = 0) {\r\n    super();\r\n  }\r\n\r\n  clone(): KnockoutState {\r\n    return new KnockoutState(this.score);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({position: 'relative'}),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({left: '-100%'})\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({left: '100%'}))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({left: '0%'}))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild(), {optional: true}),\r\n    ]),\r\n  ]);\r\n","import {CricketSettings} from '../../cricket/models/cricet.settings.model';\n\nexport class ScamSettings extends CricketSettings {\n\n  stopper = false;\n  punishment = false;\n\n  constructor() {\n   super();\n   this.style = 1;\n   this.all();\n  }\n\n  toggleStopper() {\n    this.stopper = !this.stopper;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n  }\n}\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {PlaygroundState} from '~models/playground-state.model';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {ScamSettings} from './models/scam.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\n\n@Component({\n  templateUrl: './scam.component.html',\n  animations: [slideInAnimation],\n})\nexport class ScamComponent extends Playground<PlaygroundState> {\n\n  settings: ScamSettings;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\n    super(application, game, route, dialogService, soundService, statisticsService, 'scam', 2);\n    this.settings = new ScamSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\n    if (!!this.game.numbs[fieldIndex]) {\n      if (this.settings.stopper && this.game.isTheFirstPlayer(player)) {\n        this.game.numbs[fieldIndex] = 0;\n      } else if(this.settings.stopper) {\n        player.score += (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier;\n      } else {\n        player.score += (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier;\n        this.game.numbs[fieldIndex] = 0;\n      }\n    } else if (this.settings.punishment && ((this.settings.stopper && !this.game.isTheFirstPlayer(player)) || !this.settings.stopper)) {\n      player.score -= (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier;\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    if(!this.game.numbs.find(n => n)) {\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\n    }\n    if (this.game.isTheLastThrow()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  isSecondaryField(fieldIndex: number): boolean {\n    return this.settings.punishment && !this.game.numbs[fieldIndex];\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return this.settings.punishment || !!this.game.numbs[fieldIndex];\n  }\n\n  customReset() {\n    this.game.numbs = this.settings.numbs.map(i => i ? 1 : 0);\n    this.settings.fields.forEach(f => this.settings.numbs[f] = true);\n  }\n\n  getGameConfig(): string {\n    return this.settings.fields.length + '';\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Scam'\" [playground]=\"playground\"\r\n                [rules]=\"'...'\">\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.isFieldAllowed(i)?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.upper()\">Upper</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.lower()\">Lower</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(5)\">Random 05</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(10)\">Random 10</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize(15)\">Random 15</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.star()\">Star</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==1?'primary':''\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.style==3?'primary':''\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.stopper?'primary':''\"\r\n            (click)=\"settings.toggleStopper()\">Stopper\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.punishment?'primary':''\"\r\n            (click)=\"settings.togglePunishment()\">Punishment\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"\r\n          [highlighted]=\"settings.stopper && game.isTheFirstPlayer(player)\"\r\n          [scoreDisplayed]=\"!settings.stopper || !game.isTheFirstPlayer(player)\">\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ScamComponent} from './scam.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ScamComponent}\r\n    ])\r\n  ],\r\n  declarations: [ScamComponent]\r\n})\r\nexport class ScamModule {\r\n}\r\n","export class ShanghaiSettings {\r\n\r\n  fields: number[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n  }\r\n\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: number): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: number): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: number, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state = new ShanghaiState();\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ShanghaiSettings} from './models/shanghai.settings.model';\r\nimport {ShanghaiState} from './models/shanghai.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './shanghai.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ShanghaiComponent extends Playground<ShanghaiState> {\r\n\r\n  settings: ShanghaiSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'shanghai');\r\n    this.settings = new ShanghaiSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isActiveField(fieldIndex)) {\r\n      state.increaseFieldCount(fieldIndex, 1);\r\n      state.increaseFieldScore(fieldIndex, this.multiplier);\r\n      if (this.settings.noScore) {\r\n        player.score += this.multiplier;\r\n      } else {\r\n        player.score += score * this.multiplier;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    // Shanghai rule\r\n    if (this.game.isTheLastThrow()) {\r\n      let multi = 1;\r\n      const fieldIndex = this.settings.fields[this.game.round];\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        if (t.score === Playground.getFieldValueFromIndex(fieldIndex)) {\r\n          multi *= (t.multi + 1);\r\n        }\r\n      }\r\n      if (multi === 1 && this.settings.halveIt) {\r\n        player.score = Math.round(player.score / 2);\r\n      }\r\n      player.setWin(multi === 24);\r\n      if (player.win) {\r\n        this.extraEndingMsg = 'SHANGHAI!!!';\r\n      }\r\n    }\r\n\r\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\r\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\r\n    if (gameEnded) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    } else if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n    if (fieldCount === 0) {\r\n      return '○○○';\r\n    } else {\r\n      let str = '' + this.getPlayerState(player).getFieldScore(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      for (let i = 0; i < fieldCount; i++) {\r\n        str += '●';\r\n      }\r\n      for (let i = fieldCount; i < 3; i++) {\r\n        str += '○';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ShanghaiState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  isActiveField(fieldIndex: number): boolean {\r\n    return this.settings.fields[this.game.round] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) < this.game.round;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) === this.game.round;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    let max = winners[0].score;\r\n    winners.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\r\n      const c = p.clone();\r\n      c.win = false;\r\n      return c;\r\n    });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + player.score + ((player.win && this.extraEndingMsg) ? ('/s') : '');\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length + ',' + (this.settings.halveIt ? '1' : '0');\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'Shanghai / Halve It'\" [playground]=\"playground\"\r\n                [rules]=\"' Players start by throwing at the number 1 on the board. The object is to hit a single,' +\r\n                 'treble and double (in any order). This first player to hit a single, treble and double wins. If no' +\r\n                  'player achieves this on number 1, the play moves to number 2 and so on until someone wins.'\">\r\n\r\n    <h2>Fields</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.numbs[i]?'primary':''\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button mat-raised-button class=\"button shortmedium\" (click)=\"settings.randomize()\">Randomize</button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.noScore?'primary':''\"\r\n            (click)=\"settings.toggleNoScore()\">No score\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\"  [color]=\"settings.halveIt?'primary':''\"\r\n            (click)=\"settings.toggleHalveIt()\">Halve It\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isFieldDoneForPlayer(field) ? '' : 'highlighted'}}\"\r\n                 *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\n\r\n@Component({\r\n  templateUrl: 'confirm-dialog.component.html',\r\n  styleUrls: ['confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }) {\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  confirm(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content\">\r\n    <p>{{ data.content }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [color]=\"'primary'\" (click)=\"confirm()\">OK</button>\r\n    <button mat-raised-button [color]=\"'secondary'\" (click)=\"cancel()\">Cancel</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Inject} from '@angular/core';\r\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\n\r\n@Component({\r\n  templateUrl: 'darts-table-dialog.component.html',\r\n  styleUrls: ['darts-table-dialog.component.scss']\r\n})\r\nexport class DartsTableDialogComponent {\r\n\r\n  constructor(protected dialogRef: MatDialogRef<DartsTableDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { field: [], primary: [], secondary: [] }) {\r\n  }\r\n\r\n  isPrimary(index: number): boolean {\r\n    return this.data.primary.some(p => p === index);\r\n  }\r\n\r\n  isSecondary(index: number): boolean {\r\n    return this.data.secondary.some(p => p === index);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container darts-table-container\">\r\n  <mat-dialog-content class=\"body-2\" (click)=\"close()\">\r\n    <svg viewBox=\"0 0 600 600\">\r\n      <g>\r\n        <ellipse stroke=\"#000\" stroke-width=\"28\" ry=\"255.21392\" rx=\"255.21392\" id=\"svg_1\" cy=\"299.99999\" cx=\"300\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n        <ellipse stroke=\"#000\" stroke-width=\"5\" fill-opacity=\"0\" ry=\"234.85655\" rx=\"234.85655\" id=\"svg_44\" cy=\"299.99999\" cx=\"300.00001\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n        <ellipse stroke=\"#000\" stroke-width=\"14\" ry=\"17.42588\" rx=\"17.42588\" id=\"svg_2\" cy=\"300\" cx=\"300\" opacity=\"NaN\" fill=\"#ffffff\"/>\r\n        <line transform=\"rotate(-9 300 300)\" id=\"svg_7\" y2=\"543.61446\" x2=\"300\" y1=\"56.38556\" x1=\"300\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(27 300 300)\" id=\"svg_8\" y2=\"543.61446\" x2=\"300\" y1=\"56.38556\" x1=\"300\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(63 300.741 300)\" id=\"svg_9\" y2=\"543.61443\" x2=\"300.74077\" y1=\"56.38553\" x1=\"300.74077\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(135 300 300)\" id=\"svg_10\" y2=\"543.61445\" x2=\"300.00003\" y1=\"56.38555\" x1=\"300.00003\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(99 300 300)\" id=\"svg_11\" y2=\"543.61444\" x2=\"300.00002\" y1=\"56.38554\" x1=\"300.00002\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(45 300 300)\" stroke=\"#000\" id=\"svg_16\" y2=\"543.61444\" x2=\"300.00002\" y1=\"56.38554\" x1=\"300.00002\" stroke-width=\"5\" fill=\"none\"/>\r\n        <line transform=\"rotate(9 300 300)\" id=\"svg_17\" y2=\"543.61446\" x2=\"300.00001\" y1=\"56.38556\" x1=\"300.00001\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(82 300.741 300)\" id=\"svg_18\" y2=\"543.61443\" x2=\"300.74077\" y1=\"56.38553\" x1=\"300.74077\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(117 300 300)\" id=\"svg_19\" y2=\"543.61444\" x2=\"300.00002\" y1=\"56.38554\" x1=\"300.00002\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <line transform=\"rotate(153 300 300)\" id=\"svg_20\" y2=\"543.61445\" x2=\"300.00003\" y1=\"56.38555\" x1=\"300.00003\" stroke-width=\"5\" stroke=\"#000\" fill=\"none\"/>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_21\" y=\"101.43315\" x=\"282.14266\" stroke=\"#000\" fill=\"#000000\">20</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_22\" y=\"112.14756\" x=\"353.57205\" stroke=\"#000\" fill=\"#000000\">1</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_23\" y=\"142.1479\" x=\"403.57262\" stroke=\"#000\" fill=\"#000000\">18</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_24\" y=\"186.43412\" x=\"459.28754\" stroke=\"#000\" fill=\"#000000\">4</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_25\" y=\"245.72052\" x=\"479.28777\" stroke=\"#000\" fill=\"#000000\">13</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_26\" y=\"312.14984\" x=\"500.71658\" stroke=\"#000\" fill=\"#000000\">6</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_27\" y=\"374.29341\" x=\"480.71635\" stroke=\"#000\" fill=\"#000000\">10</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_28\" y=\"430.72262\" x=\"452.1446\" stroke=\"#000\" fill=\"#000000\">15</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_29\" y=\"477.15173\" x=\"417.1442\" stroke=\"#000\" fill=\"#000000\">2</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_30\" y=\"506.43778\" x=\"347.1434\" stroke=\"#000\" fill=\"#000000\">17</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_31\" y=\"518.58076\" x=\"289.2856\" stroke=\"#000\" fill=\"#000000\">3</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_32\" y=\"508.58065\" x=\"216.42762\" stroke=\"#000\" fill=\"#000000\">19</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_33\" y=\"477.15172\" x=\"169.28422\" stroke=\"#000\" fill=\"#000000\">7</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_34\" y=\"431.43692\" x=\"110.71213\" stroke=\"#000\" fill=\"#000000\">16</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_35\" y=\"372.15053\" x=\"90.71191\" stroke=\"#000\" fill=\"#000000\">8</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_36\" y=\"306.43548\" x=\"72.14025\" stroke=\"#000\" fill=\"#000000\">11</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_37\" y=\"244.29192\" x=\"83.56896\" stroke=\"#000\" fill=\"#000000\">14</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_38\" y=\"185.71982\" x=\"122.14082\" stroke=\"#000\" fill=\"#000000\">9</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_39\" y=\"140.71931\" x=\"162.14128\" stroke=\"#000\" fill=\"#000000\">12</text>\r\n        <text font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_40\" y=\"112.14755\" x=\"227.85631\" stroke=\"#000\" fill=\"#000000\">5</text>\r\n        <text stroke-opacity=\"0\" font-style=\"normal\" font-weight=\"bold\" xml:space=\"preserve\" text-anchor=\"start\" font-family=\"sans-serif\" font-size=\"30\" id=\"svg_41\" y=\"310.35406\" x=\"289.21193\" stroke=\"#0f0f00\" fill=\"#ffffff\">B</text>\r\n        <ellipse stroke=\"#000\" stroke-width=\"5\" fill-opacity=\"0\" ry=\"148.78414\" rx=\"148.78414\" id=\"svg_46\" cy=\"299.99999\" cx=\"300\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n        <ellipse stroke=\"#000\" stroke-width=\"5\" fill-opacity=\"0\" ry=\"139.85547\" rx=\"139.85547\" id=\"svg_47\" cy=\"299.99998\" cx=\"300.00001\" opacity=\"NaN\" fill=\"#ffffaa\"/>\r\n      </g>\r\n    </svg>\r\n    <div *ngFor=\"let f of data.field\" class=\"clip darts-table-field-{{f}}\"\r\n         [class.primary]=\"isPrimary(f)\" [class.secondary]=\"isSecondary(f)\"></div>\r\n  </mat-dialog-content>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content || !!data.players.length\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {STAT_NAME_SEPARATOR} from '~services/statistics.service';\r\nimport {environment} from '../../../../environments/environment';\r\n\r\n@Component({\r\n  templateUrl: 'game-history-dialog.component.html',\r\n  styleUrls: ['game-history-dialog.component.scss']\r\n})\r\nexport class GameHistoryDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameHistoryDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: GameStatistics[] }) {\r\n    data.statistics.sort((a, b) => new Date(b.s).getTime() - new Date(a.s).getTime());\r\n  }\r\n\r\n  getDuration(stat: GameStatistics): Date {\r\n    return new Date(new Date(stat.f).getTime() - new Date(stat.s).getTime());\r\n  }\r\n\r\n  getPlayers(players: string[]): string[] {\r\n    return players.map(p => {\r\n      const pna = p.split(STAT_NAME_SEPARATOR);\r\n      let result = pna[0];\r\n      if (pna.length === 2) {\r\n        result += '(' + pna[1] + ')';\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getAppVersion(): string {\r\n    return environment.appVersion ? environment.appVersion : '';\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\">\r\n    <p>History</p>\r\n    <p>v{{ getAppVersion() }}</p>\r\n  </div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Date</th>\r\n        <th>Duration</th>\r\n        <th>Type</th>\r\n        <th>Config</th>\r\n        <th>Round</th>\r\n        <th>Winner(s)</th>\r\n        <th>Loser(s)</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.s | date:'medium' }}</td>\r\n        <td>{{ getDuration(stat) | date: 'mm:ss' }}</td>\r\n        <td>{{ stat.g }}</td>\r\n        <td>{{ stat.c }}</td>\r\n        <td>{{ stat.r + 1 }}</td>\r\n        <td>{{ getPlayers(stat.w) }}</td>\r\n        <td>{{ getPlayers(stat.l) }}</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\n\r\n@Component({\r\n  templateUrl: 'game-statistics-dialog.component.html',\r\n  styleUrls: ['game-statistics-dialog.component.scss']\r\n})\r\nexport class GameStatisticsDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameStatisticsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: PlayerStatistics[] }) {\r\n    data.statistics.sort((a, b) => this.getRatio(b) - this.getRatio(a));\r\n  }\r\n\r\n  getRatio(stat: PlayerStatistics): number {\r\n    return Math.round(stat.w / (stat.w + stat.l) * 100);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>Statistics</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Player</th>\r\n        <th>Wins</th>\r\n        <th>Loses</th>\r\n        <th>All</th>\r\n        <th>Rate</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.n }}</td>\r\n        <td>{{ stat.w }}</td>\r\n        <td>{{ stat.l }}</td>\r\n        <td>{{ stat.l + stat.w }}</td>\r\n        <td>{{ getRatio(stat) }} %</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() reversRound: number;\r\n  @Input() info: number;\r\n\r\n  constructor(public route: Router,\r\n              public application: ApplicationStateService,\r\n              private dialogService: DialogService) {\r\n  }\r\n\r\n  quit() {\r\n    this.showConfirmation('Are you sure you want to navigate away from this page?', () => {\r\n      this.route.navigate(['/']);\r\n      this.playground.game.resetScore();\r\n      this.playground.multiplier = 1;\r\n      this.playground.extraEndingMsg = '';\r\n    });\r\n  }\r\n\r\n  newGame() {\r\n    this.showConfirmation('Are you sure you want to start a new game?', () => {\r\n      this.playground.newGame(true);\r\n    });\r\n  }\r\n\r\n  showSettings() {\r\n    this.showConfirmation('Are you sure you want to navigate to the settings page?', () => {\r\n      this.playground.reset();\r\n      this.playground.settingsOpen = true;\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    this.playground.undo();\r\n  }\r\n\r\n  showTable() {\r\n    const enabledFields: number[] = [];\r\n    const primaryFields: number[] = [];\r\n    const secondaryFields: number[] = [];\r\n    for (let i = 0; i <= 20; i++) {\r\n      if (this.playground.isFieldEnabled(i)) {\r\n        enabledFields.push(i);\r\n      }\r\n      if (this.playground.isPrimaryField(i)) {\r\n        primaryFields.push(i);\r\n      }\r\n      if (this.playground.isSecondaryField(i)) {\r\n        secondaryFields.push(i);\r\n      }\r\n    }\r\n    this.dialogService.openDartsTable(enabledFields, primaryFields, secondaryFields);\r\n  }\r\n\r\n  getInfo(): number {\r\n    return this.info || this.info === 0 ? this.info : this.getRound();\r\n  }\r\n\r\n  private showConfirmation(content: string, callback: () => void) {\r\n    if (this.playground.gameHistory.length) {\r\n      this.dialogService.openConfirmDialog('Confirmation', content)\r\n        .afterClosed().subscribe(data => {\r\n        if (data) {\r\n          callback();\r\n        }\r\n      });\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private getRound(): number {\r\n    const round = this.playground.game.round;\r\n    return this.reversRound ? (this.reversRound - round) : (round + 1);\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <button mat-raised-button (click)=\"newGame()\">\r\n    <mat-icon>refresh</mat-icon>\r\n  </button>\r\n  <button mat-raised-button (click)=\"undo()\">\r\n    <mat-icon>undo</mat-icon>\r\n  </button>\r\n</div>\r\n\r\n<div class=\"round-info\" (click)=\"showTable()\" [class.detailed]=\"application.settings.details\">\r\n  {{getInfo()}}\r\n</div>\r\n\r\n<div class=\"theme-chooser\">\r\n  <button mat-icon-button (click)=\"quit()\" color=\"primary\"><mat-icon>menu</mat-icon></button>\r\n  <button mat-icon-button (click)=\"showSettings()\" color=\"primary\"><mat-icon>build</mat-icon></button>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\n\r\n@Component({\r\n  templateUrl: 'game-type-statistics-dialog.component.html',\r\n  styleUrls: ['game-type-statistics-dialog.component.scss']\r\n})\r\nexport class GameTypeStatisticsDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameTypeStatisticsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: GameTypeStatistics[] }) {\r\n    data.statistics.sort((a, b) => b.count - a.count);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>Most Popular Games</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Game title</th>\r\n        <th>Count</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.name }}</td>\r\n        <td>{{ stat.count }}</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button mat-raised-button [mat-dialog-close]=\"true\" [color]=\"'primary'\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Router, Routes} from '@angular/router';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {routes} from '../../../app-game-types';\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  constructor(private readonly router: Router,\r\n              private readonly dialog: DialogService,\r\n              private readonly statisticsService: StatisticsService) {\r\n  }\r\n\r\n  randomGame() {\r\n    const random = Math.floor(Math.random() * routes.length);\r\n    this.router.navigate(['/' + routes[random].path]);\r\n  }\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n\r\n  openGameTypeStatistics() {\r\n    this.dialog.openGameTypeStatistics(this.statisticsService.getGameTypeStatistics());\r\n    // this.statisticsService.printStatistics();\r\n  }\r\n\r\n  openGameStatistics() {\r\n    this.dialog.openGameHistory(this.statisticsService.getGameStatistics());\r\n  }\r\n}\r\n","<div id=\"menu_title\">\n  <h1 (click)=\"randomGame()\">Select Game!</h1>\n</div>\n<div id=\"menu\">\n  <div class=\"button-line\" *ngFor=\"let k of [0,1,2,3]\">\n    <button mat-raised-button *ngFor=\"let g of getGameList().slice(k*3,k*3 + 3); let i = index\"\n                     [routerLink]=\"['/' + g.path]\" class=\"gameSelectBox {{'menu-button-' + k + '' + i}}\">\n      <mat-icon>{{g.data.icon}}</mat-icon>\n      <div class=\"title\">{{g.data.name}}</div>\n    </button>\n  </div>\n</div>\n<div class=\"version\">\n  <button mat-icon-button (click)=\"openGameTypeStatistics()\" [color]=\"'primary'\">\n    <mat-icon>stars</mat-icon>\n  </button>\n  <button mat-icon-button (click)=\"openGameStatistics()\" [color]=\"'primary'\">\n    <mat-icon>history</mat-icon>\n  </button>\n</div>\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService,\r\n              public application: ApplicationStateService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isPrimaryField(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondaryField(fieldIndex)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabled(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  throwNumber(fieldIndex: number) {\r\n    this.playground.throwNumber([this.playground.isFieldEnabled(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0,\r\n      Playground.getFieldValueFromIndex(fieldIndex)]);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\" [class.detailed]=\"application.settings.details\">\r\n\r\n  <ng-container *ngFor=\"let i of getNumbers()\">\r\n    <button mat-raised-button class=\"number\" [color]=\"getNumberColor(i-1)\"\r\n            [disabled]=\"isNumberDisabled(i-1)\" (click)=\"throwNumber(i-1)\">\r\n      {{i}}\r\n      <mat-icon *ngIf=\"playground.getFieldIcon(i-1)\">{{ playground.getFieldIcon(i-1)}}</mat-icon>\r\n      <p class=\"field-note\" *ngIf=\"playground.getFieldNote(i-1)\">{{ playground.getFieldNote(i-1)}}</p>\r\n      <p class=\"field-note-bottom\" *ngIf=\"playground.getFieldNoteBottom(i-1)\">{{ playground.getFieldNoteBottom(i-1)}}</p>\r\n    </button>\r\n  </ng-container>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"getNumberColor(20)\" [disabled]=\"isNumberDisabled(20)\"\r\n          (click)=\"throwNumber(20)\">\r\n    Bull\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(20)\">{{ playground.getFieldIcon(20)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(20)\">{{ playground.getFieldNote(20)}}</p>\r\n    <p class=\"field-note-bottom\" *ngIf=\"playground.getFieldNoteBottom(20)\">{{ playground.getFieldNoteBottom(20)}}</p>\r\n  </button>\r\n\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 2 ? 'primary' : ''\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">2x</button>\r\n  <button mat-raised-button class=\"number\" [color]=\"playground.multiplier === 3 ? 'primary' : ''\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">3x</button>\r\n\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n  <button mat-raised-button class=\"number\" (click)=\"playground.throwNumber([0,0])\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-player-score',\r\n  templateUrl: './player-score.component.html',\r\n  styleUrls: ['./player-score.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PlayerScoreComponent {\r\n  @Input() player: Player;\r\n  @Input() hasContent = true;\r\n  @Input() scoreDisplayed = true;\r\n  @Input() lifeDisplayed = false;\r\n  @Input() highlighted = false;\r\n\r\n  constructor(public readonly application: ApplicationStateService) {\r\n  }\r\n}\r\n","<div class=\"player_info\">\r\n  <div class=\"name\"><mat-icon *ngIf=\"highlighted\">offline_bolt</mat-icon>{{player.name}}</div>\r\n  <div class=\"shoots\">\r\n    <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\r\n    <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\r\n    <div class=\"shoot total\">{{!player.getThrowsTotal() ? '0' : player.getThrowsTotal()}}</div>\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n  <div class=\"line\" *ngIf=\"hasContent && application.settings.details\"></div>\r\n  <ng-content *ngIf=\"application.settings.details\"></ng-content>\r\n  <div class=\"line-space\" *ngIf=\"scoreDisplayed || lifeDisplayed\"></div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed && !lifeDisplayed\">{{player.score}}</div>\r\n  <div class=\"score\" *ngIf=\"!scoreDisplayed && lifeDisplayed\"><label>Life: </label>{{player.life}}</div>\r\n  <div class=\"score\" *ngIf=\"scoreDisplayed && lifeDisplayed\">\r\n    <label>Life: </label>{{player.life}}\r\n    <label>Score: </label>{{player.score}}\r\n  </div>\r\n  <div class=\"clear\"></div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'app-player-settings',\r\n  templateUrl: './player-settings.component.html',\r\n  styleUrls: ['./player-settings.component.scss']\r\n})\r\nexport class PlayerSettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  storedPlayers = [];\r\n\r\n  constructor(private application: ApplicationStateService) {\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  getOptions() {\r\n    return this.storedPlayers.filter(o => this.playground.game.players\r\n      .map(p => p.name).indexOf(o) === -1);\r\n  }\r\n\r\n  addPlayer(playerNameInput: any) {\r\n    this.playground.addPlayer(playerNameInput);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  playerSelected(event: MatAutocompleteSelectedEvent, playerNameInput: HTMLInputElement) {\r\n    this.playground.addPlayer(event.option);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n    playerNameInput.value = '';\r\n    playerNameInput.blur();\r\n  }\r\n}\r\n","<div class=\"add-player\">\r\n  <mat-form-field appearance=\"outline\" class=\"big\">\r\n    <mat-label>Player name</mat-label>\r\n    <input #playerNameInput type=\"text\" matInput placeholder=\"Enter name\"\r\n      [disabled]=\"!playground.canAddPlayer()\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"playerSelected($event, playerNameInput)\">\r\n      <mat-option *ngFor=\"let option of getOptions()\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button mat-icon-button (click)=\"addPlayer(playerNameInput)\" [disabled]=\"!playground.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button>\r\n</div>\r\n<div class=\"player-table\">\r\n  <div class=\"player-row\" *ngFor=\"let player of playground.game.players; let i = index\">\r\n    <div class=\"player-name\">{{player.name}}</div>\r\n    <button mat-icon-button (click)=\"playground.removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\r\n  </div>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() title: string;\r\n  @Input() rules: string;\r\n\r\n  constructor(private readonly dialogService: DialogService) {\r\n  }\r\n\r\n  openRules() {\r\n    this.dialogService.openDialog(this.title, this.rules);\r\n  }\r\n\r\n  openStatistics() {\r\n    this.dialogService.openGameStatisticsDialog(this.playground.getGameStatistics());\r\n  }\r\n\r\n  openHistory() {\r\n    this.dialogService.openGameHistory(this.playground.getGameHistory());\r\n  }\r\n}\r\n","<div class=\"settings\">\r\n  <h1>{{title}} Settings</h1>\r\n\r\n  <h2>Players</h2>\r\n  <app-player-settings [playground]=\"playground\"></app-player-settings>\r\n  <mat-divider></mat-divider>\r\n\r\n  <ng-content></ng-content>\r\n\r\n  <mat-divider></mat-divider>\r\n\r\n  <br/><br/>\r\n  <button mat-raised-button class=\"button shortmedium\" (click)=\"openStatistics()\">Player rank</button>\r\n  <button mat-raised-button class=\"button shortmedium\" (click)=\"openHistory()\">Game history</button>\r\n  <button mat-raised-button class=\"button shortmedium\" (click)=\"openRules()\">Rules</button>\r\n  <mat-divider></mat-divider>\r\n  <button mat-raised-button class=\"button big\" color=\"primary\" (click)=\"playground.newGame()\">Start</button>\r\n  <button mat-raised-button class=\"button big\" (click)=\"playground.quit()\">Cancel</button>\r\n\r\n</div>\r\n","export class ApplicationSettings {\r\n  theme = 0;\r\n  details = 0;\r\n}\r\n","export class FieldValue {\n  field: number;\n  value: number;\n\n  constructor(field: number, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","export class GameStatistics {\r\n  g: string;\r\n  w: string[];\r\n  l: string[];\r\n  r: number;\r\n  s: string;\r\n  f: string;\r\n  c?: string;\r\n}\r\n","import {Throw} from './throw.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class Player {\r\n  score = 0;\r\n  throws: number[] = [];\r\n  throwsHistory: Throw[];\r\n  win = false;\r\n  winDateTime = 0;\r\n  first = true;\r\n  state: PlaygroundState;\r\n  life = 1;\r\n\r\n  constructor(public id: number, public name = '') {\r\n  }\r\n\r\n  setWin(win = true) {\r\n    this.win = win;\r\n    this.winDateTime = win ? new Date().getTime() : 0;\r\n  }\r\n\r\n  getThrowsTotal(): number {\r\n    return this.throws.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  addThrowHistory(thr: Throw) {\r\n    this.throwsHistory.push(thr);\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n    this.throws = [];\r\n    this.throwsHistory = [];\r\n    this.win = false;\r\n    this.winDateTime = 0;\r\n    this.first = true;\r\n  }\r\n\r\n  clone(): Player {\r\n    const player = new Player(this.id, this.name);\r\n    player.score = this.score;\r\n    player.life = this.life;\r\n    player.throws = [];\r\n    this.throws.forEach(t => {\r\n      player.throws.push(t);\r\n    });\r\n    player.throwsHistory = this.throwsHistory;\r\n    player.win = this.win;\r\n    player.winDateTime = this.winDateTime;\r\n    player.first = this.first;\r\n    player.throwsHistory = [];\r\n    this.throwsHistory.forEach(throws => {\r\n      player.throwsHistory.push(throws.clone());\r\n    });\r\n    if (this.state) {\r\n      player.state = this.state.clone();\r\n    }\r\n    return player;\r\n  }\r\n}\r\n","import {FieldValue} from './field-value.model';\r\n\r\nexport abstract class PlaygroundState {\r\n\r\n  getFieldValue(list: FieldValue[], fieldIndex: number): FieldValue {\r\n    const filtered = list.filter(f => f.field === fieldIndex);\r\n    if (filtered.length === 0) {\r\n      list.push(new FieldValue(fieldIndex, 0));\r\n    }\r\n    return list.filter(f => f.field === fieldIndex)[0];\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return false;\r\n  }\r\n\r\n  abstract clone(): PlaygroundState;\r\n}\r\n","import {OnInit} from '@angular/core';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {Player} from './player.model';\r\nimport {Throw} from './throw.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {GameService} from '~services/game.service';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\n\r\nexport const FIELDS_COUNT = 21;\r\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\r\n\r\nexport abstract class Playground<T extends PlaygroundState> implements OnInit {\r\n\r\n  throwEnabled = true;\r\n  settingsOpen = true;\r\n  gameHistory: GameService[];\r\n  nextEnabled = true;\r\n  zeroEnabled = true;\r\n  multiEnabled = true;\r\n  playground = this;\r\n  multiplier: number;\r\n  extraEndingMsg: string;\r\n  gameStatistics: GameStatistics;\r\n\r\n  protected constructor(public application: ApplicationStateService,\r\n                        public game: GameService,\r\n                        public route: Router,\r\n                        public dialogService: DialogService,\r\n                        public soundService: SoundService,\r\n                        public statisticsService: StatisticsService,\r\n                        public gameName: string,\r\n                        public minimumNumberOfPlayers = 1,\r\n                        public maximumNumberOfPlayers?: number) {\r\n  }\r\n\r\n  static getFieldValueFromIndex(fieldIndex: number): number {\r\n    return fieldIndex === 20 ? 25 : fieldIndex + 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.settingsOpen = true;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  throwNumber(args: number[]) {\r\n    const score = args[0];\r\n    const scoreReal = args[1];\r\n    if (this.throwEnabled) {\r\n      this.saveGameInHistory();\r\n      this.throwEnabled = false;\r\n      if (score === 25 && this.multiplier === 3) {\r\n        this.multiplier = 1;\r\n      }\r\n\r\n      const actualPlayer = this.game.getActualPlayer();\r\n      const fieldIndex = score === 25 ? 20 : score - 1;\r\n\r\n      actualPlayer.addThrowHistory(new Throw(score, this.multiplier, this.game.actualThrow));\r\n      if (this.game.actualThrow === 0) {\r\n        actualPlayer.throws = [];\r\n      }\r\n      actualPlayer.throws[this.game.actualThrow] = score * this.multiplier;\r\n      this.game.actualThrow++;\r\n\r\n      this.calculatePoints(actualPlayer, fieldIndex, score, scoreReal);\r\n      this.checkPlayerState(actualPlayer);\r\n\r\n      this.multiplier = 1;\r\n      const winners = this.game.players.filter(p => p.win);\r\n      if (winners.length > 0) {\r\n        if ((this.game.victoryFirst || this.game.getNumberOfPlayers() - winners.length <= 1) || !this.game.victoryFirst) {\r\n          const content = this.extraEndingMsg ? this.extraEndingMsg : 'Round: #' + (this.game.round + 1);\r\n          this.finishStatistics();\r\n          this.dialogService.openDialog('Game Over!', content, this.getTheFinalResult());\r\n          this.newGame(true);\r\n        } else {\r\n          while (this.game.getActualPlayer().win) {\r\n            this.game.nextPlayer();\r\n          }\r\n        }\r\n      }\r\n\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p) || !this.getPlayerState(p).isInactive());\r\n      if (!activePlayers.length) {\r\n        const content = this.extraEndingMsg ? this.extraEndingMsg : 'Round: #' + (this.game.round + 1);\r\n        this.finishStatistics();\r\n        this.dialogService.openDialog('Game Over!', content, this.getTheFinalResult());\r\n        this.newGame(true);\r\n      }\r\n\r\n      this.throwEnabled = true;\r\n    }\r\n  }\r\n\r\n  getPlayerState(player: Player): T {\r\n    return player.state as T;\r\n  }\r\n\r\n  canAddPlayer(): boolean {\r\n    return this.game.getNumberOfPlayers() < MAXIMUM_NUMBER_OF_PLAYERS;\r\n  }\r\n\r\n  addPlayer(name: any) {\r\n    if (!!name.value.trim().length && !this.game.players.some(p => p.name === name.value)) {\r\n      this.game.players.push(new Player(uuid(), name.value));\r\n      this.application.storePlayer(name.value);\r\n    }\r\n    name.value = '';\r\n  }\r\n\r\n  removePlayer(player: Player) {\r\n    this.game.players = this.game.players.filter(p => p !== player);\r\n  }\r\n\r\n  newGame(rotate = false) {\r\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\r\n    if (!this.playerSettingsValidation()) {\r\n      let msg = 'Number of players are incorrect.';\r\n      if (this.minimumNumberOfPlayers) {\r\n        msg += ` (minimum: ${this.minimumNumberOfPlayers}`;\r\n      }\r\n      if (this.maximumNumberOfPlayers) {\r\n        msg += (this.minimumNumberOfPlayers ? ', ' : ' (') + `maximum: ${this.maximumNumberOfPlayers}).`;\r\n      } else {\r\n        msg += this.minimumNumberOfPlayers ? ').' : '.';\r\n      }\r\n      this.dialogService.openErrorDialog('Error!', msg);\r\n    } else if (this.settingsOpen) {\r\n      this.dialogService.openErrorDialog('Error!', 'Settings is incorrect.');\r\n    }\r\n    if (rotate) {\r\n      this.game.rotatePlayers();\r\n    }\r\n    this.reset();\r\n  }\r\n\r\n  triplePoint() {\r\n    this.multiplier = this.multiplier === 3 ? 1 : 3;\r\n  }\r\n\r\n  doublePoint() {\r\n    this.multiplier = this.multiplier === 2 ? 1 : 2;\r\n  }\r\n\r\n  undo() {\r\n    if (this.gameHistory.length > 0) {\r\n      this.game = this.gameHistory.pop();\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    const actThrow = this.game.actualThrow;\r\n    this.throwNumber([0, 0]);\r\n    if (actThrow !== 2) {\r\n      this.skip();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.gameHistory = [];\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n    this.game.actualFieldIndex = 0;\r\n    this.customReset();\r\n    this.startStatistics();\r\n  }\r\n\r\n  quit() {\r\n    this.reset();\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNoteBottom(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + player.score;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return '';\r\n  }\r\n\r\n  getGameStatistics(): PlayerStatistics[] {\r\n    const statistics = this.statisticsService.getGameStatistics(this.playground.gameName);\r\n    const players: PlayerStatistics[] = [];\r\n    statistics.forEach(stat => {\r\n      this.parseStatistics(stat, 'l', players);\r\n      this.parseStatistics(stat, 'w', players);\r\n    });\r\n    return players;\r\n  }\r\n\r\n  getGameHistory(): GameStatistics[] {\r\n    return this.statisticsService.getGameStatistics(this.playground.gameName);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    winners = winners.sort((p1, p2) => p1.winDateTime < p2.winDateTime ? -1 : 1)\r\n      .slice(0, 1).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id))\r\n      .map(p => {\r\n        const c = p.clone();\r\n        c.win = false;\r\n        return c;\r\n      });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  private startStatistics() {\r\n    this.gameStatistics = new GameStatistics();\r\n    this.gameStatistics.s = new Date().toISOString();\r\n    this.gameStatistics.g = this.gameName;\r\n  }\r\n\r\n  private finishStatistics() {\r\n    this.gameStatistics.f = new Date().toISOString();\r\n    this.gameStatistics.w = this.game.players.filter(p => p.win).map(p => this.decoratePlayerStat(p));\r\n    this.gameStatistics.l = this.game.players.filter(p => !p.win).map(p => this.decoratePlayerStat(p));\r\n    this.gameStatistics.r = this.game.round;\r\n    this.gameStatistics.c = this.getGameConfig();\r\n    this.statisticsService.saveStatistics(this.gameStatistics);\r\n  }\r\n\r\n  private parseStatistics(stat: GameStatistics, field: 'w' | 'l', players: PlayerStatistics[]) {\r\n    stat[field].forEach(p => {\r\n      const name = p.split(STAT_NAME_SEPARATOR)[0];\r\n      let player = players.find(pl => pl.n === name);\r\n      if (!player) {\r\n        player = {n: name, w: 0, l: 0};\r\n        players.push(player);\r\n      }\r\n      player[field]++;\r\n    });\r\n  }\r\n\r\n  private playerSettingsValidation(): boolean {\r\n    const players: Player[] = [];\r\n    this.game.players.forEach(player => {\r\n      if (player.name.length !== 0) {\r\n        players.push(player);\r\n      }\r\n    });\r\n    this.game.players = players;\r\n    return players.length >= this.minimumNumberOfPlayers &&\r\n      (!this.maximumNumberOfPlayers || players.length <= this.maximumNumberOfPlayers);\r\n  }\r\n\r\n  private saveGameInHistory() {\r\n    this.gameHistory.push(this.game.clone());\r\n  }\r\n\r\n  abstract customReset(): void;\r\n\r\n  abstract calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal?: number);\r\n\r\n  abstract checkPlayerState(player: Player);\r\n}\r\n","export class Throw {\n  field: string;\n\n  constructor(public score: number, public multi: number, public order: number) {\n    this.field = this.score === 25 ? 'B' :  this.score + '';\n  }\n\n  clone(): Throw {\n    return new Throw(this.score, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {ApplicationSettings} from '~models/application-settings.model';\r\n\r\nconst APPLICATION_KEY = 'ApplicationSettings';\r\nconst PLAYER_KEY = 'Players';\r\nconst THEMES = ['light-theme', 'light-theme-blue', 'dark-theme', 'dark-red'];\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApplicationStateService {\r\n\r\n  settings = new ApplicationSettings();\r\n\r\n  constructor() {\r\n    const data = localStorage.getItem(APPLICATION_KEY);\r\n    if (data) {\r\n      this.settings = JSON.parse(data);\r\n    }\r\n    this.setTheme();\r\n  }\r\n\r\n  toggleColorTheme() {\r\n    this.settings.theme = (this.settings.theme + 1) % THEMES.length;\r\n    this.setTheme();\r\n    this.saveSettings();\r\n  }\r\n\r\n  toggleDetails() {\r\n    this.settings.details = (this.settings.details + 1) % 2;\r\n    this.saveSettings();\r\n  }\r\n\r\n  getStoredPlayers(): string[] {\r\n    const data = localStorage.getItem(PLAYER_KEY);\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  storePlayer(name: string) {\r\n    const players = [name, ...this.getStoredPlayers()].filter((v, i, a) => a.indexOf(v) === i);\r\n    localStorage.setItem(PLAYER_KEY, JSON.stringify(players));\r\n  }\r\n\r\n  private setTheme() {\r\n    THEMES.forEach(theme => {\r\n      document.body.className = document.body.className.replace(theme, '');\r\n    });\r\n    document.body.classList.add(THEMES[this.settings.theme]);\r\n  }\r\n\r\n  private saveSettings() {\r\n    localStorage.setItem(APPLICATION_KEY, JSON.stringify(this.settings));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\nimport {DartsTableDialogComponent} from '~components/darts-table/darts-table-dialog.component';\r\nimport {ConfirmDialogComponent} from '~components/confirm-dialog/confirm-dialog.component';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\nimport {GameStatisticsDialogComponent} from '~components/game-statistics-dialog/game-statistics-dialog.component';\r\nimport {GameHistoryDialogComponent} from '~components/game-history-dialog/game-history-dialog.component';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\nimport {GameTypeStatisticsDialogComponent} from '~components/game-type-statistics-dialog/game-type-statistics-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n\r\n  openGameStatisticsDialog(statistics: PlayerStatistics[]) {\r\n    return this.dialog.open(GameStatisticsDialogComponent, {\r\n      data: {statistics},\r\n    });\r\n  }\r\n\r\n  openGameHistory(statistics: GameStatistics[]) {\r\n    return this.dialog.open(GameHistoryDialogComponent, {\r\n      data: {statistics},\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n  }\r\n\r\n  openGameTypeStatistics(statistics: GameTypeStatistics[]) {\r\n    return this.dialog.open(GameTypeStatisticsDialogComponent, {\r\n      data: {statistics},\r\n    });\r\n  }\r\n\r\n  openErrorDialog(title = '', content = ''): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'error-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n\r\n  openConfirmDialog(title = '', content = ''): MatDialogRef<ConfirmDialogComponent> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      panelClass: 'confirm-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n\r\n  openDartsTable(fieldIndexes: number[], primaryFieldIndexes: number[], secondaryFields: number[]) {\r\n    return this.dialog.open(DartsTableDialogComponent, {\r\n      data: {field: fieldIndexes, primary: primaryFieldIndexes, secondary: secondaryFields}\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Player} from '../models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GameService {\r\n  players: Player[] = [];\r\n  actualPlayerIndex: number;\r\n  actualThrow: number;\r\n  actualFieldIndex = 0;\r\n  round: number;\r\n  victoryFirst = true;\r\n  numbs: number[] = [];\r\n\r\n  toggleVictoryFirst() {\r\n    this.victoryFirst = !this.victoryFirst;\r\n  }\r\n\r\n  isTheLastThrow(): boolean {\r\n    return this.actualThrow === 3;\r\n  }\r\n\r\n  getActualPlayer(): Player {\r\n    return this.players[this.actualPlayerIndex];\r\n  }\r\n\r\n  getActivePlayers(): Player[] {\r\n    return this.players.filter(p => !p.isInactive());\r\n  }\r\n\r\n  getNextPlayer(): Player {\r\n    let index = this.actualPlayerIndex + 1 === this.players.length ? 0 : this.actualPlayerIndex + 1;\r\n    while (this.players[index].isInactive()) {\r\n      index = index + 1 === this.players.length ? 0 : index + 1;\r\n    }\r\n    return this.players[index];\r\n  }\r\n\r\n  getPreviousPlayer(): Player {\r\n    let index = this.actualPlayerIndex === 0 ? this.players.length - 1 : this.actualPlayerIndex - 1;\r\n    while (this.players[index].isInactive()) {\r\n      index = index === 0 ? this.players.length - 1 : index - 1;\r\n    }\r\n    return this.players[index];\r\n  }\r\n\r\n  nextPlayer(): void {\r\n    if (this.isActualPlayerTheLast()) {\r\n      this.nextRound();\r\n    }\r\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\r\n    this.actualThrow = 0;\r\n  }\r\n\r\n  getNumberOfPlayers(): number {\r\n    return this.players.length;\r\n  }\r\n\r\n  getTheFirstPlayer(): Player {\r\n    return this.players[0];\r\n  }\r\n\r\n  isTheFirstPlayer(player: Player): boolean {\r\n    return player.id === this.getTheFirstPlayer().id;\r\n  }\r\n\r\n  isActualPlayerIsTheFirst(): boolean {\r\n    return this.isTheFirstPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheLastPlayer(): Player {\r\n    return this.players[this.getNumberOfPlayers() - 1];\r\n  }\r\n\r\n  isTheLastPlayer(player: Player): boolean {\r\n    return player.id === this.getTheLastPlayer().id;\r\n  }\r\n\r\n  isActualPlayerTheLast(): boolean {\r\n    return this.isTheLastPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheBestPlayers(): Player[] {\r\n    let max = this.players[0].score;\r\n    const activePlayers = this.getActivePlayers();\r\n    activePlayers.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    return activePlayers.filter(p => p.score === max);\r\n  }\r\n\r\n  isTheBestPlayer(actPlayer: Player): boolean {\r\n    const best = this.getTheBestPlayers();\r\n    return actPlayer.score === ((best && best.length) ? best[0].score : 0);\r\n  }\r\n\r\n  isTheWorstPlayer(actPlayer: Player): boolean {\r\n    let min = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      min = player.score < min ? player.score : min;\r\n    });\r\n    return actPlayer.score === min;\r\n  }\r\n\r\n  nextRound(): void {\r\n    this.round++;\r\n  }\r\n\r\n  resetScore(): void {\r\n    this.players.forEach(player => player.reset());\r\n    this.actualPlayerIndex = 0;\r\n    this.actualThrow = 0;\r\n    this.round = 0;\r\n  }\r\n\r\n  rotatePlayers(): void {\r\n    this.players.push(this.players.shift());\r\n  }\r\n\r\n  clone(): GameService {\r\n    const game = new GameService();\r\n    game.actualPlayerIndex = this.actualPlayerIndex;\r\n    game.actualThrow = this.actualThrow;\r\n    game.actualFieldIndex = this.actualFieldIndex;\r\n    game.round = this.round;\r\n    game.numbs = this.numbs.map(n => n);\r\n    const players: Player[] = [];\r\n    this.players.forEach(player => {\r\n      players.push(player.clone());\r\n    });\r\n    game.players = players;\r\n    return game;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SoundService {\r\n\r\n  audioElement: HTMLAudioElement;\r\n\r\n  no() {\r\n    this.play('oh_no.mp3');\r\n  }\r\n\r\n  private play(soundFileName: string) {\r\n    this.audioElement.src = `assets/sounds/${soundFileName}`;\r\n    this.audioElement.play();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {StorageService} from '~services/storage.service';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\n\r\nexport const STAT_NAME_SEPARATOR = '____';\r\nconst STATISTICS_STORAGE_KEY = 'statistics';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StatisticsService {\r\n\r\n  constructor(private readonly storageService: StorageService) {\r\n  }\r\n\r\n  saveStatistics(statistics: GameStatistics) {\r\n    const stat = this.storageService.getObject(STATISTICS_STORAGE_KEY);\r\n    if (stat) {\r\n      stat.push(statistics);\r\n      this.storageService.setObject(STATISTICS_STORAGE_KEY, stat);\r\n    } else {\r\n      this.storageService.setObject(STATISTICS_STORAGE_KEY, [statistics]);\r\n    }\r\n  }\r\n\r\n  getGameStatistics(gameName?: string): GameStatistics[] {\r\n    const statistics = this.storageService.getObject(STATISTICS_STORAGE_KEY);\r\n    return gameName ? statistics.filter(i => i.g === gameName) : statistics;\r\n  }\r\n\r\n  getPlayerStatistics(playerName: string, gameName?: string): GameStatistics[] {\r\n    const playerStat = this.storageService.getObject(STATISTICS_STORAGE_KEY).filter(i =>\r\n      i.l.some(p => p.indexOf(playerName) !== -1) ||\r\n      i.w.some(p => p.indexOf(playerName) !== -1));\r\n    return gameName ? playerStat.filter(i => i.g === gameName) : playerStat;\r\n  }\r\n\r\n  getGameTypeStatistics(): GameTypeStatistics[] {\r\n    const stat = this.storageService.getObject(STATISTICS_STORAGE_KEY) as GameStatistics[];\r\n    const games: GameTypeStatistics[] = [];\r\n    stat.forEach(s => {\r\n      let type = games.find(g => g.name === s.g);\r\n      if (!type) {\r\n        type = {name: s.g, count: 0};\r\n        games.push(type);\r\n      }\r\n      type.count++;\r\n    });\r\n    return games;\r\n  }\r\n\r\n  printStatistics() {\r\n    console.log(JSON.stringify(this.storageService.getObject(STATISTICS_STORAGE_KEY)));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class StorageService {\n\n  storage: Storage;\n\n  constructor() {\n    this.storage = localStorage;\n  }\n\n  hasItem(key: string): boolean {\n    return !!this.getItem(key);\n  }\n\n  getItem(key: string): string {\n    return this.storage.getItem(key);\n  }\n\n  getObject(key: string): any {\n    return JSON.parse(this.getItem(key));\n  }\n\n  setItem(key: string, value: string) {\n    this.storage.setItem(key, value);\n  }\n\n  setObject(key: string, value: any) {\n    this.setItem(key, JSON.stringify(value));\n  }\n\n  removeItem(key: string) {\n    this.storage.removeItem(key);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from '../material.module';\nimport {DialogComponent} from '~components/dialog/dialog.component';\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\nimport {PlayerSettingsComponent} from '~components/player-settings/player-settings.component';\nimport {SettingsComponent} from '~components/settings/settings.component';\nimport {PlayerScoreComponent} from '~components/player-score/player-score.component';\nimport {DartsTableDialogComponent} from '~components/darts-table/darts-table-dialog.component';\nimport {ConfirmDialogComponent} from '~components/confirm-dialog/confirm-dialog.component';\nimport {GameStatisticsDialogComponent} from '~components/game-statistics-dialog/game-statistics-dialog.component';\nimport {GameHistoryDialogComponent} from '~components/game-history-dialog/game-history-dialog.component';\nimport {GameTypeStatisticsDialogComponent} from '~components/game-type-statistics-dialog/game-type-statistics-dialog.component';\nimport {MenuComponent} from '~components/menu/menu.component';\nimport {RouterModule} from '@angular/router';\n\nconst components = [NumberPlateComponent, GameToolbarComponent, DartsTableDialogComponent, GameStatisticsDialogComponent,\n  DialogComponent, PlayerSettingsComponent, SettingsComponent, PlayerScoreComponent, ConfirmDialogComponent,\n  GameHistoryDialogComponent, GameTypeStatisticsDialogComponent, MenuComponent];\n\n@NgModule({\n  imports: [CommonModule, MaterialModule, RouterModule],\n  declarations: components,\n  exports: [CommonModule, FormsModule, MaterialModule, ...components],\n  entryComponents: [DialogComponent, DartsTableDialogComponent, GameStatisticsDialogComponent,\n    GameHistoryDialogComponent, GameTypeStatisticsDialogComponent]\n})\nexport class SharedModule {\n}\n","export class X01Settings {\n\n  startValue = 201;\n  start = 1;\n  checkout = 2;\n\n  isNormalStart(): boolean {\n    return this.start === 1;\n  }\n\n  isDoubleStart(): boolean {\n    return this.start === 2;\n  }\n\n  isTripleStart(): boolean {\n    return this.start === 3;\n  }\n\n  isNormalCheckout(): boolean {\n    return this.checkout === 1;\n  }\n\n  isDoubleCheckout(): boolean {\n    return this.checkout === 2;\n  }\n\n  isTripleCheckout(): boolean {\n    return this.checkout === 3;\n  }\n\n  isHighScoreGame(): boolean {\n    return this.checkout === 4;\n  }\n\n  setStart(start: number) {\n    this.start = start;\n  }\n\n  setCheckout(checkout: number) {\n    this.checkout = checkout;\n  }\n\n  setStartValue(startValue: number) {\n    this.startValue = startValue;\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {X01Settings} from './models/x01.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\n\r\n@Component({\r\n  templateUrl: './x01.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class X01Component extends Playground<PlaygroundState> {\r\n\r\n  settings: X01Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, statisticsService: StatisticsService) {\r\n    super(application, game, route, dialogService, soundService, statisticsService, 'x01');\r\n    this.settings = new X01Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const validStart = !player.first || this.settings.isNormalStart()\r\n      || (player.first\r\n        && ((this.settings.isDoubleStart() && this.multiplier === 2)\r\n          || (this.settings.isTripleStart() && this.multiplier === 3)));\r\n    if (validStart) {\r\n      const actualScore = score * this.multiplier;\r\n      player.first = false;\r\n      player.score -= actualScore;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    let next = false;\r\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\r\n      ((player.score === 0 && (this.settings.isNormalCheckout()\r\n        || (this.settings.isDoubleCheckout() && this.multiplier === 2)\r\n        || (this.settings.isTripleCheckout() && this.multiplier === 3))))) {\r\n      player.setWin();\r\n      next = true;\r\n    } else if (player.score <= 0\r\n      || (this.settings.isDoubleCheckout() && player.score < 2)\r\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\r\n      player.throws.forEach(t => player.score += t);\r\n      next = true;\r\n      this.dialogService.openErrorDialog(`${this.game.getActualPlayer().name} busted!`);\r\n    }\r\n    if (this.game.isTheLastThrow() || next) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.startValue);\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.startValue + '';\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [title]=\"'X01'\" [playground]=\"playground\"\r\n                [rules]=\"'All players start with 301/501 points and attempt to reach zero. If a player scores more ' +\r\n                 'than the total required to reach zero, the player “busts” and the score returns to the score that ' +\r\n                  'was existing at the start of the turn.'\">\r\n\r\n    <h2>Games</h2>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===101?'primary':''\"\r\n            (click)=\"settings.setStartValue(101)\">101\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===201?'primary':''\"\r\n            (click)=\"settings.setStartValue(201)\">201\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===301?'primary':''\"\r\n            (click)=\"settings.setStartValue(301)\">301\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===501?'primary':''\"\r\n            (click)=\"settings.setStartValue(501)\">501\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===701?'primary':''\"\r\n            (click)=\"settings.setStartValue(701)\">701\r\n    </button>\r\n    <button mat-raised-button class=\"button\" [color]=\"settings.startValue===901?'primary':''\"\r\n            (click)=\"settings.setStartValue(901)\">901\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check In</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===1?'primary':''\"\r\n            (click)=\"settings.setStart(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===2?'primary':''\"\r\n            (click)=\"settings.setStart(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.start===3?'primary':''\"\r\n            (click)=\"settings.setStart(3)\">Triple\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Check Out</h2>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===1?'primary':''\"\r\n            (click)=\"settings.setCheckout(1)\">Single\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===2?'primary':''\"\r\n            (click)=\"settings.setCheckout(2)\">Double\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===3?'primary':''\"\r\n            (click)=\"settings.setCheckout(3)\">Triple\r\n    </button>\r\n    <button mat-raised-button class=\"button shortmedium\" [color]=\"settings.checkout===4?'primary':''\"\r\n            (click)=\"settings.setCheckout(4)\">None\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <ng-container *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </ng-container>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  appVersion: require('../../package.json').version,\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}