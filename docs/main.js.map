{"version":3,"file":"main.js","mappings":"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,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,EACX,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,EACV,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,CAAC,EACV,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,EACX,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,EACZ,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EACX,CAAC,EAAE,EAAE,CAAC,EAAE,EAAE,CAAC,CACZ,EACD,CACE,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,EACV,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,EACX,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CACX,EACD,CACE,CAAC,CAAC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","sources":["./src/app/app-game-types.ts","./src/app/app-routing.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/aroundclock/around-clock.component.ts","./src/app/aroundclock/around-clock.component.html","./src/app/aroundclock/around-clock.module.ts","./src/app/aroundclock/models/around-clock.settings.model.ts","./src/app/aroundclock/models/around-clock.state.model.ts","./src/app/capture-the-flag/capture-the-flag.component.ts","./src/app/capture-the-flag/capture-the-flag.component.html","./src/app/capture-the-flag/capture-the-flag.module.ts","./src/app/capture-the-flag/models/capture-the-flag.settings.model.ts","./src/app/capture-the-flag/models/capture-the-flag.state.model.ts","./src/app/cricket/cricket.component.ts","./src/app/cricket/cricket.component.html","./src/app/cricket/cricket.module.ts","./src/app/cricket/models/cricet.settings.model.ts","./src/app/cricket/models/cricet.state.model.ts","./src/app/duel/duel.component.ts","./src/app/duel/duel.component.html","./src/app/duel/duel.module.ts","./src/app/duel/models/duel.settings.model.ts","./src/app/duel/models/duel.state.model.ts","./src/app/fives/fives.component.ts","./src/app/fives/fives.component.html","./src/app/fives/fives.module.ts","./src/app/fives/models/fives.settings.model.ts","./src/app/hare-and-hound/hare-and-hound.component.ts","./src/app/hare-and-hound/hare-and-hound.component.html","./src/app/hare-and-hound/hare-and-hound.module.ts","./src/app/hare-and-hound/models/hare-and-hound.settings.model.ts","./src/app/hare-and-hound/models/hare-and-hound.state.model.ts","./src/app/imitator/imitator.component.ts","./src/app/imitator/imitator.component.html","./src/app/imitator/imitator.module.ts","./src/app/imitator/models/imitator.settings.model.ts","./src/app/imitator/models/imitator.state.model.ts","./src/app/killer/killer.component.ts","./src/app/killer/killer.component.html","./src/app/killer/killer.module.ts","./src/app/killer/models/killer.settings.model.ts","./src/app/killer/models/killer.state.model.ts","./src/app/knockout/knockout.component.ts","./src/app/knockout/knockout.component.html","./src/app/knockout/knockout.module.ts","./src/app/knockout/models/knockout.settings.model.ts","./src/app/knockout/models/knockout.state.model.ts","./src/app/material.module.ts","./src/app/route-animation.ts","./src/app/scam/models/scam.settings.model.ts","./src/app/scam/models/scam.state.model.ts","./src/app/scam/scam.component.ts","./src/app/scam/scam.component.html","./src/app/scam/scam.module.ts","./src/app/shanghai/models/shanghai.settings.model.ts","./src/app/shanghai/models/shanghai.state.model.ts","./src/app/shanghai/shanghai.component.ts","./src/app/shanghai/shanghai.component.html","./src/app/shanghai/shanghai.module.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.ts","./src/app/shared/components/confirm-dialog/confirm-dialog.component.html","./src/app/shared/components/dialog/dialog.component.ts","./src/app/shared/components/dialog/dialog.component.html","./src/app/shared/components/game-history-dialog/game-history-dialog.component.ts","./src/app/shared/components/game-history-dialog/game-history-dialog.component.html","./src/app/shared/components/game-statistics-dialog/game-statistics-dialog.component.ts","./src/app/shared/components/game-statistics-dialog/game-statistics-dialog.component.html","./src/app/shared/components/game-toolbar/game-toolbar.component.ts","./src/app/shared/components/game-toolbar/game-toolbar.component.html","./src/app/shared/components/game-type-statistics-dialog/game-type-statistics-dialog.component.ts","./src/app/shared/components/game-type-statistics-dialog/game-type-statistics-dialog.component.html","./src/app/shared/components/menu/menu.component.ts","./src/app/shared/components/menu/menu.component.html","./src/app/shared/components/number-plate-shanghai/number-plate-shanghai.component.html","./src/app/shared/components/number-plate-shanghai/number-plate-shanghai.component.ts","./src/app/shared/components/number-plate-visual/number-plate-visual.component.ts","./src/app/shared/components/number-plate-visual/number-plate-visual.component.html","./src/app/shared/components/number-plate/number-plate.component.ts","./src/app/shared/components/number-plate/number-plate.component.html","./src/app/shared/components/player-score/player-score.component.html","./src/app/shared/components/player-score/player-score.component.ts","./src/app/shared/components/player-settings/player-settings.component.html","./src/app/shared/components/player-settings/player-settings.component.ts","./src/app/shared/components/settings/settings.component.ts","./src/app/shared/components/settings/settings.component.html","./src/app/shared/models/application-settings.model.ts","./src/app/shared/models/field-value.model.ts","./src/app/shared/models/game-statistics.model.ts","./src/app/shared/models/player.model.ts","./src/app/shared/models/playground-state.model.ts","./src/app/shared/models/playground.model.ts","./src/app/shared/models/throw.model.ts","./src/app/shared/services/application-state.service.ts","./src/app/shared/services/bot.service.ts","./src/app/shared/services/dialog.service.ts","./src/app/shared/services/game.service.ts","./src/app/shared/services/sound.service.ts","./src/app/shared/services/statistics.service.ts","./src/app/shared/services/storage.service.ts","./src/app/shared/shared.module.ts","./src/app/theme.constant.ts","./src/app/x01/models/x01.settings.model.ts","./src/app/x01/x01.component.ts","./src/app/x01/x01.component.html","./src/app/x01/x01.module.ts","./src/environments/environment.ts","./src/main.ts"],"sourcesContent":["import {Routes} from '@angular/router';\r\n\r\nexport const routes: Routes = [\r\n  {\r\n    path: 'x01',\r\n    data: {name: 'Classic X01', color: '#009688', icon: 'emoji_food_beverage', bot: true}\r\n  },\r\n  {\r\n    path: 'cricket',\r\n    data: {name: 'Ultimate Cricket', color: '#0a756b', icon: 'sports_cricket'}\r\n  },\r\n  {\r\n    path: 'around-clock',\r\n    data: {name: 'Around The Clock', color: '#0f5851', icon: 'cached', bot: true}\r\n  },\r\n  {\r\n    path: 'shanghai',\r\n    data: {name: 'Shanghai, Halve It', color: '#0f5851', icon: 'emoji_symbols'}\r\n  },\r\n  {\r\n    path: 'fives',\r\n    data: {name: 'Fives', color: '#009688', icon: 'add_box'}\r\n  },\r\n  {\r\n    path: 'hare-and-hound',\r\n    data: {name: 'Hare and Hound', color: '#0a756b', icon: 'cruelty_free'}\r\n  },\r\n  {\r\n    path: 'knockout',\r\n    data: {name: 'Knockout', color: '#009688', icon: 'sports_mma'}\r\n  },\r\n  {\r\n    path: 'killer',\r\n    data: {name: 'Killer', color: '#0a756b', icon: 'gps_fixed'}\r\n  },\r\n  {\r\n    path: 'capture-the-flag',\r\n    data: {name: 'Capture the Flag', color: '#0a756b', icon: 'flag'}\r\n  },\r\n  {\r\n    path: 'duel',\r\n    data: {name: 'Duel', color: '#0a756b', icon: 'emoji_events'}\r\n  },\r\n  {\r\n    path: 'imitator',\r\n    data: {name: 'Imitator', color: '#0a756b', icon: 'group'}\r\n  },\r\n  {\r\n    path: 'scam',\r\n    data: {name: 'Scam', color: '#0a756b', icon: 'group_work', bot: true}\r\n  }\r\n];\r\n","import {Routes} from '@angular/router';\nimport {MenuComponent} from './shared/components/menu/menu.component';\nimport {X01Module} from './x01/x01.module';\nimport {CricketModule} from './cricket/cricket.module';\nimport {AroundClockModule} from './aroundclock/around-clock.module';\nimport {ShanghaiModule} from './shanghai/shanghai.module';\nimport {KillerModule} from './killer/killer.module';\nimport {FivesModule} from './fives/fives.module';\nimport {HareAndHoundModule} from './hare-and-hound/hare-and-hound.module';\nimport {KnockoutModule} from './knockout/knockout.module';\nimport {CaptureTheFlagModule} from './capture-the-flag/capture-the-flag.module';\nimport {ImitatorModule} from './imitator/imitator.module';\nimport {ScamModule} from './scam/scam.module';\nimport {DuelModule} from './duel/duel.module';\n\nexport const routes: Routes = [\n  {\n    path: '',\n    component: MenuComponent\n  },\n  {\n    path: 'x01',\n    loadChildren: () => X01Module\n  },\n  {\n    path: 'cricket',\n    loadChildren: () => CricketModule\n  },\n  {\n    path: 'around-clock',\n    loadChildren: () => AroundClockModule\n  },\n  {\n    path: 'shanghai',\n    loadChildren: () => ShanghaiModule\n  },\n  {\n    path: 'fives',\n    loadChildren: () => FivesModule\n  },\n  {\n    path: 'hare-and-hound',\n    loadChildren: () => HareAndHoundModule\n  },\n  {\n    path: 'knockout',\n    loadChildren: () => KnockoutModule\n  },\n  {\n    path: 'killer',\n    loadChildren: () => KillerModule\n  },\n  {\n    path: 'capture-the-flag',\n    loadChildren: () => CaptureTheFlagModule\n  },\n  {\n    path: 'duel',\n    loadChildren: () => DuelModule\n  },\n  {\n    path: 'imitator',\n    loadChildren: () => ImitatorModule\n  },\n  {\n    path: 'scam',\n    loadChildren: () => ScamModule\n  },\n  {\n    path: '**', redirectTo: ''\n  }\n];\n","import {AfterViewInit, Component, ElementRef, ViewChild} from '@angular/core';\nimport {slideInAnimation} from './route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {SoundService} from '~services/sound.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['./app.component.scss'],\n  animations: [slideInAnimation]\n})\nexport class AppComponent implements AfterViewInit {\n\n  @ViewChild('audioElement') audioElementRef: ElementRef;\n\n  constructor(public application: ApplicationStateService,\n              private soundService: SoundService) {\n    // document.addEventListener('touchmove',  (event: any) => {\n    //   if (event.scale !== 1) { event.preventDefault(); }\n    // }, { passive: false });\n  }\n\n  ngAfterViewInit() {\n    this.soundService.audioElement = this.audioElementRef.nativeElement;\n  }\n}\n","<audio #audioElement></audio>\r\n<div [@routeAnimations]=\"outlet && outlet.isActivated && outlet.activatedRoute\" [class.mobile]=\"application.isMobile\"\r\n     [class.detailed]=\"application.settings.details\">\r\n  <router-outlet #outlet=\"outlet\"></router-outlet>\r\n</div>\r\n<div class=\"theme-chooser\">\r\n<!--  <button (click)=\"applicationStateService.toggleColorTheme()\" class=\"button primary icon\"><mat-icon>invert_colors</mat-icon></button>-->\r\n  <button (click)=\"application.toggleDetails()\" class=\"button icon\" [class.primary]=\"application.settings.details\">\r\n    <mat-icon>track_changes</mat-icon>\r\n  </button>\r\n</div>\r\n","import {AppComponent} from './app.component';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {SharedModule} from './shared/shared.module';\nimport {RouterModule} from '@angular/router';\nimport {routes} from './app-routing';\n\n@NgModule({\n  imports: [\n    BrowserModule, BrowserAnimationsModule, RouterModule.forRoot(routes), SharedModule\n  ],\n  declarations: [AppComponent],\n  exports: [RouterModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {Player} from '~models/player.model';\nimport {AroundClockState} from './models/around-clock.state.model';\nimport {AroundClockSettings} from './models/around-clock.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\nimport {BotService, PLAYER_DELAY} from '~services/bot.service';\n\n@Component({\n  templateUrl: './around-clock.component.html',\n  animations: [slideInAnimation],\n})\nexport class AroundClockComponent extends Playground<AroundClockState> {\n\n  settings: AroundClockSettings;\n  hiddenInfo = true;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\n    super('Around The Clock', application, game, route, dialogService, soundService, botService, statisticsService, 'around-clock', 2);\n    this.settings = new AroundClockSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal: number) {\n    const state = this.getPlayerState(player);\n    const originalMulti = this.multiplier;\n    const targetedField = this.getFieldIndex(state.actFieldIndex) === fieldIndex;\n    const hasChanges = this.handlePromoterSaboteur(player, scoreReal, originalMulti, targetedField);\n    if (hasChanges && score != 0) {\n      player.throwsHistory[player.throwsHistory.length - 1].score = 0;\n    }\n    if (!hasChanges && targetedField) {\n      // last throw\n      if (state.actFieldIndex >= this.settings.fields.length - this.multiplier) {\n        this.multiplier = this.multiplier === 1 ? 1 : this.settings.fields.length - (state.actFieldIndex + 1);\n      }\n      state.increaseActFieldIndex(this.settings.jump ? this.multiplier : 1);\n      if (state.actFieldIndex >= this.settings.fields.length) {\n        state.actFieldIndex = this.settings.fields.length;\n      }\n    }\n    player.score++;\n  }\n\n  checkPlayerState(player: Player) {\n    const state = this.getPlayerState(player);\n    if ((this.settings.fields.length - 1) < state.actFieldIndex) {\n      player.setWin();\n    } else if (this.game.isTheLastThrow()) {\n      if (this.settings.punishment || this.settings.life !== 0) {\n        let multi = 0;\n        for (let i = 0; i < 3; i++) {\n          const t = player.throwsHistory[player.throwsHistory.length - i - 1];\n          multi += t.score;\n        }\n        if (multi === 0) {\n          if (this.settings.punishment) {\n            state.decreaseActFieldIndex();\n          }\n          if (this.settings.life !== 0) {\n            this.soundService.no();\n            player.life--;\n          }\n        }\n      }\n      this.game.nextPlayer();\n    }\n\n    if (this.settings.firstDeath) {\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\n      if (activePlayers.length < this.game.players.length) {\n        this.getTheBestPlayers().forEach(p => p.setWin(true));\n      }\n    }\n\n    if (this.settings.life !== 0 && this.game.players.length > 1) {\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\n      if (activePlayers.length === 1) {\n        activePlayers[0].setWin(true);\n      } else if (!!activePlayers.length) {\n        while (this.game.getActualPlayer().isInactive()) {\n          this.game.nextPlayer();\n        }\n      }\n    }\n  }\n\n  botThrow() {\n    const state = this.getPlayerState(this.game.getActualPlayer());\n    const target = this.getFieldIndex(state.actFieldIndex);\n    const index = this.botService.calculateTarget(target);\n\n    if (target === index && this.botService.isDoublePoint()) {\n      this.doublePoint();\n    } else if (target === index && this.botService.isTriplePoint()) {\n      this.triplePoint();\n    }\n\n    setTimeout(() => {\n      this.throwNumber([this.isFieldEnabled(index) ? Playground.getFieldValueFromIndex(index) : 0,\n        Playground.getFieldValueFromIndex(index)]);\n    }, PLAYER_DELAY);\n  }\n\n  getDistanceFromRandom(): string {\n    if (this.settings.style === 3) {\n      const bullPos = this.settings.fields.findIndex(f => f === 20);\n      const playerPos = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\n      const diff = bullPos - playerPos;\n      return diff >= 0 ? diff + '' : '';\n    }\n    return '';\n  }\n\n  toggleHiddenInfo() {\n    this.hiddenInfo = !this.hiddenInfo;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return this.game.players.some(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex);\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return fieldIndex === this.getFieldIndex(this.getPlayerState(this.game.getActualPlayer()).actFieldIndex);\n  }\n\n  isSecondaryField(fieldIndex: number): boolean {\n    if (!this.isPrimaryField(fieldIndex)) {\n      return this.game.players.filter(p => p !== this.game.getActualPlayer())\n        .some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\n    }\n    return false;\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const owners = this.game.players\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex).map(p => p.name.substr(0, 1));\n    return !!owners.length ? owners.join(',') : '';\n  }\n\n  customReset() {\n    this.game.players.forEach(player => {\n      player.life = this.settings.life;\n      player.state = new AroundClockState();\n    });\n    this.settings.setStyle();\n  }\n\n  decoratePlayerStat(player: Player): string {\n    return player.name;\n  }\n\n  private getTheBestPlayers(): Player[] {\n    const activePlayers = this.game.players.filter(p => !p.isInactive());\n    let max = 0;\n    activePlayers.forEach(p => {\n      const index = this.getPlayerState(p).actFieldIndex;\n      max = index > max ? index : max;\n    });\n    return activePlayers.filter(p => this.getPlayerState(p).actFieldIndex === max);\n  }\n\n  private getFieldIndex(index: number) {\n    return this.settings.fields[index];\n  }\n\n  private handlePromoterSaboteur(player: Player, scoreReal: number, originalMulti: number, targetedField: boolean): boolean {\n    let hasChanges = false;\n    if ((this.settings.saboteur || this.settings.promoter) && scoreReal !== 0) {\n      const realFieldIndex = scoreReal === 25 ? 20 : scoreReal - 1;\n      this.game.players.filter(p => p.id !== player.id).forEach(otherPlayer => {\n        const otherPlayerState = this.getPlayerState(otherPlayer);\n        if (this.getFieldIndex(otherPlayerState.actFieldIndex) === realFieldIndex && (!targetedField || (this.settings.palFirst && otherPlayerState.actFieldIndex != 0))) {\n          if (this.settings.saboteur) {\n            hasChanges = true;\n            otherPlayerState.decreaseActFieldIndex(this.settings.jump ? originalMulti : 1);\n          } else if (otherPlayerState.actFieldIndex !== this.settings.fields.length - 1) {\n            otherPlayerState.increaseActFieldIndex(this.settings.jump ? originalMulti : 1);\n            if (otherPlayerState.actFieldIndex >= this.settings.fields.length) {\n              otherPlayerState.actFieldIndex = this.settings.fields.length - 1;\n            }\n            hasChanges = true;\n          }\n        }\n      });\n    }\n    return hasChanges;\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.jump\" (click)=\"settings.toggleJump()\">\r\n      Enable Jump\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.punishment\" (click)=\"settings.togglePunishment()\">\r\n      Punishment\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.saboteur\" (click)=\"settings.toggleSaboteur()\">\r\n      Saboteur\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.promoter\" (click)=\"settings.togglePromoter()\">\r\n      Promoter\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.life === 3\" (click)=\"settings.toggleTreeLives()\">\r\n      Tree Lives\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.life === 5\" (click)=\"settings.toggleFiveLives()\">\r\n      Five Lives\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.life === 7\" (click)=\"settings.toggleSevenLives()\">\r\n      Seven Lives\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.life === 10\" (click)=\"settings.toggleTenLives()\">\r\n      Ten Lives\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.firstDeath\" (click)=\"settings.toggleFirstDeath()\">\r\n      First Death\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.palFirst\" (click)=\"settings.togglePalFirst()\">\r\n      Pal First\r\n    </button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.setFavorite()\">\r\n      FAV\r\n    </button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.setInverseFavorite()\">\r\n      iFAV\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Field's order</h2>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==0\" (click)=\"settings.setStyle(0)\">\r\n      Ascending\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==4\" (click)=\"settings.setStyle(4)\">\r\n      Descending\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==1\" (click)=\"settings.setStyle(1)\">\r\n      Clockwise\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==2\" (click)=\"settings.setStyle(2)\">\r\n      RClockwise\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==8\" (click)=\"settings.setStyle(8)\">\r\n      TripleClock\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==9\" (click)=\"settings.setStyle(9)\">\r\n      ZoneClock\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==3\" (click)=\"settings.setStyle(3)\">\r\n      Random\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==6\" (click)=\"settings.setStyle(6)\">\r\n      Random11\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==5\" (click)=\"settings.setStyle(5)\">\r\n      Recurrence\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==7\" (click)=\"settings.setStyle(7)\">\r\n      Pirate\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"hidden-info\" [class.hidden]=\"hiddenInfo\" (click)=\"toggleHiddenInfo()\">{{getDistanceFromRandom()}}</div>\r\n      <div class=\"player\r\n        {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\r\n        {{settings.life !== 0 && player.isInactive() ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\" [lifeDisplayed]=\"settings.life !== 0\" [hasContent]=\"false\">\r\n        </app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {AroundClockComponent} from './around-clock.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: AroundClockComponent}\r\n    ])\r\n  ],\r\n  declarations: [AroundClockComponent]\r\n})\r\nexport class AroundClockModule {\r\n}\r\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class AroundClockSettings {\n  jump: boolean;\n  punishment: boolean;\n  life: number;\n  saboteur: boolean;\n  promoter: boolean;\n  style: number;\n  fields: number[];\n  firstDeath: boolean;\n  palFirst: boolean;\n\n  constructor() {\n    this.style = 0;\n    this.jump = true;\n    this.firstDeath = true;\n    this.punishment = true;\n    this.life = 0;\n    this.promoter = false;\n    this.saboteur = true;\n    this.palFirst = false;\n    this.fields = AroundClockSettings.getBaseFields();\n  }\n\n  setStyle(style?: number) {\n    if (!!style || style === 0) {\n      this.style = style;\n    }\n    switch (this.style) {\n      case 1:\n        this.fields = AroundClockSettings.getClockFields();\n        break;\n      case 2:\n        this.fields = AroundClockSettings.getAnticlockFields();\n        break;\n      case 3:\n        this.fields = AroundClockSettings.getRandom();\n        break;\n      case 4:\n        this.fields = [...AroundClockSettings.getBaseFields().reverse().slice(1), 20];\n        break;\n      case 5:\n        this.fields = AroundClockSettings.getRecurrence();\n        break;\n      case 6:\n        this.fields = AroundClockSettings.getRandom(11);\n        break;\n      case 7:\n        this.fields = AroundClockSettings.getPirate();\n        break;\n      case 8:\n        this.fields = AroundClockSettings.getTripleClockFields();\n        break;\n      case 9:\n        this.fields = AroundClockSettings.getZoneClockFields();\n        break;\n      case 10:\n        this.fields = AroundClockSettings.getZoneClockFields().reverse();\n        break;\n      default:\n        this.fields = AroundClockSettings.getBaseFields();\n    }\n  }\n\n  toggleFirstDeath() {\n    this.firstDeath = !this.firstDeath;\n  }\n\n  togglePalFirst() {\n    this.palFirst = !this.palFirst;\n  }\n\n  toggleJump() {\n    this.jump = !this.jump;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n  }\n\n  toggleTreeLives() {\n    this.life = this.life === 3 ? 0 : 3;\n  }\n\n  toggleFiveLives() {\n    this.life = this.life === 5 ? 0 : 5;\n  }\n\n  toggleSevenLives() {\n    this.life = this.life === 7 ? 0 : 7;\n  }\n\n  toggleTenLives() {\n    this.life = this.life === 10 ? 0 : 10;\n  }\n\n  toggleSaboteur() {\n    this.saboteur = !this.saboteur;\n    if (this.saboteur) {\n      this.promoter = false;\n    }\n  }\n\n  togglePromoter() {\n    this.promoter = !this.promoter;\n    if (this.promoter) {\n      this.saboteur = false;\n    }\n  }\n\n  setFavorite() {\n    this.style = 9;\n    this.jump = true;\n    this.firstDeath = true;\n    this.punishment = true;\n    this.life = 10;\n    this.promoter = false;\n    this.saboteur = true;\n    this.palFirst = true;\n    this.fields = AroundClockSettings.getZoneClockFields();\n  }\n\n  setInverseFavorite() {\n    this.jump = true;\n    this.style = 10;\n    this.firstDeath = true;\n    this.punishment = true;\n    this.life = 10;\n    this.promoter = false;\n    this.saboteur = true;\n    this.palFirst = true;\n    this.fields = AroundClockSettings.getZoneClockFields().reverse();\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getClockFields(): number[] {\n    return [0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4, 19, 20];\n  }\n\n  private static getAnticlockFields(): number[] {\n    return [4, 11, 8, 13, 10, 7, 15, 6, 18, 2, 16, 1, 14, 9, 5, 12, 3, 17, 0, 19, 20];\n  }\n\n  private static getTripleClockFields(): number[] {\n    return [0, 12, 14, 2, 15, 13, 4, 17, 5, 1, 18, 7, 8, 19, 3, 9, 16, 6, 10, 11, 20];\n  }\n\n  private static getZoneClockFields(): number[] {\n    return [0, 12, 17, 9, 3, 1, 5, 2, 14, 15, 16, 7, 18, 10, 6, 20, 13, 19, 8, 4, 11];\n  }\n\n  private static getRandom(size?: number): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    if (!size) {\n      size = fields.length;\n    }\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n      fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n    }\n    return randomFields;\n  }\n\n  private static getPirate(): number[] {\n    let fields = AroundClockSettings.getRandom();\n    for (let i = 0; i < 4; i++) {\n      const random = Math.floor(Math.random() * fields.length);\n      if (fields[random] === 20) {\n        i--;\n      } else {\n        fields[random] = 20;\n      }\n    }\n    return fields;\n  }\n\n  private static getRecurrence(): number[] {\n    let fields = AroundClockSettings.getBaseFields();\n    const randomFields = [];\n    for (let i = (fields.length - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      randomFields.push(fields[random]);\n    }\n    return randomFields;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class AroundClockState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex(value = 1) {\r\n    this.actFieldIndex -= value;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): AroundClockState {\r\n    const state = new AroundClockState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {CaptureTheFlagState} from './models/capture-the-flag.state.model';\nimport {CaptureTheFlagSettings} from './models/capture-the-flag.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\nimport {BotService} from '~services/bot.service';\n\n@Component({\n  templateUrl: './capture-the-flag.component.html',\n  animations: [slideInAnimation],\n})\nexport class CaptureTheFlagComponent extends Playground<CaptureTheFlagState> {\n\n  settings: CaptureTheFlagSettings;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\n    super('Capture the Flag', application, game, route, dialogService, soundService, botService, statisticsService, 'ctf');\n    this.settings = new CaptureTheFlagSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\n    const state = this.getPlayerState(player);\n    if (this.isActiveField(fieldIndex)) {\n      state.increaseFieldCount(fieldIndex, this.multiplier);\n      if (state.getFieldCount(fieldIndex) >= 3) {\n        player.score += this.settings.noScore ? 1 : score;\n        this.checkWinner(player);\n        this.game.actualFieldIndex++;\n      }\n    } else if (fieldIndex === 20) {\n      state.increaseFieldCount(this.settings.fields[this.game.actualFieldIndex], 3);\n      player.score += this.settings.noScore ? 1 : this.settings.fields[this.game.actualFieldIndex] + 1;\n      this.checkWinner(player);\n      this.game.actualFieldIndex++;\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    if (this.game.actualFieldIndex === this.settings.fields.length) {\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\n    } else if (this.game.isTheLastThrow()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  getFieldValue(player: Player, fieldIndex: number): string {\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\n    if (fieldCount === 0) {\n      return '○○○';\n    } else {\n      let str = '';\n      for (let i = 0; i < Math.min(fieldCount, 3); i++) {\n        str += '●';\n      }\n      for (let i = fieldCount; i < 3; i++) {\n        str += '○';\n      }\n      return str;\n    }\n  }\n\n  customReset() {\n    this.game.actualFieldIndex = 0;\n    this.game.players.forEach(player => player.state = new CaptureTheFlagState());\n    if (this.settings.style === 0) {\n      this.settings.randomCity();\n    } else if (this.settings.style === 1) {\n      this.settings.randomCountry();\n    } else {\n      this.settings.randomContinent();\n    }\n  }\n\n  customSettingsValidation(): boolean {\n    return this.settings.fields.length > 0;\n  }\n\n  isActiveField(fieldIndex: number): boolean {\n    return this.settings.fields[this.game.actualFieldIndex] === fieldIndex;\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return fieldIndex === 20 || this.settings.fields.indexOf(fieldIndex) === this.game.actualFieldIndex;\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return this.isFieldEnabled(fieldIndex);\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const player = this.game.players.find(player => this.getPlayerState(player).getFieldCount(fieldIndex) >= 3);\n    return player ? player.name : '';\n  }\n\n  getTheFinalResult(): Player[] {\n    let winners = this.game.players.filter(p => p.win);\n    if (!winners.length) {\n      return [];\n    }\n    let max = winners[0].score;\n    winners.forEach(p => {\n      max = p.score > max ? p.score : max;\n    });\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\n      const c = p.clone();\n      c.win = false;\n      return c;\n    });\n    return [...winners, ...losers];\n  }\n\n  getGameConfig(): string {\n    return this.settings.fields.length+'';\n  }\n\n  private checkWinner(player: Player) {\n    let total = this.settings.fields.length;\n    const sum = player.score;\n    if (!this.settings.noScore) {\n      total = this.settings.fields.reduce((a, b) => a + b, 0);\n    }\n    if (sum > Math.floor(total / 2)) {\n      player.setWin(true);\n    }\n  }\n}\n","<div id=\"playgroundContent\">\n\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style === 0\"\n            (click)=\"settings.randomCity()\">City (5)\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style === 1\"\n            (click)=\"settings.randomCountry()\">Country (10)\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style === 2\"\n            (click)=\"settings.randomContinent()\">Contin. (20)\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.noScore\"\n            (click)=\"settings.toggleNoScore()\">No score\n    </button>\n  </app-settings>\n\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <app-player-score [player]=\"player\"></app-player-score>\n      </div>\n    </div>\n  </div>\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\n  </app-number-plate-visual>\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\n</div>\n","import {NgModule} from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport {SharedModule} from '../shared/shared.module';\nimport {CaptureTheFlagComponent} from './capture-the-flag.component';\n\n@NgModule({\n  imports: [\n    SharedModule,\n    RouterModule.forChild([\n      {path: '', component: CaptureTheFlagComponent}\n    ])\n  ],\n  declarations: [CaptureTheFlagComponent]\n})\nexport class CaptureTheFlagModule {\n}\n","import {FIELDS_COUNT} from '~models/playground.model';\n\nexport class CaptureTheFlagSettings {\n\n  fields: number[];\n  style: number;\n  noScore = false;\n\n  constructor() {\n    this.fields = [];\n    this.noScore = false;\n    this.randomCountry();\n  }\n\n  randomCity() {\n    this.style = 0;\n    this.fields = CaptureTheFlagSettings.getRandom(5);\n    this.fields[this.fields.length] = 20;\n  }\n\n  randomCountry() {\n    this.style = 1;\n    this.fields = CaptureTheFlagSettings.getRandom(10);\n    this.fields[this.fields.length] = 20;\n  }\n\n  randomContinent() {\n    this.style = 2;\n    this.fields = CaptureTheFlagSettings.getRandom(20);\n    this.fields[this.fields.length] = 20;\n  }\n\n  toggleNoScore() {\n    this.noScore = !this.noScore;\n  }\n\n  private static getBaseFields(): number[] {\n    return [...Array(FIELDS_COUNT).keys()];\n  }\n\n  private static getRandom(size?: number): number[] {\n    let fields = CaptureTheFlagSettings.getBaseFields();\n    if (!size) {\n      size = fields.length;\n    }\n    const randomFields = [];\n    for (let i = (size - 1); i >= 0; i--) {\n      const random = Math.floor(Math.random() * fields.length);\n      if (fields[random] === 20) {\n        i++;\n      } else {\n        randomFields.push(fields[random]);\n        fields = [...fields.slice(0, random), ...fields.slice(random + 1)];\n      }\n    }\n    return randomFields.sort((a, b) => Number(a) - Number(b));\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\nimport {FieldValue} from '~models/field-value.model';\n\nexport class CaptureTheFlagState extends PlaygroundState {\n\n  actFieldIndex: number;\n  fieldCount: FieldValue[];\n\n  constructor() {\n    super();\n    this.fieldCount = [];\n    this.actFieldIndex = 0;\n  }\n\n  getFieldCount(field: number): number {\n    return this.getFieldValue(this.fieldCount, field).value;\n  }\n\n  increaseFieldCount(field: number, value: number) {\n    this.getFieldValue(this.fieldCount, field).value += value;\n  }\n\n  getActFieldIndex(): number {\n    return this.actFieldIndex;\n  }\n\n  increaseActFieldIndex() {\n    this.actFieldIndex++;\n  }\n\n  clone(): CaptureTheFlagState {\n    const state = new CaptureTheFlagState();\n    state.actFieldIndex = this.actFieldIndex;\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\n    return state;\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {CricketSettings} from './models/cricet.settings.model';\r\nimport {CricketState} from './models/cricet.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './cricket.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class CricketComponent extends Playground<CricketState> {\r\n\r\n  settings: CricketSettings;\r\n  playerToDisplay: Player;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Ultimate Cricket', application, game, route, dialogService, soundService, botService, statisticsService, 'cricket');\r\n    this.settings = new CricketSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n      if (!this.settings.isBlackOutGame() ||\r\n        this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex ||\r\n        this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n\r\n        if (this.isFieldClosedForOthers(player, fieldIndex) && (playerFieldCount + this.multiplier) > 3) {\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, 3);\r\n        } else {\r\n          let multiplier = this.multiplier;\r\n          if (playerFieldCount < 3 && (playerFieldCount + this.multiplier) >= 3) {\r\n            multiplier = (playerFieldCount + this.multiplier) % 3;\r\n          }\r\n          this.getPlayerState(player).setFieldCount(fieldIndex, playerFieldCount + this.multiplier);\r\n          this.multiplier = multiplier;\r\n        }\r\n      }\r\n\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        if (this.settings.isBlackOutGame()) {\r\n          if (this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex) {\r\n            this.getPlayerState(player).increaseActFieldIndex();\r\n          }\r\n        }\r\n        this.punishPlayers(fieldIndex);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.score = this.getPlayerTotal(p));\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    this.game.players.forEach(p => p.setWin(\r\n      this.isPlayerDone(p) &&\r\n      ((!punishStyle && this.game.isTheBestPlayer(p)) || (punishStyle && this.game.isTheWorstPlayer(p)))));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const score = this.getPunishScore(player, fieldIndex);\r\n    const punishStyle = this.settings.isPunishGame() || this.settings.isBlackOutGame();\r\n    const playerFieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n\r\n    let str = '';\r\n    if (punishStyle && score !== 0) {\r\n      str += score;\r\n    }\r\n\r\n    if (playerFieldCount === 0 && str.length === 0) {\r\n      return '○';\r\n    } else if (playerFieldCount > 3 && !punishStyle && !this.settings.isNoScoreGame()) {\r\n      return this.getFieldScore(player, fieldIndex) + '';\r\n    } else if (playerFieldCount === 3 || ((punishStyle || this.settings.isNoScoreGame()) && playerFieldCount > 3)) {\r\n      str += '●●●';\r\n    } else {\r\n      for (let i = 0; i < playerFieldCount; i++) {\r\n        str += '●';\r\n      }\r\n    }\r\n    return str;\r\n  }\r\n\r\n  isActiveField(player: Player, fieldIndex: number): boolean {\r\n    return this.settings.fields[this.getPlayerState(player).getActFieldIndex()] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(player: Player, fieldIndex: number): boolean {\r\n    return this.getPlayerState(player).getFieldCount(fieldIndex) >= 3;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.settings.isNoScoreGame()) {\r\n      return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n    }\r\n    return this.settings.fields.indexOf(fieldIndex) !== -1 && !this.isFieldClosed(fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      !this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex) &&\r\n      this.isFieldDoneForPlayer(this.getPlayerToDisplay(), fieldIndex);\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    if (this.isPrimaryField(fieldIndex)) {\r\n      const playerFieldCount = this.getPlayerState(this.getPlayerToDisplay()).getFieldCount(fieldIndex);\r\n      const remaining = ''.padStart(3 - playerFieldCount, '●');\r\n      return remaining + '\\n' + this.game.players.filter(p => this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    } else if (this.isSecondaryField(fieldIndex)) {\r\n      return this.game.players.filter(p => !this.isFieldDoneForPlayer(p, fieldIndex))\r\n        .map(p => p.name.substr(0, 1)).join(',').toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new CricketState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  changePlayerToDisplay(player?: Player) {\r\n    this.playerToDisplay = player;\r\n    setTimeout(() => this.playerToDisplay = null, 1500);\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length+','+this.settings.style;\r\n  }\r\n\r\n  private getPlayerToDisplay(): Player {\r\n    return !!this.playerToDisplay ? this.playerToDisplay : this.game.getActualPlayer();\r\n  }\r\n\r\n  private getPlayerTotal(player: Player) {\r\n    let total = 0;\r\n    if (this.settings.isPunishGame() || this.settings.isBlackOutGame()) {\r\n      total = this.getPlayerTotalForPunishGame(player);\r\n    } else if (this.settings.isScoreGame()) {\r\n      total = this.getPlayerTotalForScoreGame(player);\r\n    }\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForScoreGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        total += (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      }\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private getPlayerTotalForPunishGame(player: Player) {\r\n    let total = 0;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      total += this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }, this);\r\n    return total;\r\n  }\r\n\r\n  private punishPlayers(fieldIndex: number) {\r\n    this.game.players.forEach(player => {\r\n      if (!this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n        this.getPlayerState(player).setPunishCount(fieldIndex, this.getPlayerState(player).getPunishCount(fieldIndex) + this.multiplier);\r\n      }\r\n    }, this);\r\n  }\r\n\r\n  private getFieldScore(player: Player, fieldIndex: number): number {\r\n    if (this.isFieldDoneForPlayer(player, fieldIndex)) {\r\n      return (this.getPlayerState(player).getFieldCount(fieldIndex) - 3) * Playground.getFieldValueFromIndex(fieldIndex);\r\n    }\r\n    return 0;\r\n  }\r\n\r\n  private getPunishScore(player: Player, fieldIndex: number): number {\r\n    return this.getPlayerState(player).getPunishCount(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n  }\r\n\r\n  private isFieldClosed(fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(player => {\r\n      closed = closed && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isFieldClosedForOthers(player: Player, fieldIndex: number): boolean {\r\n    let closed = true;\r\n    this.game.players.forEach(p => {\r\n      if (p.id !== player.id) {\r\n        closed = closed && this.isFieldDoneForPlayer(p, fieldIndex);\r\n      }\r\n    }, this);\r\n    return closed;\r\n  }\r\n\r\n  private isPlayerDone(player: Player): boolean {\r\n    let done = true;\r\n    this.settings.fields.forEach(fieldIndex => {\r\n      done = done && this.isFieldDoneForPlayer(player, fieldIndex);\r\n    });\r\n    return done;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Fields</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.isFieldAllowed(i)\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button class=\"button shortmedium\" (click)=\"settings.top()\">Top</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.bottom()\">Bottom</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.black()\">Black</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.white()\">White</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize(6)\">Random 06</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize(12)\">Random 12</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==1\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==2\"\r\n            (click)=\"settings.setStyle(2)\">Cut-Throat\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==3\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==4\"\r\n            (click)=\"settings.setStyle(4)\">Black Out\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           (click)=\"changePlayerToDisplay(player)\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div\r\n                class=\"field {{isActiveField(player, field) && settings.isBlackOutGame()  ? 'active': ''}} {{!isFieldDoneForPlayer(player, field) ? 'highlighted' : ''}}\"\r\n                *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {CricketComponent} from './cricket.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: CricketComponent}\r\n    ])\r\n  ],\r\n  declarations: [CricketComponent]\r\n})\r\nexport class CricketModule {\r\n}\r\n","export class CricketSettings {\r\n\r\n  fields: number[] = [14, 15, 16, 17, 18, 19, 20];\r\n  numbs: boolean[] = [];\r\n  style: number;\r\n\r\n  constructor() {\r\n    this.style = 2;\r\n    let defaultSet = false;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 13) {\r\n        defaultSet = true;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize(maxField: number) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    while(this.numbs.filter(n => !!n).length !== maxField) {\r\n      this.numbs[Math.floor(Math.random() * 21)] = true;\r\n    }\r\n    this.numbs[this.numbs.length - 1] = true;\r\n    this.initFields();\r\n  }\r\n\r\n  all() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  small() {\r\n    this.setAllowedField([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 21]);\r\n  }\r\n\r\n  high() {\r\n    this.setAllowedField([11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21]);\r\n  }\r\n\r\n  black() {\r\n    this.setAllowedField([20, 18, 13, 10, 2, 3, 7, 8, 14, 12, 21]);\r\n  }\r\n\r\n  white() {\r\n    this.setAllowedField([1, 4, 6, 15, 17, 19, 16, 11, 9, 5, 21]);\r\n  }\r\n\r\n  cross() {\r\n    this.setAllowedField([5, 20, 1, 19, 3, 17, 14, 8, 11, 6, 13, 10, 21]);\r\n  }\r\n\r\n  top() {\r\n    this.setAllowedField([14, 9, 12, 5, 20, 1, 18, 4, 13, 21]);\r\n  }\r\n\r\n  bottom() {\r\n    this.setAllowedField([10, 15, 2, 17, 3, 19, 7, 16, 8, 21]);\r\n  }\r\n\r\n  left() {\r\n    this.setAllowedField([12, 9, 14, 11, 8, 16, 7, 5, 19, 21]);\r\n  }\r\n\r\n  right() {\r\n    this.setAllowedField([1, 18, 4, 13, 6, 10, 15, 2, 17, 21]);\r\n  }\r\n\r\n  odd() {\r\n    this.setAllowedField([1, 3, 5, 7, 9, 11, 13, 15, 17, 19, 21]);\r\n  }\r\n\r\n  even() {\r\n    this.setAllowedField([2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 21]);\r\n  }\r\n\r\n  prime() {\r\n    this.setAllowedField([2, 3, 5, 7, 11, 13, 17, 19, 21]);\r\n  }\r\n\r\n  notPrime() {\r\n    this.setAllowedField([1, 4, 6, 8, 9, 10, 12, 14, 15, 16, 18, 20, 21]);\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  isFieldAllowed(field: number): boolean {\r\n    return !!this.numbs[field];\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  setStyle(style: number) {\r\n    this.style = style;\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  isScoreGame(): boolean {\r\n    return this.style === 1;\r\n  }\r\n\r\n  isPunishGame(): boolean {\r\n    return this.style === 2;\r\n  }\r\n\r\n  isNoScoreGame(): boolean {\r\n    return this.style === 3;\r\n  }\r\n\r\n  isBlackOutGame(): boolean {\r\n    return this.style === 4;\r\n  }\r\n\r\n  setAllowedField(fields: number[]) {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    fields.forEach(f => this.numbs[f - 1] = true);\r\n    this.initFields();\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class CricketState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  punishCount: FieldValue[];\r\n  actFieldIndex: number;\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.punishCount = [];\r\n    this.actFieldIndex = 0;\r\n  }\r\n\r\n  getFieldCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.fieldCount, fieldIndex).value;\r\n  }\r\n\r\n  setFieldCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getPunishCount(fieldIndex: number): number {\r\n    return this.getFieldValue(this.punishCount, fieldIndex).value;\r\n  }\r\n\r\n  setPunishCount(fieldIndex: number, value: number) {\r\n    this.getFieldValue(this.punishCount, fieldIndex).value = value;\r\n  }\r\n\r\n  getActFieldIndex(): number {\r\n    return this.actFieldIndex;\r\n  }\r\n\r\n  increaseActFieldIndex() {\r\n    this.actFieldIndex++;\r\n  }\r\n\r\n  clone(): CricketState {\r\n    const state = new CricketState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.punishCount.forEach(fv => state.punishCount.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {DuelSettings} from './models/duel.settings.model';\r\nimport {DuelState} from './models/duel.state.model';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './duel.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class DuelComponent extends Playground<DuelState> {\r\n\r\n  settings: DuelSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Duel', application, game, route, dialogService, soundService, botService, statisticsService, 'duel', 2);\r\n    this.settings = new DuelSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    const actualScore = score * this.multiplier;\r\n    if (score === 0) {\r\n      player.score -= this.settings.punishment;\r\n    } else if (state.ownFields.some(i => i === fieldIndex)) {\r\n      player.score += actualScore;\r\n    } else if (this.isNotOwnField(fieldIndex)) {\r\n      player.score -= actualScore;\r\n      if (this.settings.handover) {\r\n        const player = this.game.players.find(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n        if (player) {\r\n          player.score += actualScore;\r\n        }\r\n      }\r\n    } else {\r\n      state.ownFields.push(fieldIndex);\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score >= this.settings.targetPoint));\r\n    const activePlayers = this.game.players.filter(p => !this.isInactive(p));\r\n    if (activePlayers.length === 1) {\r\n      activePlayers[0].setWin(true);\r\n    }\r\n    if (!activePlayers) {\r\n      player.setWin(true);\r\n    } else {\r\n      if (this.game.isTheLastThrow()) {\r\n        this.game.nextPlayer();\r\n      }\r\n      while (this.isInactive(this.game.getActualPlayer())) {\r\n        this.game.nextPlayer();\r\n      }\r\n    }\r\n  }\r\n\r\n  isInactive(player: Player): boolean {\r\n    return player.score <= 0;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.getPlayerState(this.game.getActualPlayer()).ownFields.some(i => i === fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return this.settings.isFieldAllowed(fieldIndex) &&\r\n      !this.game.players.some(p => this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n  }\r\n\r\n  isAlertField(fieldIndex: number): boolean {\r\n    return this.game.players.some(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const player = this.game.players.find(p => this.getPlayerState(p).ownFields.some(i => i === fieldIndex))\r\n    if (player) {\r\n      return player.name.substr(0, 1).toUpperCase();\r\n    }\r\n    return '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new DuelState();\r\n      player.score = this.settings.startPoint;\r\n    });\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length+','+this.settings.targetPoint+','+this.settings.startPoint;\r\n  }\r\n\r\n  private isNotOwnField(fieldIndex: number): boolean {\r\n    return !this.settings.isFieldAllowed(fieldIndex) ||\r\n      this.game.players.some(p => p != this.game.getActualPlayer() && this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.startPoint\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.targetPoint\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Punishment</mat-label>\r\n        <input [(ngModel)]=\"settings.punishment\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n\r\n    <br/>\r\n\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.handover ? 'primary' : ''\"\r\n            (click)=\"settings.toggleHandOver()\">Hand Over</button>\r\n\r\n    <br/>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Fields</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.isFieldAllowed(i)\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button class=\"button shortmedium\" (click)=\"settings.top()\">Top</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.bottom()\">Bottom</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.black()\">Black</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.white()\">White</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize(6)\">Random 06</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize(12)\">Random 12</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{isInactive(player) ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {DuelComponent} from './duel.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: DuelComponent}\r\n    ])\r\n  ],\r\n  declarations: [DuelComponent]\r\n})\r\nexport class DuelModule {\r\n}\r\n","import {CricketSettings} from '../../cricket/models/cricet.settings.model';\r\n\r\nexport class DuelSettings extends CricketSettings {\r\n  startPoint: number;\r\n  targetPoint: number;\r\n  punishment: number;\r\n  handover: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.black();\r\n    this.startPoint = 30;\r\n    this.targetPoint = 200;\r\n    this.punishment = 10;\r\n    this.handover = true;\r\n  }\r\n\r\n  toggleHandOver() {\r\n    this.handover = !this.handover;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class DuelState extends PlaygroundState {\r\n\r\n  ownFields = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  clone(): DuelState {\r\n    const state = new DuelState();\r\n    state.ownFields = [...this.ownFields];\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {FivesSettings} from './models/fives.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './fives.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class FivesComponent extends Playground<PlaygroundState> {\r\n\r\n  settings: FivesSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Fives', application, game, route, dialogService, soundService, botService, statisticsService, 'fives');\r\n    this.settings = new FivesSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    if (this.game.isTheLastThrow()) {\r\n      let sum = 0;\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        sum += t.score * t.multi;\r\n      }\r\n      if (sum % this.settings.divider === 0) {\r\n        if (this.settings.noCheat && player.throwsHistory[player.throwsHistory.length - 1].score === 0 && sum !== 0) {\r\n          sum = 0;\r\n        }\r\n        player.score -= (sum / this.settings.divider);\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    this.game.players.forEach(p => p.setWin(p.score <= 0));\r\n    if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.actualThrow === 2) {\r\n      const mod = this.settings.divider - (this.game.getActualPlayer().getThrowsTotal() % this.settings.divider);\r\n      let max = mod + this.settings.divider;\r\n      const all = [mod];\r\n      while (max <= 20) {\r\n        all.push(max);\r\n        max += this.settings.divider;\r\n      }\r\n      return all.some(f => f === fieldIndex + 1);\r\n    }\r\n    return false;\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.limit);\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.divider + ',' + this.settings.limit;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <button class=\"button big\" [class.primary]=\"settings.noCheat\" (click)=\"settings.toggleNoCheat()\">\r\n      No Cheat\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Divider</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.divider === divider\"\r\n            *ngFor=\"let divider of settings.getSelectableDividers()\"\r\n            (click)=\"settings.setDivider(divider)\">{{divider}}</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Limit</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.limit === limit\"\r\n            *ngFor=\"let limit of settings.getSelectableLimits()\"\r\n            (click)=\"settings.setLimit(limit)\">{{limit}}</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {FivesComponent} from './fives.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: FivesComponent}\r\n    ])\r\n  ],\r\n  declarations: [FivesComponent]\r\n})\r\nexport class FivesModule {\r\n}\r\n","export class FivesSettings {\r\n  divider: number;\r\n  limit: number;\r\n  noCheat: boolean;\r\n\r\n  constructor() {\r\n    this.divider = 5;\r\n    this.limit = 20;\r\n    this.noCheat = true;\r\n  }\r\n\r\n  getSelectableDividers(): number[] {\r\n    return [3, 4, 5, 6, 7, 8, 10];\r\n  }\r\n\r\n  getSelectableLimits(): number[] {\r\n    return [10, 20, 30, 50, 100];\r\n  }\r\n\r\n  setDivider(value: number) {\r\n    this.divider = value;\r\n  }\r\n\r\n  setLimit(value: number) {\r\n    this.limit = value;\r\n  }\r\n\r\n  toggleNoCheat() {\r\n    this.noCheat = !this.noCheat;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {HareAndHoundSettings} from './models/hare-and-hound.settings.model';\r\nimport {HareAndHoundState} from './models/hare-and-hound.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './hare-and-hound.component.html',\r\n  animations: [slideInAnimation]\r\n})\r\nexport class HareAndHoundComponent extends Playground<HareAndHoundState> {\r\n\r\n  settings: HareAndHoundSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Hare and Hound', application, game, route, dialogService, soundService, botService, statisticsService, 'hare-hound', 2, 2);\r\n    this.settings = new HareAndHoundSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isFieldEnabled(fieldIndex, state.actFieldIndex)) {\r\n      state.increaseActFieldIndex(this.multiplier);\r\n      if (state.actFieldIndex >= (FIELDS_COUNT - 1)) {\r\n        state.actFieldIndex = state.actFieldIndex - (FIELDS_COUNT - 1);\r\n      }\r\n      player.score -= this.multiplier;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    player.setWin((this.isHare() && player.score <= 0) ||\r\n      (!this.isHare() &&\r\n        (player.score + this.settings.getHareStartIndex()) <= this.game.players.find(p => this.isHare(p)).score));\r\n\r\n    if (!player.win && this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number, actFieldIndex?: number): boolean {\r\n    if (!actFieldIndex) {\r\n      actFieldIndex = this.getPlayerState(this.game.getActualPlayer()).actFieldIndex;\r\n    }\r\n    return fieldIndex === this.getFieldIndex(actFieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    if (!this.isFieldEnabled(fieldIndex)) {\r\n      return this.game.players.some(p => fieldIndex === this.getFieldIndex(this.getPlayerState(p).actFieldIndex));\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owners = this.game.players\r\n      .filter(p => this.getFieldIndex(this.getPlayerState(p).actFieldIndex) === fieldIndex)\r\n      .map(p => p.name.substr(0, 1));\r\n    return !!owners.length ? owners.join(',') : '';\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (!this.isPrimaryField(fieldIndex) && !this.isSecondaryField(fieldIndex)) {\r\n      return '';\r\n    }\r\n    return (this.isHare() && this.isPrimaryField(fieldIndex) || (this.isSecondaryField(fieldIndex) && !this.isHare())) ? 'favorite' : 'directions_run';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach((player, index) => {\r\n      player.score = FIELDS_COUNT - 1;\r\n      if (index === 0) {\r\n        player.state = new HareAndHoundState(this.settings.getHareStartIndex());\r\n      } else {\r\n        player.state = new HareAndHoundState(0);\r\n      }\r\n    });\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + `${this.isHare(player) ? '0' : '1'}`;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return (20 - HareAndHoundSettings.getBaseFields().indexOf(this.settings.houndStartIndex)) + '';\r\n  }\r\n\r\n  private getFieldIndex(index: number) {\r\n    return this.settings.getFields()[index];\r\n  }\r\n\r\n  private isHare(player?: Player) {\r\n    if (!player) {\r\n      player = this.game.getActualPlayer();\r\n    }\r\n    return this.game.players.map(p => p.id).indexOf(player.id) === 0;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Hound start position</h2>\r\n    <button class=\"button\" [class.primary]=\"(settings.houndStartIndex+1) === start\"\r\n            *ngFor=\"let start of settings.getSelectableHoundStart()\"\r\n            (click)=\"settings.setHoundStart(start - 1)\">{{start}}</button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {HareAndHoundComponent} from './hare-and-hound.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: HareAndHoundComponent}\r\n    ])\r\n  ],\r\n  declarations: [HareAndHoundComponent]\r\n})\r\nexport class HareAndHoundModule {\r\n}\r\n","export class HareAndHoundSettings {\r\n  houndStartIndex: number;\r\n  hareStartIndex: number;\r\n\r\n  constructor() {\r\n    this.houndStartIndex = 13;\r\n    this.hareStartIndex = 19;\r\n  }\r\n\r\n  getSelectableHoundStart(): number[] {\r\n    return [7, 16, 8, 11, 14, 9, 12, 5];\r\n  }\r\n\r\n  setHoundStart(value: number) {\r\n    this.houndStartIndex = value;\r\n  }\r\n\r\n  getFields(): number[] {\r\n    const index = HareAndHoundSettings.getBaseFields().indexOf(this.houndStartIndex);\r\n    return [...HareAndHoundSettings.getBaseFields().slice(index), ...HareAndHoundSettings.getBaseFields().slice(0, index)];\r\n  }\r\n\r\n  getHareStartIndex(): number {\r\n    return this.getFields().indexOf(this.hareStartIndex);\r\n  }\r\n\r\n  static getBaseFields(): number[] {\r\n    return [19, 0, 17, 3, 12, 5, 9, 14, 1, 16, 2, 18, 6, 15, 7, 10, 13, 8, 11, 4];\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class HareAndHoundState extends PlaygroundState {\r\n\r\n  constructor(public actFieldIndex: number) {\r\n    super();\r\n  }\r\n\r\n  increaseActFieldIndex(value?: number) {\r\n    this.actFieldIndex += value ? value : 1;\r\n  }\r\n\r\n  decreaseActFieldIndex() {\r\n    this.actFieldIndex--;\r\n    if (this.actFieldIndex < 0) {\r\n      this.actFieldIndex = 0;\r\n    }\r\n  }\r\n\r\n  clone(): HareAndHoundState {\r\n    return new HareAndHoundState(this.actFieldIndex);\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ImitatorSettings} from './models/imitator.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {ImitatorState} from './models/imitator.state.model';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './imitator.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ImitatorComponent extends Playground<ImitatorState> {\r\n\r\n  settings: ImitatorSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Imitator', application, game, route, dialogService, soundService, botService, statisticsService, 'imitator');\r\n    this.nextEnabled = false;\r\n    this.settings = new ImitatorSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.actualThrow === 1) {\r\n      state.punished = fieldIndex !== state.actFieldIndex;\r\n    } else if (this.game.actualThrow === 2) {\r\n      const newScore = state.punished && score === 0 ? 25 : score;\r\n      player.score += (state.punished ? newScore * -1 : newScore) * this.multiplier;\r\n    } else {\r\n      this.game.nextPlayer();\r\n      const newFieldIndex = score === 0 ? Math.floor(Math.random() * 20) : fieldIndex;\r\n      this.getPlayerState(this.game.getActualPlayer()).actFieldIndex = newFieldIndex;\r\n    }\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.game.actualThrow === 0 && this.getPlayerState(this.game.getActualPlayer()).actFieldIndex === fieldIndex;\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastPlayer(player) && (this.game.round + 1) === this.settings.round && this.game.actualThrow === 2) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ImitatorState());\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.round + '';\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Number of Round</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.round===3\" (click)=\"settings.setRound(3)\">\r\n      3\r\n    </button>\r\n    <button class=\"button\" [class.primary]=\"settings.round===5\" (click)=\"settings.setRound(5)\">\r\n      5\r\n    </button>\r\n    <button class=\"button\" [class.primary]=\"settings.round===10\" (click)=\"settings.setRound(10)\">\r\n      10\r\n    </button>\r\n    <button class=\"button\" [class.primary]=\"settings.round===15\" (click)=\"settings.setRound(15)\">\r\n      15\r\n    </button>\r\n    <button class=\"button\" [class.primary]=\"settings.round===20\" (click)=\"settings.setRound(20)\">\r\n      20\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" [reversRound]=\"settings.round\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ImitatorComponent} from './imitator.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ImitatorComponent}\r\n    ])\r\n  ],\r\n  declarations: [ImitatorComponent]\r\n})\r\nexport class ImitatorModule {\r\n}\r\n","export class ImitatorSettings {\n\n  round = 5;\n\n  setRound(r: number) {\n    this.round = r;\n  }\n}\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class ImitatorState extends PlaygroundState {\r\n\r\n  actFieldIndex: number;\r\n  punished: boolean;\r\n\r\n  constructor() {\r\n    super();\r\n    this.actFieldIndex = Math.floor(Math.random() * 20);\r\n    this.punished = false;\r\n  }\r\n\r\n  clone(): ImitatorState {\r\n    const state = new ImitatorState();\r\n    state.actFieldIndex = this.actFieldIndex;\r\n    state.punished = this.punished;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KillerState} from './models/killer.state.model';\r\nimport {KillerSettings} from './models/killer.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\nconst DANGER_ZONE_ICON = 'sentiment_very_dissatisfied';\r\n\r\n@Component({\r\n  templateUrl: './killer.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KillerComponent extends Playground<KillerState> {\r\n\r\n  settings: KillerSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Killer', application, game, route, dialogService, soundService, botService, statisticsService, 'killer', 2);\r\n    this.settings = new KillerSettings();\r\n    this.nextEnabled = false;\r\n    this.zeroEnabled = false;\r\n    this.multiEnabled = false;\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.game.round === 0) {\r\n      state.actField = fieldIndex;\r\n      player.score = score;\r\n      if (this.game.isActualPlayerTheLast()) {\r\n        this.nextEnabled = true;\r\n        this.zeroEnabled = true;\r\n        this.multiEnabled = true;\r\n      }\r\n    } else {\r\n      if (state.killer) {\r\n        if (this.settings.suicide && fieldIndex === state.actField && this.multiplier > 1) {\r\n          player.life = 0;\r\n          this.extraEndingMsg = 'SUICIDE!!!';\r\n        } else if (fieldIndex === state.actField) {\r\n          player.life = Number(player.life) + Number(this.multiplier);\r\n          if (player.life > this.settings.numberOfLives) {\r\n            player.life = this.settings.numberOfLives;\r\n          }\r\n        } else {\r\n          this.game.players.filter(p => p.id !== player.id && !p.isInactive()).forEach(p => {\r\n            const s = this.getPlayerState(p);\r\n            if (fieldIndex === s.actField) {\r\n              p.life -= this.multiplier;\r\n              this.soundService.no();\r\n              if (p.life < 0) {\r\n                p.life = 0;\r\n              }\r\n            }\r\n          });\r\n        }\r\n      } else if (fieldIndex === state.actField) {\r\n        state.boarding -= this.multiplier;\r\n        if (state.boarding <= 0) {\r\n          state.boarding = 0;\r\n        }\r\n        state.killer = state.boarding === 0;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.round !== 0) {\r\n      const activePlayers = this.game.players.filter(p => !p.isInactive());\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !p.isInactive()));\r\n    }\r\n    if (this.game.round === 0 || this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.game.getActualPlayer().isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return fieldIndex !== 20 && !this.getAllEnabledFields().some(f => f === fieldIndex);\r\n    }\r\n    return this.getAllEnabledFields().some(f => f === fieldIndex);\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    if (this.game.round === 0) {\r\n      return this.isFieldEnabled(fieldIndex);\r\n    }\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return this.isFieldEnabled(fieldIndex) && !this.isSecondaryField(fieldIndex);\r\n    }\r\n    return state.actField === fieldIndex;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    const state = this.getPlayerState(this.game.getActualPlayer());\r\n    if (state.killer) {\r\n      return state.actField === fieldIndex;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    if (this.game.players.some(p => {\r\n      const state = this.getPlayerState(p);\r\n      return !p.isInactive() && p.life <= 3 && state.actField === fieldIndex;\r\n    })) {\r\n      return DANGER_ZONE_ICON;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    const owner = this.game.players.find(p => (p.state as KillerState).actField === fieldIndex);\r\n\r\n    if (owner) {\r\n      const shortName = owner.name.substr(0, 1);\r\n      const boarding = (owner.state as KillerState).boarding;\r\n      if ((owner.state as KillerState).killer) {\r\n        return `${shortName}: ${owner.life}`;\r\n      }\r\n      return `${shortName}: ${boarding + ' - ' + owner.life}`;\r\n    }\r\n    return '';\r\n  }\r\n\r\n  getPlayerField(player: Player): string {\r\n    const fieldIndex = this.getPlayerState(player).actField;\r\n    return fieldIndex === 20 ? 'B' : (fieldIndex + 1) + '';\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new KillerState(this.settings.boardingLimit);\r\n      player.life = this.settings.numberOfLives;\r\n    });\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0 && this.settings.boardingLimit > 0;\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.boardingLimit + ',' + this.settings.numberOfLives;\r\n  }\r\n\r\n  private getAllEnabledFields(): number[] {\r\n    return this.game.players.filter(p => !p.isInactive())\r\n      .map(p => this.getPlayerState(p).actField);\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Boarding</mat-label>\r\n        <input [(ngModel)]=\"settings.boardingLimit\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <mat-divider></mat-divider>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.suicide\"\r\n            (click)=\"settings.toggleSuicide()\">Suicide</button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{player.isInactive() ? 'inactive' : ''}}\"\r\n          *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"false\"\r\n                          [lifeDisplayed]=\"true\" [highlighted]=\"getPlayerState(player).killer\">\r\n        </app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {KillerComponent} from './killer.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KillerComponent}\r\n    ])\r\n  ],\r\n  declarations: [KillerComponent]\r\n})\r\nexport class KillerModule {\r\n}\r\n","export class KillerSettings {\r\n  numberOfLives: number;\r\n  boardingLimit: number;\r\n  suicide: boolean;\r\n\r\n  constructor() {\r\n    this.suicide = false;\r\n    this.numberOfLives = 7;\r\n    this.boardingLimit = 3;\r\n  }\r\n\r\n  toggleSuicide() {\r\n    this.suicide = !this.suicide;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KillerState extends PlaygroundState {\r\n\r\n  actField: number;\r\n  killer: boolean;\r\n\r\n  constructor(public boarding = 3) {\r\n    super();\r\n    this.actField = -1;\r\n    this.killer = false;\r\n  }\r\n\r\n  clone(): KillerState {\r\n    const state = new KillerState(this.boarding);\r\n    state.actField = this.actField;\r\n    state.killer = this.killer;\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {KnockoutSettings} from './models/knockout.settings.model';\r\nimport {KnockoutState} from './models/knockout.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './knockout.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class KnockoutComponent extends Playground<KnockoutState> {\r\n\r\n  settings: KnockoutSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Knockout', application, game, route, dialogService, soundService, botService, statisticsService, 'knockout', 2);\r\n    this.settings = new KnockoutSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    player.score = player.getThrowsTotal();\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    if (this.game.isTheLastThrow()) {\r\n      const score = this.getPlayerState(player).score;\r\n      if (score > player.getThrowsTotal()) {\r\n        player.life--;\r\n        this.soundService.no();\r\n      } else if (this.settings.killer && score !== 0 && score === player.getThrowsTotal()\r\n        && player.throwsHistory[player.throwsHistory.length - 1].score !== 0) {\r\n        this.game.getPreviousPlayer().life--;\r\n        this.soundService.no();\r\n      }\r\n      this.getPlayerState(this.game.getNextPlayer()).score = player.getThrowsTotal();\r\n      const activePlayers = this.game.getActivePlayers();\r\n      this.game.players.forEach(p => p.setWin(1 === activePlayers.length && !p.isInactive()));\r\n      this.game.nextPlayer();\r\n    }\r\n    while (this.game.getActualPlayer().isInactive()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => {\r\n      player.state = new KnockoutState();\r\n      player.life = this.settings.numberOfLives;\r\n    });\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.numberOfLives > 0;\r\n  }\r\n\r\n  getInfo(): number {\r\n    const player = this.game.getActualPlayer();\r\n    const state = this.getPlayerState(player);\r\n    return (state.score ? state.score : 0) - (this.game.actualThrow === 0 ? 0 : player.score);\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Games</h2>\r\n    <div class=\"field-set\">\r\n      <mat-form-field appearance=\"outline\" class=\"big\">\r\n        <mat-label>Life limit</mat-label>\r\n        <input [(ngModel)]=\"settings.numberOfLives\" type=\"number\" matInput>\r\n      </mat-form-field>\r\n    </div>\r\n    <br/>\r\n    <button class=\"button big\" [class.primary]=\"settings.killer\" (click)=\"settings.toggleKiller()\">\r\n      Below the belt\r\n    </button>\r\n\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" [info]=\"getInfo()\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}} {{player.isInactive() ? 'inactive' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [scoreDisplayed]=\"true\" [lifeDisplayed]=\"true\" [hasContent]=\"false\">\r\n        </app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {SharedModule} from '../shared/shared.module';\r\nimport {KnockoutComponent} from './knockout.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: KnockoutComponent}\r\n    ])\r\n  ],\r\n  declarations: [KnockoutComponent]\r\n})\r\nexport class KnockoutModule {\r\n}\r\n","export class KnockoutSettings {\r\n  numberOfLives: number;\r\n  killer: boolean;\r\n\r\n  constructor() {\r\n    this.numberOfLives = 5;\r\n    this.killer = true;\r\n  }\r\n\r\n  toggleKiller() {\r\n    this.killer = !this.killer;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class KnockoutState extends PlaygroundState {\r\n\r\n  constructor(public score = 0) {\r\n    super();\r\n  }\r\n\r\n  clone(): KnockoutState {\r\n    return new KnockoutState(this.score);\r\n  }\r\n}\r\n","import {NgModule} from '@angular/core';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatDividerModule} from '@angular/material/divider';\r\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\r\n\r\n\r\nconst materialImports = [\r\n  MatDialogModule,\r\n  MatButtonModule,\r\n  MatIconModule,\r\n  MatInputModule,\r\n  MatDividerModule,\r\n  MatAutocompleteModule\r\n];\r\n\r\n@NgModule({\r\n  imports: materialImports,\r\n  exports: materialImports,\r\n})\r\nexport class MaterialModule {\r\n}\r\n\r\n// Copyright 2018 Google Inc. All Rights Reserved.\r\n//   Use of this source code is governed by an MIT-style license that\r\n//   can be found in the LICENSE file at http://angular.io/license\r\n","import {animate, animateChild, group, query, style, transition, trigger} from '@angular/animations';\r\n\r\nexport const slideInAnimation =\r\n  trigger('routeAnimations', [\r\n    transition('* <=> *', [\r\n      style({position: 'relative'}),\r\n      query(':enter, :leave', [\r\n        style({\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%'\r\n        })\r\n      ], {optional: true}),\r\n      query(':enter', [\r\n        style({left: '-100%'})\r\n      ], {optional: true}),\r\n      query(':leave', animateChild(), {optional: true}),\r\n      group([\r\n        query(':leave', [\r\n          animate('300ms ease-out', style({left: '100%'}))\r\n        ], {optional: true}),\r\n        query(':enter', [\r\n          animate('300ms ease-out', style({left: '0%'}))\r\n        ], {optional: true})\r\n      ]),\r\n      query(':enter', animateChild(), {optional: true}),\r\n    ]),\r\n  ]);\r\n","import {CricketSettings} from '../../cricket/models/cricet.settings.model';\r\n\r\nexport class ScamSettings extends CricketSettings {\r\n\r\n  stopper = false;\r\n  punishment = true;\r\n  reverse = false;\r\n  punishmentValue = 25;\r\n  promoter = true;\r\n\r\n  constructor() {\r\n   super();\r\n   this.style = 1;\r\n   this.all();\r\n  }\r\n\r\n  toggleStopper() {\r\n    this.promoter = true;\r\n    this.stopper = !this.stopper;\r\n    if (this.stopper) {\r\n      this.punishment = false;\r\n    }\r\n  }\r\n\r\n  toggleReverse() {\r\n    this.reverse = !this.reverse;\r\n  }\r\n\r\n  togglePunishment() {\r\n    this.punishment = !this.punishment;\r\n  }\r\n\r\n  togglePromoter() {\r\n    this.stopper = false;\r\n    this.promoter = !this.promoter;\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class ScamState extends PlaygroundState {\r\n\r\n  ownFields = [];\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  clone(): ScamState {\r\n    const state = new ScamState();\r\n    state.ownFields = [...this.ownFields];\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\nimport {FIELDS_COUNT, Playground} from '~models/playground.model';\nimport {GameService} from '~services/game.service';\nimport {Player} from '~models/player.model';\nimport {Router} from '@angular/router';\nimport {DialogService} from '~services/dialog.service';\nimport {slideInAnimation} from '../route-animation';\nimport {ApplicationStateService} from '~services/application-state.service';\nimport {ScamSettings} from './models/scam.settings.model';\nimport {SoundService} from '~services/sound.service';\nimport {StatisticsService} from '~services/statistics.service';\nimport {BotService, PLAYER_DELAY_FAST} from '~services/bot.service';\nimport {ScamState} from './models/scam.state.model';\n\n@Component({\n  templateUrl: './scam.component.html',\n  animations: [slideInAnimation],\n})\nexport class ScamComponent extends Playground<ScamState> {\n\n  settings: ScamSettings;\n\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\n    super('Scam', application, game, route, dialogService, soundService, botService, statisticsService, 'scam', 2);\n    this.settings = new ScamSettings();\n  }\n\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\n    const state = this.getPlayerState(player);\n    if (!!this.game.numbs[fieldIndex]) {\n      if (this.settings.stopper && this.game.isTheFirstPlayer(player)) {\n        this.game.numbs[fieldIndex] = 0;\n      } else if (this.settings.stopper) {\n        player.score += (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier * (this.settings.reverse ? -1 : 1);\n      } else {\n        state.ownFields.push(fieldIndex);\n        player.score += (this.settings.isNoScoreGame() ? 1 : score) * this.multiplier * (this.settings.reverse ? -1 : 1);\n        this.game.numbs[fieldIndex] = 0;\n      }\n    } else {\n      const newScore = score === 0 ? this.settings.punishmentValue : score;\n      const scr = (this.settings.isNoScoreGame() ? 1 : newScore) * this.multiplier;\n      if (this.settings.punishment && ((this.settings.stopper && !this.game.isTheFirstPlayer(player)) || !this.settings.stopper)) {\n        player.score -= scr;\n      }\n      if (this.settings.promoter) {\n        const owner = this.game.players.find(p => this.getPlayerState(p).ownFields.some(i => i === fieldIndex));\n        if (owner && owner.name !== player.name) {\n          owner.score += scr;\n        }\n      }\n    }\n  }\n\n  checkPlayerState(player: Player) {\n    if (!this.game.numbs.some(n => n)) {\n      const bests = this.game.getTheBestPlayers();\n      this.game.players.forEach(p => p.setWin(bests.some(b => b.name === p.name)));\n    }\n    if (this.game.isTheLastThrow()) {\n      this.game.nextPlayer();\n    }\n  }\n\n  isPrimaryField(fieldIndex: number): boolean {\n    return !!this.game.numbs[fieldIndex];\n  }\n\n  isAlertField(fieldIndex: number): boolean {\n    return this.settings.punishment && !this.game.numbs[fieldIndex];\n  }\n\n  isFieldEnabled(fieldIndex: number): boolean {\n    return this.settings.punishment || !!this.game.numbs[fieldIndex];\n  }\n\n  customReset() {\n    this.game.players.forEach(player => {\n      player.state = new ScamState();\n    });\n    this.game.numbs = this.settings.numbs.map(i => i ? 1 : 0);\n    this.settings.fields.forEach(f => this.settings.numbs[f] = true);\n  }\n\n  getGameConfig(): string {\n    return this.settings.fields.length + '';\n  }\n\n  getFieldNote(fieldIndex: number): string {\n    const player = this.game.players.find(p => this.getPlayerState(p).ownFields.some(i => i === fieldIndex))\n    if (player) {\n      return player.name.substr(0, 1).toUpperCase();\n    }\n    return '';\n  }\n\n  botThrow() {\n    let fields = [...Array(FIELDS_COUNT).keys()];\n    if (this.settings.reverse) {\n      fields.reverse();\n    }\n    fields = fields.filter(index => this.game.numbs[index]).slice(-4).slice(0, 3);\n    const index = this.botService.calculateMultiTarget(fields);\n    if (this.botService.isDoublePoint()) {\n      this.doublePoint();\n    } else if (this.botService.isTriplePoint()) {\n      this.triplePoint();\n    }\n    setTimeout(() => {\n      this.throwNumber([this.isFieldEnabled(index) ? Playground.getFieldValueFromIndex(index) : 0,\n        Playground.getFieldValueFromIndex(index)]);\n    }, PLAYER_DELAY_FAST);\n  }\n\n  getPunishValue(): number {\n    return this.settings.isNoScoreGame() ? 1 : 25;\n  }\n}\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Fields</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.isFieldAllowed(i)\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n    <button class=\"button shortmedium\" (click)=\"settings.top()\">Top</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.bottom()\">Bottom</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.left()\">Left</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.right()\">Right</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.black()\">Black</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.white()\">White</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.high()\">High</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.small()\">Small</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.odd()\">Odd</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.even()\">Even</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.prime()\">Prime</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.notPrime()\">Not prime</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.cross()\">Cross</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize(6)\">Random 06</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize(12)\">Random 12</button>\r\n    <button class=\"button shortmedium\" (click)=\"settings.all()\">All</button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <h2>Style</h2>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==1\"\r\n            (click)=\"settings.setStyle(1)\">Classic\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.stopper\"\r\n            (click)=\"settings.toggleStopper()\">Stopper\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.style==3\"\r\n            (click)=\"settings.setStyle(3)\">No Score\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.punishment\"\r\n            (click)=\"settings.togglePunishment()\">Punish({{getPunishValue()}})\r\n    </button>\r\n    <button class=\"button shortmedium\" [class.primary]=\"settings.promoter\" (click)=\"settings.togglePromoter()\">\r\n      Promoter\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"\r\n          [highlighted]=\"settings.stopper && game.isTheFirstPlayer(player)\"\r\n          [scoreDisplayed]=\"!settings.stopper || !game.isTheFirstPlayer(player)\">\r\n        </app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\r\n  </app-number-plate-visual>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ScamComponent} from './scam.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ScamComponent}\r\n    ])\r\n  ],\r\n  declarations: [ScamComponent]\r\n})\r\nexport class ScamModule {\r\n}\r\n","export class ShanghaiSettings {\r\n\r\n  fields: number[];\r\n  numbs: boolean[] = [];\r\n  noScore: boolean;\r\n  halveIt: boolean;\r\n  resetIt: boolean;\r\n\r\n  constructor() {\r\n    this.fields = [];\r\n    this.noScore = false;\r\n    this.halveIt = true;\r\n    this.resetIt = false;\r\n    let defaultSet = true;\r\n    for (let i = 0; i < 21; i++) {\r\n      this.numbs[i] = defaultSet;\r\n      if (i === 19) {\r\n        defaultSet = false;\r\n      }\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  randomize() {\r\n    for (let i = 0; i < this.numbs.length; i++) {\r\n      this.numbs[i] = false;\r\n    }\r\n    for (let i = 0; i < 8; i++) {\r\n      let rand = Math.floor(Math.random() * 21);\r\n      while (this.numbs[rand]) {\r\n        rand = Math.floor(Math.random() * 21);\r\n      }\r\n      this.numbs[rand] = true;\r\n    }\r\n    this.initFields();\r\n  }\r\n\r\n  toggleNoScore() {\r\n    this.noScore = !this.noScore;\r\n  }\r\n\r\n  toggleHalveIt() {\r\n    this.halveIt = !this.halveIt;\r\n    if (this.halveIt) {\r\n      this.resetIt = false;\r\n    }\r\n  }\r\n\r\n  toggleResetIt() {\r\n    this.resetIt = !this.resetIt;\r\n    if (this.resetIt) {\r\n      this.halveIt = false;\r\n    }\r\n  }\r\n\r\n  getNumbers() {\r\n    const numbers: number[] = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      numbers[i] = (i + 1);\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  setNumber(i: number) {\r\n    this.numbs[i] = !this.numbs[i];\r\n    this.initFields();\r\n  }\r\n\r\n  initFields() {\r\n    this.fields = [];\r\n    for (let i = 0; i < 21; i++) {\r\n      if (this.numbs[i]) {\r\n        this.fields.push(i);\r\n      }\r\n    }\r\n  }\r\n}\r\n","import {PlaygroundState} from '~models/playground-state.model';\r\nimport {FieldValue} from '~models/field-value.model';\r\n\r\nexport class ShanghaiState extends PlaygroundState {\r\n\r\n  fieldCount: FieldValue[];\r\n  fieldScore: FieldValue[];\r\n\r\n  constructor() {\r\n    super();\r\n    this.fieldCount = [];\r\n    this.fieldScore = [];\r\n  }\r\n\r\n  getFieldCount(field: number): number {\r\n    return this.getFieldValue(this.fieldCount, field).value;\r\n  }\r\n\r\n  increaseFieldCount(field: number, value: number) {\r\n    this.getFieldValue(this.fieldCount, field).value += value;\r\n  }\r\n\r\n  getFieldScore(field: number): number {\r\n    return this.getFieldValue(this.fieldScore, field).value;\r\n  }\r\n\r\n  increaseFieldScore(field: number, value: number) {\r\n    this.getFieldValue(this.fieldScore, field).value += value;\r\n  }\r\n\r\n  clone(): ShanghaiState {\r\n    const state = new ShanghaiState();\r\n    this.fieldCount.forEach(fv => state.fieldCount.push(fv.clone()));\r\n    this.fieldScore.forEach(fv => state.fieldScore.push(fv.clone()));\r\n    return state;\r\n  }\r\n}\r\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {ShanghaiSettings} from './models/shanghai.settings.model';\r\nimport {ShanghaiState} from './models/shanghai.state.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\nimport {BotService} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './shanghai.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class ShanghaiComponent extends Playground<ShanghaiState> {\r\n\r\n  settings: ShanghaiSettings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('Shanghai / Halve It', application, game, route, dialogService, soundService, botService, statisticsService, 'shanghai');\r\n    this.settings = new ShanghaiSettings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const state = this.getPlayerState(player);\r\n    if (this.isActiveField(fieldIndex)) {\r\n      state.increaseFieldCount(fieldIndex, 1);\r\n      state.increaseFieldScore(fieldIndex, this.multiplier);\r\n      if (this.settings.noScore) {\r\n        player.score += this.multiplier;\r\n      } else {\r\n        player.score += score * this.multiplier;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    // Shanghai rule\r\n    if (this.game.isTheLastThrow()) {\r\n      let multi = 1;\r\n      const fieldIndex = this.settings.fields[this.game.round];\r\n      for (let i = 0; i < 3; i++) {\r\n        const t = player.throwsHistory[player.throwsHistory.length - i - 1];\r\n        if (t.score === Playground.getFieldValueFromIndex(fieldIndex)) {\r\n          multi *= (t.multi + 1);\r\n        }\r\n      }\r\n      if (multi === 1 && this.settings.halveIt) {\r\n        player.score = Math.round(player.score / 2);\r\n      } else if (multi === 1 && this.settings.resetIt) {\r\n        player.score = 0;\r\n      }\r\n      player.setWin(multi === 24);\r\n      if (player.win) {\r\n        this.extraEndingMsg = 'SHANGHAI!!!';\r\n      }\r\n    }\r\n\r\n    const gameEnded = (this.game.round === (this.settings.fields.length - 1))\r\n      && this.game.isActualPlayerTheLast() && this.game.isTheLastThrow();\r\n    if (gameEnded) {\r\n      this.game.players.forEach(p => p.setWin(this.game.isTheBestPlayer(p)));\r\n    } else if (this.game.isTheLastThrow()) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  getFieldValue(player: Player, fieldIndex: number): string {\r\n    const fieldCount = this.getPlayerState(player).getFieldCount(fieldIndex);\r\n    if (fieldCount === 0) {\r\n      return '○○○';\r\n    } else {\r\n      let str = '' + this.getPlayerState(player).getFieldScore(fieldIndex) * Playground.getFieldValueFromIndex(fieldIndex);\r\n      for (let i = 0; i < fieldCount; i++) {\r\n        str += '●';\r\n      }\r\n      for (let i = fieldCount; i < 3; i++) {\r\n        str += '○';\r\n      }\r\n      return str;\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.state = new ShanghaiState());\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return this.settings.fields.length > 0;\r\n  }\r\n\r\n  isActiveField(fieldIndex: number): boolean {\r\n    return this.settings.fields[this.game.round] === fieldIndex;\r\n  }\r\n\r\n  isFieldDoneForPlayer(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) < this.game.round;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return this.settings.fields.indexOf(fieldIndex) === this.game.round;\r\n  }\r\n\r\n  getActualFieldIndex(): number {\r\n    return this.settings.fields[this.game.round];\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return this.isFieldEnabled(fieldIndex);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    if (!winners.length) {\r\n      return [];\r\n    }\r\n    let max = winners[0].score;\r\n    winners.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    winners = winners.filter(p => p.score === max).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id)).map(p => {\r\n      const c = p.clone();\r\n      c.win = false;\r\n      return c;\r\n    });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + player.score + ((player.win && this.extraEndingMsg) ? ('/s') : '');\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.fields.length + ','\r\n      + (this.settings.halveIt ? '1' : '0') + '-' + (this.settings.resetIt ? '1' : '0');\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\r\n\r\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\r\n    <h2>Fields</h2>\r\n    <button class=\"button\" [class.primary]=\"settings.numbs[i]\"\r\n            *ngFor=\"let numb of settings.getNumbers(); let i = index\" (click)=\"settings.setNumber(i)\">\r\n      {{numb === 21 ? 'B' : numb}}\r\n    </button>\r\n    <mat-divider></mat-divider>\r\n\r\n    <button class=\"button shortmedium\" (click)=\"settings.randomize()\">Randomize</button>\r\n    <button class=\"button shortmedium\"  [class.primary]=\"settings.noScore\"\r\n            (click)=\"settings.toggleNoScore()\">No score\r\n    </button>\r\n    <button class=\"button shortmedium\"  [class.primary]=\"settings.halveIt\"\r\n            (click)=\"settings.toggleHalveIt()\">Halve It\r\n    </button>\r\n    <button class=\"button shortmedium\"  [class.primary]=\"settings.resetIt\"\r\n            (click)=\"settings.toggleResetIt()\">Reset It\r\n    </button>\r\n  </app-settings>\r\n\r\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\r\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\"></app-game-toolbar>\r\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\r\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\r\n           *ngFor=\"let player of game.players; let i = index\">\r\n        <app-player-score [player]=\"player\">\r\n          <div class=\"field-set\">\r\n            <div class=\"field {{isActiveField(field) ? 'active': ''}} {{isFieldDoneForPlayer(field) ? '' : 'highlighted'}}\"\r\n                 *ngFor=\"let field of settings.fields\">\r\n              {{field === 20 ? 'B' : (field + 1)}}: <span class=\"small\">{{ getFieldValue(player, field) }}</span>\r\n            </div>\r\n          </div>\r\n        </app-player-score>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\r\n  <app-number-plate-shanghai [playground]=\"playground\" [actualIndex]=\"getActualFieldIndex()\"\r\n                             *ngIf=\"!settingsOpen && !application.settings.details\"></app-number-plate-shanghai>\r\n</div>\r\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {ShanghaiComponent} from './shanghai.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: ShanghaiComponent}\r\n    ])\r\n  ],\r\n  declarations: [ShanghaiComponent]\r\n})\r\nexport class ShanghaiModule {\r\n}\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: 'confirm-dialog.component.html',\r\n  styleUrls: ['confirm-dialog.component.scss']\r\n})\r\nexport class ConfirmDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<ConfirmDialogComponent>,\r\n              public application: ApplicationStateService,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string }) {\r\n  }\r\n\r\n  cancel(): void {\r\n    this.dialogRef.close(false);\r\n  }\r\n\r\n  confirm(): void {\r\n    this.dialogRef.close(true);\r\n  }\r\n}\r\n","<div class=\"dialog-container\" [class.mobile]=\"application.isMobile\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content\">\r\n    <p>{{ data.content }}</p>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button class=\"button primary\" (click)=\"confirm()\">OK</button>\r\n    <button class=\"button\" (click)=\"cancel()\">Cancel</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\n\r\n@Component({\r\n  templateUrl: 'dialog.component.html',\r\n  styleUrls: ['dialog.component.scss']\r\n})\r\nexport class DialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<DialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { title: string, content: string, players: Player[] }) {\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>{{ data.title }}</p></div>\r\n  <mat-dialog-content class=\"body-2\" *ngIf=\"!!data.content || !!data.players.length\">\r\n    <p>{{ data.content }}</p>\r\n    <div class=\"score-line\" *ngFor=\"let player of data.players; let i = index\" [class.winner]=\"player.win\">\r\n      <div>{{i+1}}. {{player.name}} <mat-icon color=\"warn\" *ngIf=\"player.win\">star</mat-icon></div>\r\n      <div>{{player.score}}</div>\r\n    </div>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button [mat-dialog-close]=\"true\" class=\"button primary\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {STAT_NAME_SEPARATOR} from '~services/statistics.service';\r\nimport {environment} from '../../../../environments/environment';\r\n\r\n@Component({\r\n  templateUrl: 'game-history-dialog.component.html',\r\n  styleUrls: ['game-history-dialog.component.scss']\r\n})\r\nexport class GameHistoryDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameHistoryDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: GameStatistics[] }) {\r\n    data.statistics.sort((a, b) => new Date(b.s).getTime() - new Date(a.s).getTime());\r\n  }\r\n\r\n  getDuration(stat: GameStatistics): Date {\r\n    return new Date(new Date(stat.f).getTime() - new Date(stat.s).getTime());\r\n  }\r\n\r\n  getPlayers(players: string[]): string[] {\r\n    return players.map(p => {\r\n      const pna = p.split(STAT_NAME_SEPARATOR);\r\n      let result = pna[0];\r\n      if (pna.length === 2) {\r\n        result += '(' + pna[1] + ')';\r\n      }\r\n      return result;\r\n    });\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  getAppVersion(): string {\r\n    return environment.appVersion ? environment.appVersion : '';\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\">\r\n    <p>History</p>\r\n    <p class=\"app-version\">v{{ getAppVersion() }}</p>\r\n  </div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Date</th>\r\n        <th>Duration</th>\r\n        <th>Type</th>\r\n        <th>Config</th>\r\n        <th>Round</th>\r\n        <th>Winner(s)</th>\r\n        <th>Loser(s)</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.s | date:'medium' }}</td>\r\n        <td>{{ getDuration(stat) | date: 'mm:ss' }}</td>\r\n        <td>{{ stat.g }}</td>\r\n        <td>{{ stat.c }}</td>\r\n        <td>{{ stat.r + 1 }}</td>\r\n        <td>{{ getPlayers(stat.w) }}</td>\r\n        <td>{{ getPlayers(stat.l) }}</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button [mat-dialog-close]=\"true\" class=\"button primary\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\n\r\n@Component({\r\n  templateUrl: 'game-statistics-dialog.component.html',\r\n  styleUrls: ['game-statistics-dialog.component.scss']\r\n})\r\nexport class GameStatisticsDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameStatisticsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: PlayerStatistics[] }) {\r\n    data.statistics.sort((a, b) => this.getRatio(b) - this.getRatio(a));\r\n  }\r\n\r\n  getRatio(stat: PlayerStatistics): number {\r\n    return Math.round(stat.w / (stat.w + stat.l) * 100);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>Statistics</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Player</th>\r\n        <th>Wins</th>\r\n        <th>Loses</th>\r\n        <th>All</th>\r\n        <th>Rate</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.n }}</td>\r\n        <td>{{ stat.w }}</td>\r\n        <td>{{ stat.l }}</td>\r\n        <td>{{ stat.l + stat.w }}</td>\r\n        <td>{{ getRatio(stat) }} %</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button [mat-dialog-close]=\"true\" class=\"button primary\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-game-toolbar',\r\n  templateUrl: './game-toolbar.component.html',\r\n  styleUrls: ['./game-toolbar.component.scss']\r\n})\r\nexport class GameToolbarComponent {\r\n\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  @Input() reversRound: number;\r\n  @Input() info: number;\r\n\r\n  constructor(public route: Router,\r\n              public application: ApplicationStateService,\r\n              private dialogService: DialogService) {\r\n  }\r\n\r\n  quit() {\r\n    this.showConfirmation('Are you sure you want to navigate away from this page?', () => {\r\n      this.route.navigate(['/']);\r\n      this.playground.game.resetScore();\r\n      this.playground.multiplier = 1;\r\n      this.playground.extraEndingMsg = '';\r\n    });\r\n  }\r\n\r\n  newGame() {\r\n    this.showConfirmation('Are you sure you want to start a new game?', () => {\r\n      this.playground.newGame(true);\r\n    });\r\n  }\r\n\r\n  showSettings() {\r\n    this.showConfirmation('Are you sure you want to navigate to the settings page?', () => {\r\n      this.playground.reset();\r\n      this.playground.settingsOpen = true;\r\n    });\r\n  }\r\n\r\n  undo() {\r\n    this.playground.undo();\r\n  }\r\n\r\n  private showConfirmation(content: string, callback: () => void) {\r\n    if (this.playground.gameHistory.length) {\r\n      this.dialogService.openConfirmDialog('Confirmation', content)\r\n        .afterClosed().subscribe(data => {\r\n        if (data) {\r\n          callback();\r\n        }\r\n      });\r\n    } else {\r\n      callback();\r\n    }\r\n  }\r\n\r\n  private getRound(): number {\r\n    const round = this.playground.game.round;\r\n    return this.reversRound ? (this.reversRound - round) : (round + 1);\r\n  }\r\n}\r\n","<div class=\"toolbar\">\r\n  <button class=\"button icon-button\" (click)=\"quit()\">\r\n    <mat-icon>menu</mat-icon>\r\n  </button>\r\n  <button class=\"button icon-button\" (click)=\"showSettings()\">\r\n    <mat-icon>build</mat-icon>\r\n  </button>\r\n  <button class=\"button icon-button\" (click)=\"newGame()\">\r\n    <mat-icon>refresh</mat-icon>\r\n  </button>\r\n  <button class=\"button icon-button\" (click)=\"undo()\">\r\n    <mat-icon>undo</mat-icon>\r\n  </button>\r\n</div>\r\n","import {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\r\nimport {Component, Inject} from '@angular/core';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\n\r\n@Component({\r\n  templateUrl: 'game-type-statistics-dialog.component.html',\r\n  styleUrls: ['game-type-statistics-dialog.component.scss']\r\n})\r\nexport class GameTypeStatisticsDialogComponent {\r\n  constructor(protected dialogRef: MatDialogRef<GameTypeStatisticsDialogComponent>,\r\n              @Inject(MAT_DIALOG_DATA) public data: { statistics: GameTypeStatistics[] }) {\r\n    data.statistics.sort((a, b) => b.count - a.count);\r\n  }\r\n\r\n  close(): void {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","<div class=\"dialog-container\">\r\n  <div mat-dialog-title class=\"subtitle-1\"><p>Most Popular Games</p></div>\r\n  <mat-dialog-content class=\"body-2\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" class=\"statistics-table\">\r\n      <tr>\r\n        <th>Game title</th>\r\n        <th>Count</th>\r\n      </tr>\r\n      <tr *ngFor=\"let stat of data.statistics\">\r\n        <td>{{ stat.name }}</td>\r\n        <td>{{ stat.count }}</td>\r\n      </tr>\r\n    </table>\r\n  </mat-dialog-content>\r\n  <mat-dialog-actions>\r\n    <button [mat-dialog-close]=\"true\" class=\"button primary\">Ok</button>\r\n  </mat-dialog-actions>\r\n</div>\r\n","import {Component} from '@angular/core';\r\nimport {Router, Routes} from '@angular/router';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {routes} from '../../../app-game-types';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  templateUrl: './menu.component.html',\r\n  styleUrls: ['./menu.component.scss']\r\n})\r\nexport class MenuComponent {\r\n\r\n  constructor(private readonly router: Router,\r\n              private readonly dialog: DialogService,\r\n              private readonly statisticsService: StatisticsService,\r\n              public readonly applicationStateService: ApplicationStateService) {\r\n  }\r\n\r\n  randomGame() {\r\n    const random = Math.floor(Math.random() * routes.length);\r\n    this.router.navigate(['/' + routes[random].path]);\r\n  }\r\n\r\n  getGameList(): Routes {\r\n    return routes.filter(r => !!r.data);\r\n  }\r\n\r\n  openGameTypeStatistics() {\r\n    this.dialog.openGameTypeStatistics(this.statisticsService.getGameTypeStatistics());\r\n    // this.statisticsService.printStatistics();\r\n  }\r\n\r\n  openGameStatistics() {\r\n    this.dialog.openGameHistory(this.statisticsService.getGameStatistics());\r\n  }\r\n}\r\n","<div id=\"menu_title\">\n  <h1 (click)=\"randomGame()\">Select Game!</h1>\n</div>\n<div id=\"menu\">\n  <div class=\"button-line\" *ngFor=\"let k of [0,1,2,3]\">\n    <button *ngFor=\"let g of getGameList().slice(k*3,k*3 + 3); let i = index\"\n            [routerLink]=\"['/' + g.path]\"\n            class=\"button gameSelectBox {{'menu-button-' + k + '' + i}} {{g.data.bot ? 'hasBot' : ''}}\">\n      <div class=\"menu-item-container\">\n        <div class=\"title\">{{g.data.name}}</div>\n        <mat-icon>{{g.data.icon}}</mat-icon>\n      </div>\n    </button>\n  </div>\n</div>\n<div class=\"version\">\n  <button (click)=\"openGameTypeStatistics()\" class=\"button primary icon\">\n    <mat-icon>stars</mat-icon>\n  </button>\n  <button (click)=\"openGameStatistics()\" class=\"button primary icon\">\n    <mat-icon>history</mat-icon>\n  </button>\n</div>\n","<div class=\"side-right\">\r\n  <div class=\"numbers\">\r\n    <h1>Field: {{ actualIndex + 1 }}</h1>\r\n    <div class=\"button-line\" *ngFor=\"let k of [0,1,2]\">\r\n      <button *ngFor=\"let j of [1,2,3]\" class=\"button number primary\" (click)=\"throwNumber(j + (k*3))\">\r\n        {{ j + (k*3) }}\r\n      </button>\r\n    </div>\r\n    <div class=\"button-line\">\r\n      <button class=\"button number next\" (click)=\"next()\">0</button>\r\n      <button class=\"button number\" (click)=\"win()\">\r\n        S\r\n      </button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {DialogService} from '~services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-number-plate-shanghai',\r\n  templateUrl: './number-plate-shanghai.component.html',\r\n  styleUrls: ['./number-plate-shanghai.component.scss']\r\n})\r\nexport class NumberPlateShanghaiComponent {\r\n\r\n  @Input() actualIndex: number;\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService,\r\n              private dialogService: DialogService,\r\n              public application: ApplicationStateService) {\r\n  }\r\n\r\n  next() {\r\n    this.playground.skip();\r\n  }\r\n\r\n  win() {\r\n    this.dialogService.openConfirmDialog('Confirmation', 'Are you sure?').afterClosed()\r\n      .subscribe(data => {\r\n        if (data) {\r\n          const score = this.actualIndex + 1;\r\n          this.playground.throwNumber([score, score]);\r\n          this.playground.doublePoint();\r\n          this.playground.throwNumber([score, score]);\r\n          this.playground.triplePoint();\r\n          this.playground.throwNumber([score, score]);\r\n        }\r\n      });\r\n  }\r\n\r\n  throwNumber(count: number) {\r\n    const score = this.actualIndex + 1;\r\n    switch (count) {\r\n      case 1:\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.skip();\r\n        break;\r\n      case 2:\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.skip();\r\n        break;\r\n      case 3:\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.throwNumber([score, score]);\r\n        break;\r\n      case 4:\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.skip();\r\n        break;\r\n      case 5:\r\n        this.playground.doublePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.skip();\r\n        break;\r\n      case 6:\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.skip();\r\n        break;\r\n      case 7:\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        break;\r\n      case 8:\r\n        this.playground.doublePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        break;\r\n      case 9:\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        this.playground.triplePoint();\r\n        this.playground.throwNumber([score, score]);\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\n","import {Component, Input, OnDestroy, OnInit, ViewEncapsulation} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport * as d3 from 'd3';\r\nimport {Subject} from 'rxjs';\r\nimport {takeUntil} from 'rxjs/operators';\r\n\r\nconst ARC_WIDTH = 0.295;\r\n\r\n@Component({\r\n  selector: 'app-number-plate-visual',\r\n  templateUrl: './number-plate-visual.component.html',\r\n  styleUrls: ['./number-plate-visual.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class NumberPlateVisualComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() playground: any;\r\n  numbers = [20, 1, 18, 4, 13, 6, 10, 15, 2, 17, 3, 19, 7, 16, 8, 11, 14, 9, 12, 5];\r\n  private ngUnsubscribeHasChange = new Subject();\r\n\r\n  constructor(public game: GameService,\r\n              public application: ApplicationStateService) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.drawTable();\r\n    this.playground.hasChanges\r\n      .pipe(takeUntil(this.ngUnsubscribeHasChange))\r\n      .subscribe(flag => this.drawTable());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.ngUnsubscribeHasChange.next();\r\n    this.ngUnsubscribeHasChange.complete();\r\n  }\r\n\r\n  next() {\r\n    this.playground.skip();\r\n    this.drawTable();\r\n  }\r\n\r\n  private drawTable() {\r\n    d3.select('#darts-table-plate svg').remove();\r\n    const svg = d3.select('#darts-table-plate').append('svg').attr('width', '98%')\r\n      .attr('height', '98%').attr('viewBox', '0 0 330 330');\r\n    const numbers = [20, 1, 18, 4, 13, 6, 10, 15, 2, 17, 3, 19, 7, 16, 8, 11, 14, 9, 12, 5];\r\n    const bullIndex = this.getFieldIndex(25);\r\n\r\n    /*if (this.playground.zeroEnabled) {\r\n      this.drawArcPosition(svg, 20, 25, 30, 'field-color primary');\r\n      this.drawText(svg, '0', 0, 25, 23, -1, 1,\r\n        'number-text', () => this.throwZero());\r\n    }*/\r\n\r\n    this.drawArc(svg, 0, 165, 0, Math.PI * 4, 'field-inactive', -1, 1);\r\n    this.drawArc(svg, 0, 19, 0, Math.PI * 4, 'field-color-m', bullIndex, 2);\r\n    this.drawArc(svg, 20, 49, 0, Math.PI * 4, 'field-color', bullIndex, 1);\r\n    for (let i = 0; i < numbers.length; i++) {\r\n      const fieldIndex = this.getFieldIndex(numbers[i]);\r\n      const colorSlice = 'field-color';\r\n      const colorSliceMulti = 'field-color-m';\r\n      const startAngle = i * Math.PI / 10 - ARC_WIDTH / 2;\r\n      const endAngle = startAngle + ARC_WIDTH;\r\n      this.drawArc(svg, 50, 84, startAngle, endAngle, colorSliceMulti, fieldIndex, 3);\r\n      this.drawArc(svg, 85, 119, startAngle, endAngle, colorSlice, fieldIndex, 1);\r\n      this.drawArc(svg, 120, 144, startAngle, endAngle, colorSliceMulti, fieldIndex, 2);\r\n      this.drawText(svg, numbers[i] + '', i * 18 - 2, 170, 3, fieldIndex, 1, 'number-text' + ' ' + this.getNumberColor(fieldIndex));\r\n      if (!!this.playground.getFieldNote(fieldIndex)) {\r\n        this.drawText(svg, this.playground.getFieldNote(fieldIndex), i * 18 - 2, 170, 14, fieldIndex, 1, 'field-note');\r\n      }\r\n    }\r\n    this.drawText(svg, '25', 0, 165, 127, bullIndex, 1, 'number-text' + ' ' + this.getNumberColor(bullIndex));\r\n    this.drawText(svg, '50', 0, 165, 158.5, bullIndex, 2, 'number-text' + ' ' + this.getNumberColor(bullIndex));\r\n    if (!!this.playground.getFieldNote(bullIndex)) {\r\n      this.drawText(svg, this.playground.getFieldNote(bullIndex), 0, 165, 193, bullIndex, 1, 'field-note');\r\n    }\r\n\r\n    this.drawText(svg, '2x', 0, 165, 28, 19, 2, 'number-text smaller' + ' ' + this.getNumberColor(19));\r\n    this.drawText(svg, '1x', 0, 165, 58, 19, 1, 'number-text smaller' + ' ' + this.getNumberColor(19));\r\n    this.drawText(svg, '3x', 0, 165, 92, 19, 3, 'number-text smaller' + ' ' + this.getNumberColor(19));\r\n  }\r\n\r\n  private getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isPrimaryField(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondaryField(fieldIndex)) {\r\n      return 'accent';\r\n    } else if (this.playground.isAlertField(fieldIndex)) {\r\n      return 'alert';\r\n    } else if (!this.playground.isFieldEnabled(fieldIndex)) {\r\n      return 'disabled';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  private isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabled(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  private throwNumber(fieldIndex: number, multi: number) {\r\n    if (!this.isNumberDisabled(fieldIndex)) {\r\n      if (multi === 2) {\r\n        this.playground.doublePoint();\r\n      }\r\n      if (multi === 3) {\r\n        this.playground.triplePoint();\r\n      }\r\n      this.playground.throwNumber([this.playground.isFieldEnabled(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0,\r\n        Playground.getFieldValueFromIndex(fieldIndex)]);\r\n    }\r\n    this.drawTable();\r\n    document.querySelector(`path.field_${fieldIndex}_${multi}`).classList.add('clicked');\r\n  }\r\n\r\n  throwZero() {\r\n    if (this.playground.zeroEnabled) {\r\n      this.playground.throwNumber([0,0]);\r\n      this.drawTable();\r\n    }\r\n  }\r\n\r\n  private drawText(svg, text: string, rotate: number, x: number, y: number, fieldIndex: number,\r\n                   multi: number, className: string, onclick?: () => void) {\r\n    svg.append('text')\r\n      .attr('x', x)\r\n      .attr('y', y)\r\n      .attr('dy', '1em')\r\n      .attr('text-anchor', 'middle')\r\n      .attr('transform', 'rotate(' + rotate + ', 165, 165)')\r\n      .attr('class', `field_${fieldIndex}_${multi} ${className}`)\r\n      .text(text)\r\n      .on('click', () => onclick ? onclick() : this.throwNumber(fieldIndex, multi));\r\n  }\r\n\r\n  private drawArc(svg: any, innerRadius: number, outerRadius: number, startAngle: number, endAngle: number,\r\n                  styleClass: string, fieldIndex: number, multi: number) {\r\n    svg\r\n      .append('path')\r\n      .attr('transform', 'translate(165, 165)')\r\n      .attr('d', d3.arc()\r\n        .innerRadius(innerRadius)\r\n        .outerRadius(outerRadius)\r\n        .startAngle(startAngle)\r\n        .endAngle(endAngle)\r\n      )\r\n      .attr('class', `field_${fieldIndex}_${multi} ${styleClass} ${this.getNumberColor(fieldIndex)}`)\r\n      .on('click', () => this.throwNumber(fieldIndex, multi));\r\n  }\r\n\r\n  private drawArcPosition(svg: any, radius: number, x: number, y: number, styleClass: string) {\r\n    svg\r\n      .append('path')\r\n      .attr('transform', 'translate(' + x + ', ' + y + ')')\r\n      .attr('d', d3.arc()\r\n        .innerRadius(0)\r\n        .outerRadius(radius)\r\n        .startAngle(0)\r\n        .endAngle(Math.PI * 4)\r\n      )\r\n      .attr('class', styleClass)\r\n      .on('click', () => this.throwZero());\r\n  }\r\n\r\n  private getFieldIndex(field: number): number {\r\n    return field === 25 ? 20 : field - 1;\r\n  }\r\n}\r\n\r\n","<div class=\"side-right_visual\">\r\n  <div id=\"darts-table-plate\"></div>\r\n  <div class=\"buttons\">\r\n    <button class=\"button number\" (click)=\"next()\" [disabled]=\"!playground.nextEnabled\">Next</button>\r\n    <button class=\"button number zero\" (click)=\"throwZero()\" [disabled]=\"!playground.zeroEnabled\">0</button>\r\n  </div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {GameService} from '~services/game.service';\r\nimport {Playground} from '~models/playground.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-number-plate',\r\n  templateUrl: './number-plate.component.html',\r\n  styleUrls: ['./number-plate.component.scss']\r\n})\r\nexport class NumberPlateComponent {\r\n\r\n  @Input() playground: any;\r\n\r\n  constructor(public game: GameService,\r\n              public application: ApplicationStateService) {\r\n  }\r\n\r\n  getNumbers(): number[] {\r\n    const numbers: number[] = [];\r\n    for (let i = 1; i <= 20; i++) {\r\n      numbers[i - 1] = i;\r\n    }\r\n    return numbers;\r\n  }\r\n\r\n  getNumberColor(fieldIndex: number): string {\r\n    if (this.playground.isPrimaryField(fieldIndex)) {\r\n      return 'primary';\r\n    } else if (this.playground.isSecondaryField(fieldIndex)) {\r\n      return 'accent';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  isNumberDisabled(fieldIndex: number): boolean {\r\n    return !this.playground.isFieldEnabled(fieldIndex) && !this.getNumberColor(fieldIndex);\r\n  }\r\n\r\n  throwNumber(fieldIndex: number) {\r\n    this.playground.throwNumber([this.playground.isFieldEnabled(fieldIndex) ? Playground.getFieldValueFromIndex(fieldIndex) : 0,\r\n      Playground.getFieldValueFromIndex(fieldIndex)]);\r\n  }\r\n}\r\n\r\n","<div class=\"side-right\" [class.detailed]=\"application.settings.details\">\r\n\r\n  <ng-container *ngFor=\"let i of getNumbers()\">\r\n    <button class=\"button number {{getNumberColor(i-1)}}\"\r\n            [disabled]=\"isNumberDisabled(i-1)\" (click)=\"throwNumber(i-1)\">\r\n      <mat-icon *ngIf=\"playground.getFieldIcon(i-1)\">{{ playground.getFieldIcon(i - 1)}}</mat-icon>\r\n      <p class=\"field-note\" *ngIf=\"playground.getFieldNote(i-1)\">{{ playground.getFieldNote(i - 1)}}</p>\r\n      <div class=\"field-number\">{{i}}</div>\r\n    </button>\r\n  </ng-container>\r\n\r\n  <button class=\"button number {{getNumberColor(20)}}\" [disabled]=\"isNumberDisabled(20)\"\r\n          (click)=\"throwNumber(20)\">\r\n    <mat-icon *ngIf=\"playground.getFieldIcon(20)\">{{ playground.getFieldIcon(20)}}</mat-icon>\r\n    <p class=\"field-note\" *ngIf=\"playground.getFieldNote(20)\">{{ playground.getFieldNote(20)}}</p>\r\n    <div class=\"field-number\">Bull</div>\r\n  </button>\r\n\r\n  <button class=\"button number\" [class.primary]=\"playground.multiplier === 2\"\r\n          (click)=\"playground.doublePoint()\" [disabled]=\"!playground.multiEnabled\">\r\n    <div class=\"field-number\">2x</div>\r\n  </button>\r\n  <button class=\"button number\" [class.primary]=\"playground.multiplier === 3\"\r\n          (click)=\"playground.triplePoint()\" [disabled]=\"!playground.multiEnabled\">\r\n    <div class=\"field-number\">3x</div>\r\n  </button>\r\n\r\n  <button class=\"button number\" (click)=\"playground.skip()\" [disabled]=\"!playground.nextEnabled\">\r\n    <div class=\"field-number\">Next</div>\r\n  </button>\r\n  <button class=\"button number\" (click)=\"playground.throwNumber([0,0])\" [disabled]=\"!playground.zeroEnabled\">\r\n    <div class=\"field-number\">0</div>\r\n  </button>\r\n</div>\r\n","<div class=\"player_info\" [class.player_info_visual]=\"!application.settings.details\">\r\n  <div class=\"name\">\r\n    <mat-icon *ngIf=\"highlighted\">offline_bolt</mat-icon>\r\n    {{player.name}}</div>\r\n  <div class=\"shoot-score\">\r\n    <div class=\"shoots\">\r\n      <div class=\"shoot\">{{!player.throws[0] ? '-' : player.throws[0]}}</div>\r\n      <div class=\"shoot\">{{!player.throws[1] ? '-' : player.throws[1]}}</div>\r\n      <div class=\"shoot\">{{!player.throws[2] ? '-' : player.throws[2]}}</div>\r\n      <div class=\"shoot total\" *ngIf=\"scoreDisplayed\">{{!player.getThrowsTotal() ? '0' : player.getThrowsTotal()}}</div>\r\n    </div>\r\n    <div class=\"score\" *ngIf=\"scoreDisplayed\">{{player.score}}</div>\r\n    <div class=\"score\" *ngIf=\"lifeDisplayed\"><label>Life: </label>{{player.life}}</div>\r\n    <div class=\"clear\"></div>\r\n  </div>\r\n</div>\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Player} from '~models/player.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\n\r\n@Component({\r\n  selector: 'app-player-score',\r\n  templateUrl: './player-score.component.html',\r\n  styleUrls: ['./player-score.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class PlayerScoreComponent {\r\n  @Input() player: Player;\r\n  @Input() hasContent = true;\r\n  @Input() scoreDisplayed = true;\r\n  @Input() lifeDisplayed = false;\r\n  @Input() highlighted = false;\r\n\r\n  constructor(public readonly application: ApplicationStateService) {\r\n  }\r\n}\r\n","<div class=\"add-player\">\r\n  <mat-form-field appearance=\"outline\" class=\"big\">\r\n    <mat-label>Player name</mat-label>\r\n    <input #playerNameInput type=\"text\" matInput placeholder=\"Enter name\"\r\n      [disabled]=\"!playground.canAddPlayer()\" [matAutocomplete]=\"auto\">\r\n    <mat-autocomplete #auto=\"matAutocomplete\" (optionSelected)=\"playerSelected($event, playerNameInput)\">\r\n      <mat-option *ngFor=\"let option of getOptions()\" [value]=\"option\">\r\n        {{option}}\r\n      </mat-option>\r\n    </mat-autocomplete>\r\n  </mat-form-field>\r\n  <button mat-icon-button (click)=\"addPlayer(playerNameInput)\" [disabled]=\"!playground.canAddPlayer()\"><mat-icon>add_circle</mat-icon></button>\r\n</div>\r\n<div class=\"player-table\">\r\n  <div class=\"player-row\" *ngFor=\"let player of playground.game.players; let i = index\">\r\n    <div class=\"player-name\">{{player.name}}</div>\r\n    <button mat-icon-button (click)=\"playground.removePlayer(player)\"><mat-icon>remove_circle</mat-icon></button>\r\n  </div>\r\n</div>\r\n","import {Component, Input} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {MatAutocompleteSelectedEvent} from '@angular/material/autocomplete';\r\n\r\n@Component({\r\n  selector: 'app-player-settings',\r\n  templateUrl: './player-settings.component.html',\r\n  styleUrls: ['./player-settings.component.scss']\r\n})\r\nexport class PlayerSettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n  storedPlayers = [];\r\n\r\n  constructor(private application: ApplicationStateService) {\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  getOptions() {\r\n    return this.storedPlayers.filter(o => this.playground.game.players\r\n      .map(p => p.name).indexOf(o) === -1);\r\n  }\r\n\r\n  addPlayer(playerNameInput: any) {\r\n    this.playground.addPlayer(playerNameInput);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n  }\r\n\r\n  playerSelected(event: MatAutocompleteSelectedEvent, playerNameInput: HTMLInputElement) {\r\n    this.playground.addPlayer(event.option);\r\n    this.storedPlayers = this.application.getStoredPlayers();\r\n    playerNameInput.value = '';\r\n    playerNameInput.blur();\r\n  }\r\n}\r\n","import {Component, Input, ViewEncapsulation} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\n\r\n@Component({\r\n  selector: 'app-settings',\r\n  templateUrl: './settings.component.html',\r\n  styleUrls: ['./settings.component.scss'],\r\n  encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SettingsComponent {\r\n  @Input() playground: Playground<PlaygroundState>;\r\n\r\n  constructor(private readonly dialogService: DialogService) {\r\n  }\r\n\r\n  openStatistics() {\r\n    this.dialogService.openGameStatisticsDialog(this.playground.getGameStatistics());\r\n  }\r\n\r\n  openHistory() {\r\n    this.dialogService.openGameHistory(this.playground.getGameHistory());\r\n  }\r\n}\r\n","<div class=\"settings\">\r\n  <h1>{{playground.gameTitle}} Settings</h1>\r\n  <h2>Players</h2>\r\n  <app-player-settings [playground]=\"playground\"></app-player-settings>\r\n  <mat-divider></mat-divider>\r\n  <ng-content></ng-content>\r\n  <mat-divider></mat-divider>\r\n  <button class=\"button shortmedium\" (click)=\"openStatistics()\">Rank</button>\r\n  <button class=\"button shortmedium\" (click)=\"openHistory()\">History</button>\r\n  <mat-divider></mat-divider>\r\n  <button class=\"button shortmedium\" color=\"primary\" (click)=\"playground.newGame()\">Start</button>\r\n  <button class=\"button shortmedium\" (click)=\"playground.quit()\">Cancel</button>\r\n</div>\r\n","export class ApplicationSettings {\r\n  theme = 0;\r\n  details = 0;\r\n}\r\n","export class FieldValue {\n  field: number;\n  value: number;\n\n  constructor(field: number, value: number) {\n    this.field = field;\n    this.value = value;\n  }\n\n  clone(): FieldValue {\n    return new FieldValue(this.field, this.value);\n  }\n}\n","export class GameStatistics {\r\n  g: string;\r\n  w: string[];\r\n  l: string[];\r\n  r: number;\r\n  s: string;\r\n  f: string;\r\n  c?: string;\r\n}\r\n","import {Throw} from './throw.model';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\n\r\nexport class Player {\r\n  score = 0;\r\n  throws: number[] = [];\r\n  throwsHistory: Throw[];\r\n  win = false;\r\n  winDateTime = 0;\r\n  first = true;\r\n  state: PlaygroundState;\r\n  life = 1;\r\n\r\n  constructor(public id: number, public name = '') {\r\n  }\r\n\r\n  setWin(win = true) {\r\n    this.win = win;\r\n    this.winDateTime = win ? new Date().getTime() : 0;\r\n  }\r\n\r\n  getThrowsTotal(): number {\r\n    return this.throws.reduce((a, b) => a + b, 0);\r\n  }\r\n\r\n  addThrowHistory(thr: Throw) {\r\n    this.throwsHistory.push(thr);\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return this.life <= 0;\r\n  }\r\n\r\n  reset() {\r\n    this.score = 0;\r\n    this.throws = [];\r\n    this.throwsHistory = [];\r\n    this.win = false;\r\n    this.winDateTime = 0;\r\n    this.first = true;\r\n  }\r\n\r\n  clone(): Player {\r\n    const player = new Player(this.id, this.name);\r\n    player.score = this.score;\r\n    player.life = this.life;\r\n    player.throws = [];\r\n    this.throws.forEach(t => {\r\n      player.throws.push(t);\r\n    });\r\n    player.throwsHistory = this.throwsHistory;\r\n    player.win = this.win;\r\n    player.winDateTime = this.winDateTime;\r\n    player.first = this.first;\r\n    player.throwsHistory = [];\r\n    this.throwsHistory.forEach(throws => {\r\n      player.throwsHistory.push(throws.clone());\r\n    });\r\n    if (this.state) {\r\n      player.state = this.state.clone();\r\n    }\r\n    return player;\r\n  }\r\n}\r\n","import {FieldValue} from './field-value.model';\r\n\r\nexport abstract class PlaygroundState {\r\n\r\n  getFieldValue(list: FieldValue[], fieldIndex: number): FieldValue {\r\n    const filtered = list.filter(f => f.field === fieldIndex);\r\n    if (filtered.length === 0) {\r\n      list.push(new FieldValue(fieldIndex, 0));\r\n    }\r\n    return list.filter(f => f.field === fieldIndex)[0];\r\n  }\r\n\r\n  isInactive(): boolean {\r\n    return false;\r\n  }\r\n\r\n  abstract clone(): PlaygroundState;\r\n}\r\n","import { OnInit, Directive } from '@angular/core';\r\nimport {v4 as uuid} from 'uuid';\r\nimport {Player} from './player.model';\r\nimport {Throw} from './throw.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {GameService} from '~services/game.service';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {STAT_NAME_SEPARATOR, StatisticsService} from '~services/statistics.service';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\nimport {BotService, PLAYER_NAME} from '~services/bot.service';\r\nimport {BehaviorSubject} from 'rxjs';\r\n\r\nexport const FIELDS_COUNT = 21;\r\nconst MAXIMUM_NUMBER_OF_PLAYERS = 6;\r\n\r\n@Directive()\nexport abstract class Playground<T extends PlaygroundState> implements OnInit {\r\n\r\n  throwEnabled = true;\r\n  settingsOpen = true;\r\n  gameHistory: GameService[];\r\n  nextEnabled = true;\r\n  zeroEnabled = true;\r\n  multiEnabled = true;\r\n  playground = this;\r\n  multiplier: number;\r\n  extraEndingMsg: string;\r\n  gameStatistics: GameStatistics;\r\n  hasChanges = new BehaviorSubject<number>(Date.now());\r\n\r\n  protected constructor(public gameTitle: string,\r\n                        public application: ApplicationStateService,\r\n                        public game: GameService,\r\n                        public route: Router,\r\n                        public dialogService: DialogService,\r\n                        public soundService: SoundService,\r\n                        public botService: BotService,\r\n                        public statisticsService: StatisticsService,\r\n                        public gameName: string,\r\n                        public minimumNumberOfPlayers = 1,\r\n                        public maximumNumberOfPlayers?: number) {\r\n  }\r\n\r\n  static getFieldValueFromIndex(fieldIndex: number): number {\r\n    return fieldIndex === 20 ? 25 : fieldIndex + 1;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.settingsOpen = true;\r\n    this.extraEndingMsg = '';\r\n  }\r\n\r\n  throwNumber(args: number[]) {\r\n    const score = args[0];\r\n    const scoreReal = args[1];\r\n    if (this.throwEnabled) {\r\n      this.saveGameInHistory();\r\n      this.throwEnabled = false;\r\n      if (score === 25 && this.multiplier === 3) {\r\n        this.multiplier = 1;\r\n      }\r\n\r\n      const actualPlayer = this.game.getActualPlayer();\r\n      const fieldIndex = score === 25 ? 20 : score - 1;\r\n\r\n      actualPlayer.addThrowHistory(new Throw(score, this.multiplier, this.game.actualThrow));\r\n      if (this.game.actualThrow === 0) {\r\n        actualPlayer.throws = [];\r\n      }\r\n      actualPlayer.throws[this.game.actualThrow] = score * this.multiplier;\r\n      this.game.actualThrow++;\r\n\r\n      this.calculatePoints(actualPlayer, fieldIndex, score, scoreReal);\r\n      this.checkPlayerState(actualPlayer);\r\n\r\n      let gameEnded = false;\r\n      this.multiplier = 1;\r\n      const winners = this.game.players.filter(p => p.win);\r\n      if (winners.length > 0) {\r\n        if ((this.game.victoryFirst || this.game.getNumberOfPlayers() - winners.length <= 1) || !this.game.victoryFirst) {\r\n          const content = this.extraEndingMsg ? this.extraEndingMsg : 'Round: #' + (this.game.round + 1);\r\n          this.finishStatistics();\r\n          this.dialogService.openDialog('Game Over!', content, this.getTheFinalResult());\r\n          this.newGame(true);\r\n          gameEnded = true;\r\n        } else {\r\n          while (this.game.getActualPlayer().win) {\r\n            this.game.nextPlayer();\r\n          }\r\n        }\r\n      }\r\n\r\n      const activePlayers = this.game.players.filter(p => !this.getPlayerState(p) || !this.getPlayerState(p).isInactive());\r\n      if (!activePlayers.length) {\r\n        const content = this.extraEndingMsg ? this.extraEndingMsg : 'Round: #' + (this.game.round + 1);\r\n        this.finishStatistics();\r\n        this.dialogService.openDialog('Game Over!', content, this.getTheFinalResult());\r\n        this.newGame(true);\r\n        gameEnded = true;\r\n      }\r\n\r\n      this.throwEnabled = true;\r\n\r\n      if (!gameEnded && this.game.getActualPlayer().name.toLowerCase().indexOf(PLAYER_NAME) !== -1) {\r\n        this.botThrow();\r\n      }\r\n    }\r\n  }\r\n\r\n  getPlayerState(player: Player): T {\r\n    return player.state as T;\r\n  }\r\n\r\n  canAddPlayer(): boolean {\r\n    return this.game.getNumberOfPlayers() < MAXIMUM_NUMBER_OF_PLAYERS;\r\n  }\r\n\r\n  addPlayer(name: any) {\r\n    if (!!name.value.trim().length && !this.game.players.some(p => p.name === name.value)) {\r\n      this.game.players.push(new Player(uuid(), name.value));\r\n      this.application.storePlayer(name.value);\r\n    }\r\n    name.value = '';\r\n  }\r\n\r\n  removePlayer(player: Player) {\r\n    this.game.players = this.game.players.filter(p => p !== player);\r\n  }\r\n\r\n  newGame(rotate = false) {\r\n    this.settingsOpen = !this.playerSettingsValidation() || !this.customSettingsValidation();\r\n    if (!this.playerSettingsValidation()) {\r\n      let msg = 'Number of players are incorrect.';\r\n      if (this.minimumNumberOfPlayers) {\r\n        msg += ` (minimum: ${this.minimumNumberOfPlayers}`;\r\n      }\r\n      if (this.maximumNumberOfPlayers) {\r\n        msg += (this.minimumNumberOfPlayers ? ', ' : ' (') + `maximum: ${this.maximumNumberOfPlayers}).`;\r\n      } else {\r\n        msg += this.minimumNumberOfPlayers ? ').' : '.';\r\n      }\r\n      this.dialogService.openErrorDialog('Error!', msg);\r\n    } else if (this.settingsOpen) {\r\n      this.dialogService.openErrorDialog('Error!', 'Settings is incorrect.');\r\n    }\r\n    if (rotate) {\r\n      this.game.rotatePlayers();\r\n    }\r\n    this.reset();\r\n    this.hasChanges.next(Date.now());\r\n  }\r\n\r\n  triplePoint() {\r\n    this.multiplier = this.multiplier === 3 ? 1 : 3;\r\n  }\r\n\r\n  doublePoint() {\r\n    this.multiplier = this.multiplier === 2 ? 1 : 2;\r\n  }\r\n\r\n  undo() {\r\n    if (this.gameHistory.length > 0) {\r\n      this.game = this.gameHistory.pop();\r\n      this.hasChanges.next(Date.now());\r\n    }\r\n  }\r\n\r\n  skip() {\r\n    const actThrow = this.game.actualThrow;\r\n    this.throwNumber([0, 0]);\r\n    if (actThrow !== 2) {\r\n      this.skip();\r\n    }\r\n  }\r\n\r\n  reset() {\r\n    this.gameHistory = [];\r\n    this.game.resetScore();\r\n    this.multiplier = 1;\r\n    this.extraEndingMsg = '';\r\n    this.game.actualFieldIndex = 0;\r\n    this.customReset();\r\n    this.startStatistics();\r\n  }\r\n\r\n  quit() {\r\n    this.reset();\r\n    this.route.navigate(['/']);\r\n  }\r\n\r\n  customSettingsValidation(): boolean {\r\n    return true;\r\n  }\r\n\r\n  isFieldEnabled(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isSecondaryField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  isAlertField(fieldIndex: number): boolean {\r\n    return false;\r\n  }\r\n\r\n  getFieldIcon(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  getFieldNote(fieldIndex: number): string {\r\n    return '';\r\n  }\r\n\r\n  decoratePlayerStat(player: Player): string {\r\n    return player.name + STAT_NAME_SEPARATOR + player.score;\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return '';\r\n  }\r\n\r\n  botThrow() {\r\n  }\r\n\r\n  getGameStatistics(): PlayerStatistics[] {\r\n    const statistics = this.statisticsService.getGameStatistics(this.playground.gameName);\r\n    const players: PlayerStatistics[] = [];\r\n    statistics.forEach(stat => {\r\n      this.parseStatistics(stat, 'l', players);\r\n      this.parseStatistics(stat, 'w', players);\r\n    });\r\n    return players;\r\n  }\r\n\r\n  getGameHistory(): GameStatistics[] {\r\n    return this.statisticsService.getGameStatistics(this.playground.gameName);\r\n  }\r\n\r\n  getTheFinalResult(): Player[] {\r\n    let winners = this.game.players.filter(p => p.win);\r\n    winners = winners.sort((p1, p2) => p1.winDateTime < p2.winDateTime ? -1 : 1)\r\n      .slice(0, 1).map(p => p.clone());\r\n    const losers = this.game.players.filter(p => !winners.some(w => w.id === p.id))\r\n      .map(p => {\r\n        const c = p.clone();\r\n        c.win = false;\r\n        return c;\r\n      });\r\n    return [...winners, ...losers];\r\n  }\r\n\r\n  private startStatistics() {\r\n    this.gameStatistics = new GameStatistics();\r\n    this.gameStatistics.s = new Date().toISOString();\r\n    this.gameStatistics.g = this.gameName;\r\n  }\r\n\r\n  private finishStatistics() {\r\n    this.gameStatistics.f = new Date().toISOString();\r\n    this.gameStatistics.w = this.game.players.filter(p => p.win).map(p => this.decoratePlayerStat(p));\r\n    this.gameStatistics.l = this.game.players.filter(p => !p.win).map(p => this.decoratePlayerStat(p));\r\n    this.gameStatistics.r = this.game.round;\r\n    this.gameStatistics.c = this.getGameConfig();\r\n    this.statisticsService.saveStatistics(this.gameStatistics);\r\n  }\r\n\r\n  private parseStatistics(stat: GameStatistics, field: 'w' | 'l', players: PlayerStatistics[]) {\r\n    stat[field].forEach(p => {\r\n      const name = p.split(STAT_NAME_SEPARATOR)[0];\r\n      let player = players.find(pl => pl.n === name);\r\n      if (!player) {\r\n        player = {n: name, w: 0, l: 0};\r\n        players.push(player);\r\n      }\r\n      player[field]++;\r\n    });\r\n  }\r\n\r\n  private playerSettingsValidation(): boolean {\r\n    const players: Player[] = [];\r\n    this.game.players.forEach(player => {\r\n      if (player.name.length !== 0) {\r\n        players.push(player);\r\n      }\r\n    });\r\n    this.game.players = players;\r\n    return players.length >= this.minimumNumberOfPlayers &&\r\n      (!this.maximumNumberOfPlayers || players.length <= this.maximumNumberOfPlayers);\r\n  }\r\n\r\n  private saveGameInHistory() {\r\n    this.gameHistory.push(this.game.clone());\r\n  }\r\n\r\n  abstract customReset(): void;\r\n\r\n  abstract calculatePoints(player: Player, fieldIndex: number, score: number, scoreReal?: number);\r\n\r\n  abstract checkPlayerState(player: Player);\r\n}\r\n","export class Throw {\n  field: string;\n\n  constructor(public score: number, public multi: number, public order: number) {\n    this.field = this.score === 25 ? 'B' :  this.score + '';\n  }\n\n  clone(): Throw {\n    return new Throw(this.score, this.multi, this.order);\n  }\n}\n","import {Injectable} from '@angular/core';\r\nimport {ApplicationSettings} from '~models/application-settings.model';\r\nimport {theme} from '../../theme.constant';\r\nimport {Theme} from '~models/theme.model';\r\n\r\nconst APPLICATION_KEY = 'ApplicationSettings';\r\nconst PLAYER_KEY = 'Players';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class ApplicationStateService {\r\n\r\n  private availableThemes: Theme[] = [theme];\r\n  settings = new ApplicationSettings();\r\n  isMobile = false;\r\n\r\n  constructor() {\r\n    this.isMobile = window.innerWidth < 450;\r\n    const data = localStorage.getItem(APPLICATION_KEY);\r\n    if (data) {\r\n      this.settings = JSON.parse(data);\r\n    }\r\n    this.settings.details = this.isMobile ? 1 : 0;\r\n    // this.setTheme();\r\n  }\r\n\r\n  toggleColorTheme() {\r\n    this.settings.theme = (this.settings.theme + 1) % this.availableThemes.length;\r\n    this.setTheme();\r\n    this.saveSettings();\r\n  }\r\n\r\n  toggleDetails() {\r\n    this.settings.details = (this.settings.details + 1) % 2;\r\n    this.saveSettings();\r\n  }\r\n\r\n  getStoredPlayers(): string[] {\r\n    const data = localStorage.getItem(PLAYER_KEY);\r\n    if (data) {\r\n      return JSON.parse(data);\r\n    }\r\n    return [];\r\n  }\r\n\r\n  storePlayer(name: string) {\r\n    const players = [name, ...this.getStoredPlayers()].filter((v, i, a) => a.indexOf(v) === i);\r\n    localStorage.setItem(PLAYER_KEY, JSON.stringify(players));\r\n  }\r\n\r\n  private setTheme() {\r\n    if (this.settings.theme >= this.availableThemes.length) {\r\n      this.settings.theme = 0;\r\n    }\r\n    Object.keys(this.availableThemes[this.settings.theme].properties).forEach(property => {\r\n      document.documentElement.style.setProperty(\r\n        property,\r\n        this.availableThemes[this.settings.theme].properties[property]\r\n      );\r\n    });\r\n  }\r\n\r\n  private saveSettings() {\r\n    localStorage.setItem(APPLICATION_KEY, JSON.stringify(this.settings));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\nexport const PLAYER_NAME = 'phil';\r\nexport const PLAYER_DELAY = 1000;\r\nexport const PLAYER_DELAY_FAST = 500;\r\nconst MAX_LEVEL = 20;\r\nconst PLAYER_LEVEL = 9;\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class BotService {\r\n\r\n  calculateMultiTarget(targets: number[]): number  {\r\n    const random = Math.floor(Math.random() * targets.length);\r\n    return this.calculateTarget(targets[random]);\r\n  }\r\n\r\n  calculateTarget(target: number): number {\r\n    let actual = Math.floor(Math.random() * MAX_LEVEL) + 1;\r\n    actual = target === 20 ? (actual + 3) : actual;\r\n    if (actual <= PLAYER_LEVEL) {\r\n      return target;\r\n    } else {\r\n      const upOrBottomLine = Math.floor(Math.random() * 3);\r\n      const mistakeLevel = ((actual - PLAYER_LEVEL) > 4 ? 4 : (actual - PLAYER_LEVEL)) - 1;\r\n\r\n      if (mistakeLevel === 3) {\r\n        return 0;\r\n      }\r\n      return TARGET_MATRIX[target][mistakeLevel][upOrBottomLine] - 1;\r\n    }\r\n  }\r\n\r\n  isDoublePoint(): boolean {\r\n    return Math.floor(Math.random() * 100) < 15;\r\n  }\r\n\r\n  isTriplePoint(): boolean {\r\n    return Math.floor(Math.random() * 100) < 5;\r\n  }\r\n}\r\n\r\nconst TARGET_MATRIX = [\r\n  [ // 1\r\n    [20,18,5],\r\n    [5, 4, 12],\r\n    [12, 13, 7]\r\n  ],\r\n  [ // 2\r\n    [15, 17, 10],\r\n    [10, 3, 6],\r\n    [6, 19, 9]\r\n  ],\r\n  [ // 3\r\n    [17, 19, 2],\r\n    [2, 7, 15],\r\n    [15, 16, 5]\r\n  ],\r\n  [ // 4\r\n    [18, 13, 1],\r\n    [1, 6, 20],\r\n    [20, 10, 8]\r\n  ],\r\n  [ // 5\r\n    [12, 20, 9],\r\n    [9, 1, 14],\r\n    [14, 18, 2]\r\n  ],\r\n  [ // 6\r\n    [13, 10, 4],\r\n    [4, 15, 18],\r\n    [18, 2, 8]\r\n  ],\r\n  [ // 7\r\n    [19, 16, 8],\r\n    [3, 8, 17],\r\n    [17, 11, 1]\r\n  ],\r\n  [ // 8\r\n    [16, 11, 7],\r\n    [7, 14, 9],\r\n    [19, 9, 6]\r\n  ],\r\n  [ // 9\r\n    [14, 12, 11],\r\n    [11, 5, 20],\r\n    [8, 20, 10]\r\n  ],\r\n  [ // 10\r\n    [6, 15, 13],\r\n    [13, 2, 4],\r\n    [4, 17, 11]\r\n  ],\r\n  [ // 11\r\n    [8, 14, 16],\r\n    [16, 9, 12],\r\n    [7, 12, 10]\r\n  ],\r\n  [ // 12\r\n    [9, 5, 14],\r\n    [14, 20, 11],\r\n    [11, 1, 15]\r\n  ],\r\n  [ // 13\r\n    [4, 6, 18],\r\n    [18, 10, 15],\r\n    [1, 15, 16]\r\n  ],\r\n  [ // 14\r\n    [11, 9, 16],\r\n    [8, 12, 5],\r\n    [16, 5, 15]\r\n  ],\r\n  [ // 15\r\n    [10, 2, 6],\r\n    [6, 17, 13],\r\n    [13, 3, 14]\r\n  ],\r\n  [ // 16\r\n    [7, 8, 11],\r\n    [19, 11, 14],\r\n    [3, 14, 13]\r\n  ],\r\n  [ // 17\r\n    [2, 3, 15],\r\n    [15, 19, 7],\r\n    [10, 7, 12]\r\n  ],\r\n  [ // 18\r\n    [1, 4, 20],\r\n    [20, 13, 6],\r\n    [5, 6, 19]\r\n  ],\r\n  [ // 19\r\n    [3, 7, 17],\r\n    [17, 16, 8],\r\n    [2, 8, 18]\r\n  ],\r\n  [ // 20\r\n    [5, 1, 12],\r\n    [12, 18, 9],\r\n    [9, 4, 19]\r\n  ],\r\n  [ // BULL\r\n    [20, 3, 6],\r\n    [1, 19, 11],\r\n    [18, 7, 8]\r\n  ]\r\n];\r\n","import {Injectable} from '@angular/core';\r\nimport {MatDialog, MatDialogRef} from '@angular/material/dialog';\r\nimport {DialogComponent} from '~components/dialog/dialog.component';\r\nimport {Player} from '~models/player.model';\r\nimport {ConfirmDialogComponent} from '~components/confirm-dialog/confirm-dialog.component';\r\nimport {PlayerStatistics} from '~models/player-statistics.model';\r\nimport {GameStatisticsDialogComponent} from '~components/game-statistics-dialog/game-statistics-dialog.component';\r\nimport {GameHistoryDialogComponent} from '~components/game-history-dialog/game-history-dialog.component';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\nimport {GameTypeStatisticsDialogComponent} from '~components/game-type-statistics-dialog/game-type-statistics-dialog.component';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class DialogService {\r\n\r\n  constructor(private dialog: MatDialog) {\r\n  }\r\n\r\n  openDialog(title = '', content = '', players: Player[] = []): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'success-dialog',\r\n      data: {title, content, players},\r\n    });\r\n  }\r\n\r\n  openGameStatisticsDialog(statistics: PlayerStatistics[]) {\r\n    return this.dialog.open(GameStatisticsDialogComponent, {\r\n      data: {statistics},\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n  }\r\n\r\n  openGameHistory(statistics: GameStatistics[]) {\r\n    return this.dialog.open(GameHistoryDialogComponent, {\r\n      data: {statistics},\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n  }\r\n\r\n  openGameTypeStatistics(statistics: GameTypeStatistics[]) {\r\n    return this.dialog.open(GameTypeStatisticsDialogComponent, {\r\n      data: {statistics},\r\n      maxWidth: '100vw',\r\n      maxHeight: '100vh',\r\n      height: '100%',\r\n      width: '100%'\r\n    });\r\n  }\r\n\r\n  openErrorDialog(title = '', content = ''): MatDialogRef<DialogComponent> {\r\n    return this.dialog.open(DialogComponent, {\r\n      panelClass: 'error-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n\r\n  openConfirmDialog(title = '', content = ''): MatDialogRef<ConfirmDialogComponent> {\r\n    return this.dialog.open(ConfirmDialogComponent, {\r\n      panelClass: 'confirm-dialog',\r\n      data: {title, content, players: []},\r\n    });\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Player} from '../models/player.model';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class GameService {\r\n  players: Player[] = [];\r\n  actualPlayerIndex: number;\r\n  actualThrow: number;\r\n  actualFieldIndex = 0;\r\n  round: number;\r\n  victoryFirst = true;\r\n  numbs: number[] = [];\r\n\r\n  toggleVictoryFirst() {\r\n    this.victoryFirst = !this.victoryFirst;\r\n  }\r\n\r\n  isTheLastThrow(): boolean {\r\n    return this.actualThrow === 3;\r\n  }\r\n\r\n  getActualPlayer(): Player {\r\n    return this.players[this.actualPlayerIndex];\r\n  }\r\n\r\n  getActivePlayers(): Player[] {\r\n    return this.players.filter(p => !p.isInactive());\r\n  }\r\n\r\n  getNextPlayer(): Player {\r\n    let index = this.actualPlayerIndex + 1 === this.players.length ? 0 : this.actualPlayerIndex + 1;\r\n    while (this.players[index].isInactive()) {\r\n      index = index + 1 === this.players.length ? 0 : index + 1;\r\n    }\r\n    return this.players[index];\r\n  }\r\n\r\n  getPreviousPlayer(): Player {\r\n    let index = this.actualPlayerIndex === 0 ? this.players.length - 1 : this.actualPlayerIndex - 1;\r\n    while (this.players[index].isInactive()) {\r\n      index = index === 0 ? this.players.length - 1 : index - 1;\r\n    }\r\n    return this.players[index];\r\n  }\r\n\r\n  nextPlayer(): void {\r\n    if (this.isActualPlayerTheLast()) {\r\n      this.nextRound();\r\n    }\r\n    this.actualPlayerIndex = (this.actualPlayerIndex + 1) % this.getNumberOfPlayers();\r\n    this.actualThrow = 0;\r\n  }\r\n\r\n  getNumberOfPlayers(): number {\r\n    return this.players.length;\r\n  }\r\n\r\n  getTheFirstPlayer(): Player {\r\n    return this.players[0];\r\n  }\r\n\r\n  isTheFirstPlayer(player: Player): boolean {\r\n    return player.id === this.getTheFirstPlayer().id;\r\n  }\r\n\r\n  isActualPlayerIsTheFirst(): boolean {\r\n    return this.isTheFirstPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheLastPlayer(): Player {\r\n    return this.players[this.getNumberOfPlayers() - 1];\r\n  }\r\n\r\n  isTheLastPlayer(player: Player): boolean {\r\n    return player.id === this.getTheLastPlayer().id;\r\n  }\r\n\r\n  isActualPlayerTheLast(): boolean {\r\n    return this.isTheLastPlayer(this.getActualPlayer());\r\n  }\r\n\r\n  getTheBestPlayers(): Player[] {\r\n    const activePlayers = this.getActivePlayers();\r\n    const list = activePlayers.length ? activePlayers : this.players;\r\n    let max = list[0].score;\r\n    list.forEach(p => {\r\n      max = p.score > max ? p.score : max;\r\n    });\r\n    return list.filter(p => p.score === max);\r\n  }\r\n\r\n  getTheWorstPlayers(): Player[] {\r\n    const activePlayers = this.getActivePlayers();\r\n    const list = activePlayers.length ? activePlayers : this.players;\r\n    let min = list[0].score;\r\n    list.forEach(p => {\r\n      min = p.score < min ? p.score : min;\r\n    });\r\n    return list.filter(p => p.score === min);\r\n  }\r\n\r\n  isTheBestPlayer(actPlayer: Player): boolean {\r\n    const best = this.getTheBestPlayers();\r\n    return actPlayer.score === ((best && best.length) ? best[0].score : 0);\r\n  }\r\n\r\n  isTheWorstPlayer(actPlayer: Player): boolean {\r\n    let min = this.players[0].score;\r\n    this.players.forEach(player => {\r\n      min = player.score < min ? player.score : min;\r\n    });\r\n    return actPlayer.score === min;\r\n  }\r\n\r\n  nextRound(): void {\r\n    this.round++;\r\n  }\r\n\r\n  resetScore(): void {\r\n    this.players.forEach(player => player.reset());\r\n    this.actualPlayerIndex = 0;\r\n    this.actualThrow = 0;\r\n    this.round = 0;\r\n  }\r\n\r\n  rotatePlayers(): void {\r\n    this.players.push(this.players.shift());\r\n  }\r\n\r\n  clone(): GameService {\r\n    const game = new GameService();\r\n    game.actualPlayerIndex = this.actualPlayerIndex;\r\n    game.actualThrow = this.actualThrow;\r\n    game.actualFieldIndex = this.actualFieldIndex;\r\n    game.round = this.round;\r\n    game.numbs = this.numbs.map(n => n);\r\n    const players: Player[] = [];\r\n    this.players.forEach(player => {\r\n      players.push(player.clone());\r\n    });\r\n    game.players = players;\r\n    return game;\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class SoundService {\r\n\r\n  audioElement: HTMLAudioElement;\r\n\r\n  no() {\r\n    // this.play('oh_no.mp3');\r\n  }\r\n\r\n  private play(soundFileName: string) {\r\n    this.audioElement.src = `assets/sounds/${soundFileName}`;\r\n    this.audioElement.play();\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {StorageService} from '~services/storage.service';\r\nimport {GameStatistics} from '~models/game-statistics.model';\r\nimport {GameTypeStatistics} from '~models/game-type-statistics.model';\r\n\r\nexport const STAT_NAME_SEPARATOR = '____';\r\nconst STATISTICS_STORAGE_KEY = 'statistics';\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class StatisticsService {\r\n\r\n  constructor(private readonly storageService: StorageService) {\r\n  }\r\n\r\n  saveStatistics(statistics: GameStatistics) {\r\n    const stat = this.storageService.getObject(STATISTICS_STORAGE_KEY);\r\n    if (stat) {\r\n      stat.push(statistics);\r\n      this.storageService.setObject(STATISTICS_STORAGE_KEY, stat);\r\n    } else {\r\n      this.storageService.setObject(STATISTICS_STORAGE_KEY, [statistics]);\r\n    }\r\n  }\r\n\r\n  getGameStatistics(gameName?: string): GameStatistics[] {\r\n    let statistics = this.storageService.getObject(STATISTICS_STORAGE_KEY);\r\n    if (!statistics) {\r\n      statistics = [];\r\n    }\r\n    return gameName ? statistics.filter(i => i.g === gameName) : statistics;\r\n  }\r\n\r\n  getPlayerStatistics(playerName: string, gameName?: string): GameStatistics[] {\r\n    const playerStat = this.storageService.getObject(STATISTICS_STORAGE_KEY).filter(i =>\r\n      i.l.some(p => p.indexOf(playerName) !== -1) ||\r\n      i.w.some(p => p.indexOf(playerName) !== -1));\r\n    return gameName ? playerStat.filter(i => i.g === gameName) : playerStat;\r\n  }\r\n\r\n  getGameTypeStatistics(): GameTypeStatistics[] {\r\n    let statistics = this.storageService.getObject(STATISTICS_STORAGE_KEY) as GameStatistics[];\r\n    const games: GameTypeStatistics[] = [];\r\n    if (!statistics) {\r\n      statistics = [];\r\n    }\r\n    statistics.forEach(s => {\r\n      let type = games.find(g => g.name === s.g);\r\n      if (!type) {\r\n        type = {name: s.g, count: 0};\r\n        games.push(type);\r\n      }\r\n      type.count++;\r\n    });\r\n    return games;\r\n  }\r\n\r\n  printStatistics() {\r\n    console.log(JSON.stringify(this.storageService.getObject(STATISTICS_STORAGE_KEY)));\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class StorageService {\n\n  storage: Storage;\n\n  constructor() {\n    this.storage = localStorage;\n  }\n\n  hasItem(key: string): boolean {\n    return !!this.getItem(key);\n  }\n\n  getItem(key: string): string {\n    return this.storage.getItem(key);\n  }\n\n  getObject(key: string): any {\n    return JSON.parse(this.getItem(key));\n  }\n\n  setItem(key: string, value: string) {\n    this.storage.setItem(key, value);\n  }\n\n  setObject(key: string, value: any) {\n    this.setItem(key, JSON.stringify(value));\n  }\n\n  removeItem(key: string) {\n    this.storage.removeItem(key);\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {FormsModule} from '@angular/forms';\nimport {CommonModule} from '@angular/common';\nimport {MaterialModule} from '../material.module';\nimport {DialogComponent} from '~components/dialog/dialog.component';\nimport {GameToolbarComponent} from '~components/game-toolbar/game-toolbar.component';\nimport {NumberPlateComponent} from '~components/number-plate/number-plate.component';\nimport {PlayerSettingsComponent} from '~components/player-settings/player-settings.component';\nimport {SettingsComponent} from '~components/settings/settings.component';\nimport {PlayerScoreComponent} from '~components/player-score/player-score.component';\nimport {ConfirmDialogComponent} from '~components/confirm-dialog/confirm-dialog.component';\nimport {GameStatisticsDialogComponent} from '~components/game-statistics-dialog/game-statistics-dialog.component';\nimport {GameHistoryDialogComponent} from '~components/game-history-dialog/game-history-dialog.component';\nimport {GameTypeStatisticsDialogComponent} from '~components/game-type-statistics-dialog/game-type-statistics-dialog.component';\nimport {MenuComponent} from '~components/menu/menu.component';\nimport {RouterModule} from '@angular/router';\nimport {NumberPlateVisualComponent} from '~components/number-plate-visual/number-plate-visual.component';\nimport {NumberPlateShanghaiComponent} from '~components/number-plate-shanghai/number-plate-shanghai.component';\n\nconst components = [NumberPlateComponent, GameToolbarComponent, GameStatisticsDialogComponent, NumberPlateShanghaiComponent,\n  DialogComponent, PlayerSettingsComponent, SettingsComponent, PlayerScoreComponent, ConfirmDialogComponent, NumberPlateVisualComponent,\n  GameHistoryDialogComponent, GameTypeStatisticsDialogComponent, MenuComponent];\n\n@NgModule({\r\n    imports: [CommonModule, MaterialModule, RouterModule],\r\n    declarations: components,\r\n    exports: [CommonModule, FormsModule, MaterialModule, ...components]\r\n})\nexport class SharedModule {\n}\n","import {Theme} from '~models/theme.model';\r\n\r\nexport const theme: Theme = {\r\n  properties: {\r\n  }\r\n};\r\n","export class X01Settings {\n\n  startValue = 201;\n  start = 1;\n  checkout = 2;\n  punishment = false;\n  saboteur = true;\n\n  isNormalStart(): boolean {\n    return this.start === 1;\n  }\n\n  isDoubleStart(): boolean {\n    return this.start === 2;\n  }\n\n  isTripleStart(): boolean {\n    return this.start === 3;\n  }\n\n  isNormalCheckout(): boolean {\n    return this.checkout === 1;\n  }\n\n  isDoubleCheckout(): boolean {\n    return this.checkout === 2;\n  }\n\n  isTripleCheckout(): boolean {\n    return this.checkout === 3;\n  }\n\n  isHighScoreGame(): boolean {\n    return this.checkout === 4;\n  }\n\n  setStart(start: number) {\n    this.start = start;\n  }\n\n  setCheckout(checkout: number) {\n    this.checkout = checkout;\n  }\n\n  setStartValue(startValue: number) {\n    this.startValue = startValue;\n  }\n\n  togglePunishment() {\n    this.punishment = !this.punishment;\n    if (this.punishment) {\n      this.saboteur = false;\n    }\n  }\n\n  toggleSaboteur() {\n    this.saboteur = !this.saboteur;\n    if (this.saboteur) {\n      this.punishment = false;\n    }\n  }\n}\n","import {Component} from '@angular/core';\r\nimport {Playground} from '~models/playground.model';\r\nimport {GameService} from '~services/game.service';\r\nimport {Player} from '~models/player.model';\r\nimport {Router} from '@angular/router';\r\nimport {PlaygroundState} from '~models/playground-state.model';\r\nimport {DialogService} from '~services/dialog.service';\r\nimport {slideInAnimation} from '../route-animation';\r\nimport {ApplicationStateService} from '~services/application-state.service';\r\nimport {X01Settings} from './models/x01.settings.model';\r\nimport {SoundService} from '~services/sound.service';\r\nimport {StatisticsService} from '~services/statistics.service';\r\nimport {BotService, PLAYER_DELAY} from '~services/bot.service';\r\n\r\n@Component({\r\n  templateUrl: './x01.component.html',\r\n  animations: [slideInAnimation],\r\n})\r\nexport class X01Component extends Playground<PlaygroundState> {\r\n\r\n  settings: X01Settings;\r\n\r\n  constructor(application: ApplicationStateService, game: GameService, route: Router,\r\n              dialogService: DialogService, soundService: SoundService, botService: BotService, statisticsService: StatisticsService) {\r\n    super('X01', application, game, route, dialogService, soundService, botService, statisticsService, 'x01');\r\n    this.settings = new X01Settings();\r\n  }\r\n\r\n  calculatePoints(player: Player, fieldIndex: number, score: number) {\r\n    const validStart = !player.first || this.settings.isNormalStart()\r\n      || (player.first\r\n        && ((this.settings.isDoubleStart() && this.multiplier === 2)\r\n          || (this.settings.isTripleStart() && this.multiplier === 3)));\r\n    if (validStart) {\r\n      const actualScore = score * this.multiplier;\r\n      player.first = false;\r\n      player.score -= actualScore;\r\n    }\r\n  }\r\n\r\n  checkPlayerState(player: Player) {\r\n    let next = false;\r\n    if (this.settings.saboteur || this.settings.punishment) {\r\n      this.game.players.filter(p => p.id !== player.id && p.score === player.score).forEach(p => {\r\n        if (this.settings.saboteur) {\r\n          p.score = this.settings.startValue;\r\n        } else {\r\n          player.score = this.settings.startValue;\r\n        }\r\n      });\r\n    }\r\n    if ((this.settings.isHighScoreGame() && player.score <= 0) ||\r\n      ((player.score === 0 && (this.settings.isNormalCheckout()\r\n        || (this.settings.isDoubleCheckout() && this.multiplier === 2)\r\n        || (this.settings.isTripleCheckout() && this.multiplier === 3))))) {\r\n      player.setWin();\r\n      next = true;\r\n    } else if (player.score <= 0\r\n      || (this.settings.isDoubleCheckout() && player.score < 2)\r\n      || (this.settings.isTripleCheckout() && player.score < 3)) {\r\n      player.throws.forEach(t => player.score += t);\r\n      next = true;\r\n      this.dialogService.openErrorDialog(`${this.game.getActualPlayer().name} busted!`);\r\n    }\r\n    if (this.game.isTheLastThrow() || next) {\r\n      this.game.nextPlayer();\r\n    }\r\n  }\r\n\r\n  customReset() {\r\n    this.game.players.forEach(player => player.score = this.settings.startValue);\r\n  }\r\n\r\n  getGameConfig(): string {\r\n    return this.settings.startValue + '';\r\n  }\r\n\r\n  botThrow() {\r\n    let target = Math.floor(Math.random() * 10) + 10;\r\n\r\n    if (!this.settings.isHighScoreGame()) {\r\n      const player = this.game.getActualPlayer();\r\n      if (player.score <= 20) {\r\n        if (this.settings.isNormalCheckout()) {\r\n          target = player.score - 1;\r\n        } else if (this.settings.isDoubleCheckout() && (player.score % 2) === 0) {\r\n          target = player.score / 2 - 1;\r\n          this.doublePoint();\r\n        } else if (this.settings.isDoubleCheckout() && (player.score % 2) === 1) {\r\n          target = 0;\r\n        } else if (this.settings.isTripleCheckout() && (player.score % 3) === 0) {\r\n          target = player.score / 3 - 1;\r\n          this.triplePoint();\r\n        } else if (this.settings.isTripleCheckout() && (player.score % 3) === 1) {\r\n          target = 0;\r\n        } else if (this.settings.isTripleCheckout() && (player.score % 3) === 2) {\r\n          target = 1;\r\n        }\r\n      }\r\n    } else {\r\n      if (this.botService.isDoublePoint()) {\r\n        this.doublePoint();\r\n      } else if (this.botService.isTriplePoint()) {\r\n        this.triplePoint();\r\n      }\r\n    }\r\n    const index = this.botService.calculateTarget(target);\r\n    setTimeout(() => {\r\n      this.throwNumber([this.isFieldEnabled(index) ? Playground.getFieldValueFromIndex(index) : 0,\r\n        Playground.getFieldValueFromIndex(index)]);\r\n    }, PLAYER_DELAY);\r\n  }\r\n\r\n  getInfo(): number {\r\n    return  this.game.getActualPlayer().score;\r\n  }\r\n\r\n  isPrimaryField(fieldIndex: number): boolean {\r\n    return true;\r\n  }\r\n}\r\n","<div id=\"playgroundContent\">\n\n  <app-settings *ngIf=\"settingsOpen\" [playground]=\"playground\">\n    <h2>Games</h2>\n    <button class=\"button\" [class.primary]=\"settings.startValue===101\"\n            (click)=\"settings.setStartValue(101)\">101\n    </button>\n    <button class=\"button\" [class.primary]=\"settings.startValue===201\"\n            (click)=\"settings.setStartValue(201)\">201\n    </button>\n    <button class=\"button\" [class.primary]=\"settings.startValue===301\"\n            (click)=\"settings.setStartValue(301)\">301\n    </button>\n    <button class=\"button\" [class.primary]=\"settings.startValue===501\"\n            (click)=\"settings.setStartValue(501)\">501\n    </button>\n    <button class=\"button\" [class.primary]=\"settings.startValue===701\"\n            (click)=\"settings.setStartValue(701)\">701\n    </button>\n    <button class=\"button\" [class.primary]=\"settings.startValue===901\"\n            (click)=\"settings.setStartValue(901)\">901\n    </button>\n\n    <mat-divider></mat-divider>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.saboteur\" (click)=\"settings.toggleSaboteur()\">\n      Saboteur\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.punishment\" (click)=\"settings.togglePunishment()\">\n      Punishment\n    </button>\n    <mat-divider></mat-divider>\n\n    <h2>Check In</h2>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.start===1\"\n            (click)=\"settings.setStart(1)\">Normal\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.start===2\"\n            (click)=\"settings.setStart(2)\">Double\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.start===3\"\n            (click)=\"settings.setStart(3)\">Triple\n    </button>\n    <mat-divider></mat-divider>\n\n    <h2>Check Out</h2>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.checkout===1\"\n            (click)=\"settings.setCheckout(1)\">Single\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.checkout===2\"\n            (click)=\"settings.setCheckout(2)\">Double\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.checkout===3\"\n            (click)=\"settings.setCheckout(3)\">Triple\n    </button>\n    <button class=\"button shortmedium\" [class.primary]=\"settings.checkout===4\"\n            (click)=\"settings.setCheckout(4)\">High Score\n    </button>\n  </app-settings>\n\n  <div class=\"side-left\" [class.detailed]=\"application.settings.details\">\n    <app-game-toolbar [playground]=\"playground\" *ngIf=\"!settingsOpen\" [info]=\"getInfo()\"></app-game-toolbar>\n    <div class=\"player_container\" *ngIf=\"!settingsOpen\">\n      <div class=\"player {{(i === game.actualPlayerIndex) ? 'highlighted' : ''}}\"\n           *ngFor=\"let player of game.players; let i = index\">\n        <app-player-score [player]=\"player\" [hasContent]=\"false\"></app-player-score>\n      </div>\n    </div>\n  </div>\n  <app-number-plate-visual [playground]=\"playground\" *ngIf=\"!settingsOpen && !application.settings.details\">\n  </app-number-plate-visual>\n  <app-number-plate [playground]=\"playground\" *ngIf=\"!settingsOpen && application.settings.details\"></app-number-plate>\n</div>\n","import {NgModule} from '@angular/core';\r\nimport {RouterModule} from '@angular/router';\r\nimport {X01Component} from './x01.component';\r\nimport {SharedModule} from '../shared/shared.module';\r\n\r\n@NgModule({\r\n  imports: [\r\n    SharedModule,\r\n    RouterModule.forChild([\r\n      {path: '', component: X01Component}\r\n    ])\r\n  ],\r\n  declarations: [X01Component]\r\n})\r\nexport class X01Module {\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  appVersion: require('../../package.json').version,\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"names":["routes","path","data","name","color","icon","bot","MenuComponent","X01Module","CricketModule","AroundClockModule","ShanghaiModule","KillerModule","FivesModule","HareAndHoundModule","KnockoutModule","CaptureTheFlagModule","ImitatorModule","ScamModule","DuelModule","component","loadChildren","redirectTo","slideInAnimation","AppComponent","constructor","application","soundService","ngAfterViewInit","audioElement","audioElementRef","nativeElement","selectors","viewQuery","i0","ctx","BrowserModule","BrowserAnimationsModule","SharedModule","RouterModule","AppModule","bootstrap","forRoot","declarations","imports","exports","Playground","AroundClockState","AroundClockSettings","PLAYER_DELAY","AroundClockComponent","game","route","dialogService","botService","statisticsService","settings","calculatePoints","player","fieldIndex","score","scoreReal","state","getPlayerState","originalMulti","multiplier","targetedField","getFieldIndex","actFieldIndex","hasChanges","handlePromoterSaboteur","throwsHistory","length","fields","increaseActFieldIndex","jump","checkPlayerState","setWin","isTheLastThrow","punishment","life","multi","i","t","decreaseActFieldIndex","no","nextPlayer","firstDeath","activePlayers","players","filter","p","isInactive","getTheBestPlayers","forEach","getActualPlayer","botThrow","target","index","calculateTarget","isDoublePoint","doublePoint","isTriplePoint","triplePoint","setTimeout","throwNumber","isFieldEnabled","getFieldValueFromIndex","getDistanceFromRandom","style","bullPos","findIndex","f","playerPos","diff","toggleHiddenInfo","hiddenInfo","some","isPrimaryField","isSecondaryField","getFieldNote","owners","map","substr","join","customReset","setStyle","decoratePlayerStat","max","saboteur","promoter","realFieldIndex","id","otherPlayer","otherPlayerState","palFirst","features","decls","vars","consts","template","forChild","FIELDS_COUNT","getBaseFields","getClockFields","getAnticlockFields","getRandom","reverse","slice","getRecurrence","getPirate","getTripleClockFields","getZoneClockFields","toggleFirstDeath","togglePalFirst","toggleJump","togglePunishment","toggleTreeLives","toggleFiveLives","toggleSevenLives","toggleTenLives","toggleSaboteur","togglePromoter","setFavorite","setInverseFavorite","Array","keys","size","randomFields","random","Math","floor","push","PlaygroundState","value","clone","CaptureTheFlagState","CaptureTheFlagSettings","CaptureTheFlagComponent","isActiveField","increaseFieldCount","getFieldCount","noScore","checkWinner","actualFieldIndex","isTheBestPlayer","getFieldValue","fieldCount","str","min","randomCity","randomCountry","randomContinent","customSettingsValidation","indexOf","find","getTheFinalResult","winners","win","losers","w","c","getGameConfig","total","sum","reduce","a","b","toggleNoScore","sort","Number","field","getActFieldIndex","fv","CricketSettings","CricketState","CricketComponent","isFieldClosed","playerFieldCount","isBlackOutGame","isFieldDoneForPlayer","isFieldClosedForOthers","setFieldCount","punishPlayers","getPlayerTotal","punishStyle","isPunishGame","isPlayerDone","isTheWorstPlayer","getPunishScore","isNoScoreGame","getFieldScore","getPlayerToDisplay","remaining","padStart","toUpperCase","changePlayerToDisplay","playerToDisplay","getPlayerTotalForPunishGame","isScoreGame","getPlayerTotalForScoreGame","getPunishCount","setPunishCount","closed","done","defaultSet","numbs","initFields","randomize","maxField","n","all","setAllowedField","small","high","black","white","cross","top","bottom","left","right","odd","even","prime","notPrime","getNumbers","numbers","isFieldAllowed","setNumber","punishCount","DuelSettings","DuelState","DuelComponent","actualScore","ownFields","isNotOwnField","handover","targetPoint","isAlertField","startPoint","toggleHandOver","FivesSettings","FivesComponent","divider","noCheat","actualThrow","mod","getThrowsTotal","limit","getSelectableDividers","getSelectableLimits","setDivider","setLimit","toggleNoCheat","HareAndHoundSettings","HareAndHoundState","STAT_NAME_SEPARATOR","HareAndHoundComponent","isHare","getHareStartIndex","getFieldIcon","houndStartIndex","getFields","hareStartIndex","getSelectableHoundStart","setHoundStart","ImitatorSettings","ImitatorState","ImitatorComponent","nextEnabled","punished","newScore","newFieldIndex","isTheLastPlayer","round","setRound","r","KillerState","KillerSettings","DANGER_ZONE_ICON","KillerComponent","zeroEnabled","multiEnabled","actField","isActualPlayerTheLast","killer","suicide","extraEndingMsg","numberOfLives","s","boarding","getAllEnabledFields","owner","shortName","getPlayerField","boardingLimit","toggleSuicide","KnockoutSettings","KnockoutState","KnockoutComponent","getPreviousPlayer","getNextPlayer","getActivePlayers","getInfo","toggleKiller","MatDialogModule","MatButtonModule","MatIconModule","MatInputModule","MatDividerModule","MatAutocompleteModule","materialImports","MaterialModule","animate","animateChild","group","query","transition","trigger","position","width","optional","ScamSettings","toggleStopper","stopper","toggleReverse","ScamState","PLAYER_DELAY_FAST","ScamComponent","isTheFirstPlayer","punishmentValue","scr","bests","calculateMultiTarget","getPunishValue","ShanghaiSettings","halveIt","resetIt","rand","toggleHalveIt","toggleResetIt","ShanghaiState","fieldScore","increaseFieldScore","ShanghaiComponent","gameEnded","getActualFieldIndex","MAT_DIALOG_DATA","ConfirmDialogComponent","dialogRef","cancel","close","confirm","DialogComponent","environment","GameHistoryDialogComponent","statistics","Date","getTime","getDuration","stat","getPlayers","pna","split","result","getAppVersion","appVersion","GameStatisticsDialogComponent","getRatio","l","GameToolbarComponent","quit","showConfirmation","navigate","playground","resetScore","newGame","showSettings","reset","settingsOpen","undo","content","callback","gameHistory","openConfirmDialog","afterClosed","subscribe","getRound","reversRound","inputs","info","GameTypeStatisticsDialogComponent","count","router","dialog","applicationStateService","randomGame","getGameList","openGameTypeStatistics","getGameTypeStatistics","openGameStatistics","openGameHistory","getGameStatistics","NumberPlateShanghaiComponent","next","skip","actualIndex","d3","Subject","takeUntil","ARC_WIDTH","NumberPlateVisualComponent","ngOnInit","drawTable","pipe","ngUnsubscribeHasChange","flag","ngOnDestroy","complete","select","remove","svg","append","attr","bullIndex","drawArc","PI","colorSlice","colorSliceMulti","startAngle","endAngle","drawText","getNumberColor","isNumberDisabled","document","querySelector","classList","add","throwZero","text","rotate","x","y","className","onclick","on","innerRadius","outerRadius","styleClass","arc","drawArcPosition","radius","NumberPlateComponent","PlayerScoreComponent","hasContent","scoreDisplayed","lifeDisplayed","highlighted","PlayerSettingsComponent","storedPlayers","getStoredPlayers","getOptions","o","addPlayer","playerNameInput","playerSelected","event","option","blur","SettingsComponent","openStatistics","openGameStatisticsDialog","openHistory","getGameHistory","ngContentSelectors","ApplicationSettings","FieldValue","GameStatistics","Player","winDateTime","throws","addThrowHistory","thr","first","list","filtered","v4","uuid","Throw","PLAYER_NAME","BehaviorSubject","MAXIMUM_NUMBER_OF_PLAYERS","gameTitle","gameName","minimumNumberOfPlayers","maximumNumberOfPlayers","now","args","throwEnabled","saveGameInHistory","actualPlayer","victoryFirst","getNumberOfPlayers","finishStatistics","openDialog","toLowerCase","canAddPlayer","trim","storePlayer","removePlayer","playerSettingsValidation","msg","openErrorDialog","rotatePlayers","pop","actThrow","startStatistics","parseStatistics","p1","p2","gameStatistics","toISOString","g","saveStatistics","pl","order","theme","APPLICATION_KEY","PLAYER_KEY","ApplicationStateService","isMobile","window","innerWidth","localStorage","getItem","JSON","parse","details","toggleColorTheme","availableThemes","setTheme","saveSettings","toggleDetails","v","setItem","stringify","Object","properties","property","documentElement","setProperty","factory","providedIn","MAX_LEVEL","PLAYER_LEVEL","BotService","targets","actual","upOrBottomLine","mistakeLevel","TARGET_MATRIX","DialogService","title","open","panelClass","maxWidth","maxHeight","height","GameService","toggleVictoryFirst","actualPlayerIndex","nextRound","getTheFirstPlayer","isActualPlayerIsTheFirst","getTheLastPlayer","getTheWorstPlayers","actPlayer","best","shift","SoundService","play","soundFileName","src","STATISTICS_STORAGE_KEY","StatisticsService","storageService","getObject","setObject","getPlayerStatistics","playerName","playerStat","games","type","printStatistics","console","log","StorageService","storage","hasItem","key","removeItem","FormsModule","CommonModule","components","X01Settings","isNormalStart","start","isDoubleStart","isTripleStart","isNormalCheckout","checkout","isDoubleCheckout","isTripleCheckout","isHighScoreGame","setStart","setCheckout","setStartValue","startValue","X01Component","validStart","require","version","production","enableProdMode","__NgCli_bootstrap_1","bootstrapModule","catch","err","error"],"sourceRoot":"webpack:///","x_google_ignoreList":[]}